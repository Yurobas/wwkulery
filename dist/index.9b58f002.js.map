{"mappings":"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","sources":["src/js/swiper.js"],"sourcesContent":["/**\r\n * Swiper 8.0.0\r\n * Most modern mobile touch slider and framework with hardware accelerated transitions\r\n * https://swiperjs.com\r\n *\r\n * Copyright 2014-2022 Vladimir Kharlampidi\r\n *\r\n * Released under the MIT License\r\n *\r\n * Released on: February 1, 2022\r\n */\r\n\r\n (function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n  typeof define === 'function' && define.amd ? define(factory) :\r\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Swiper = factory());\r\n})(this, (function () { 'use strict';\r\n\r\n  /**\r\n   * SSR Window 4.0.2\r\n   * Better handling for window object in SSR environment\r\n   * https://github.com/nolimits4web/ssr-window\r\n   *\r\n   * Copyright 2021, Vladimir Kharlampidi\r\n   *\r\n   * Licensed under MIT\r\n   *\r\n   * Released on: December 13, 2021\r\n   */\r\n\r\n  /* eslint-disable no-param-reassign */\r\n  function isObject$1(obj) {\r\n    return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\r\n  }\r\n\r\n  function extend$1(target, src) {\r\n    if (target === void 0) {\r\n      target = {};\r\n    }\r\n\r\n    if (src === void 0) {\r\n      src = {};\r\n    }\r\n\r\n    Object.keys(src).forEach(key => {\r\n      if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {\r\n        extend$1(target[key], src[key]);\r\n      }\r\n    });\r\n  }\r\n\r\n  const ssrDocument = {\r\n    body: {},\r\n\r\n    addEventListener() {},\r\n\r\n    removeEventListener() {},\r\n\r\n    activeElement: {\r\n      blur() {},\r\n\r\n      nodeName: ''\r\n    },\r\n\r\n    querySelector() {\r\n      return null;\r\n    },\r\n\r\n    querySelectorAll() {\r\n      return [];\r\n    },\r\n\r\n    getElementById() {\r\n      return null;\r\n    },\r\n\r\n    createEvent() {\r\n      return {\r\n        initEvent() {}\r\n\r\n      };\r\n    },\r\n\r\n    createElement() {\r\n      return {\r\n        children: [],\r\n        childNodes: [],\r\n        style: {},\r\n\r\n        setAttribute() {},\r\n\r\n        getElementsByTagName() {\r\n          return [];\r\n        }\r\n\r\n      };\r\n    },\r\n\r\n    createElementNS() {\r\n      return {};\r\n    },\r\n\r\n    importNode() {\r\n      return null;\r\n    },\r\n\r\n    location: {\r\n      hash: '',\r\n      host: '',\r\n      hostname: '',\r\n      href: '',\r\n      origin: '',\r\n      pathname: '',\r\n      protocol: '',\r\n      search: ''\r\n    }\r\n  };\r\n\r\n  function getDocument() {\r\n    const doc = typeof document !== 'undefined' ? document : {};\r\n    extend$1(doc, ssrDocument);\r\n    return doc;\r\n  }\r\n\r\n  const ssrWindow = {\r\n    document: ssrDocument,\r\n    navigator: {\r\n      userAgent: ''\r\n    },\r\n    location: {\r\n      hash: '',\r\n      host: '',\r\n      hostname: '',\r\n      href: '',\r\n      origin: '',\r\n      pathname: '',\r\n      protocol: '',\r\n      search: ''\r\n    },\r\n    history: {\r\n      replaceState() {},\r\n\r\n      pushState() {},\r\n\r\n      go() {},\r\n\r\n      back() {}\r\n\r\n    },\r\n    CustomEvent: function CustomEvent() {\r\n      return this;\r\n    },\r\n\r\n    addEventListener() {},\r\n\r\n    removeEventListener() {},\r\n\r\n    getComputedStyle() {\r\n      return {\r\n        getPropertyValue() {\r\n          return '';\r\n        }\r\n\r\n      };\r\n    },\r\n\r\n    Image() {},\r\n\r\n    Date() {},\r\n\r\n    screen: {},\r\n\r\n    setTimeout() {},\r\n\r\n    clearTimeout() {},\r\n\r\n    matchMedia() {\r\n      return {};\r\n    },\r\n\r\n    requestAnimationFrame(callback) {\r\n      if (typeof setTimeout === 'undefined') {\r\n        callback();\r\n        return null;\r\n      }\r\n\r\n      return setTimeout(callback, 0);\r\n    },\r\n\r\n    cancelAnimationFrame(id) {\r\n      if (typeof setTimeout === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      clearTimeout(id);\r\n    }\r\n\r\n  };\r\n\r\n  function getWindow() {\r\n    const win = typeof window !== 'undefined' ? window : {};\r\n    extend$1(win, ssrWindow);\r\n    return win;\r\n  }\r\n\r\n  /**\r\n   * Dom7 4.0.4\r\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\r\n   * https://framework7.io/docs/dom7.html\r\n   *\r\n   * Copyright 2022, Vladimir Kharlampidi\r\n   *\r\n   * Licensed under MIT\r\n   *\r\n   * Released on: January 11, 2022\r\n   */\r\n  /* eslint-disable no-proto */\r\n\r\n  function makeReactive(obj) {\r\n    const proto = obj.__proto__;\r\n    Object.defineProperty(obj, '__proto__', {\r\n      get() {\r\n        return proto;\r\n      },\r\n\r\n      set(value) {\r\n        proto.__proto__ = value;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  class Dom7 extends Array {\r\n    constructor(items) {\r\n      if (typeof items === 'number') {\r\n        super(items);\r\n      } else {\r\n        super(...(items || []));\r\n        makeReactive(this);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  function arrayFlat(arr) {\r\n    if (arr === void 0) {\r\n      arr = [];\r\n    }\r\n\r\n    const res = [];\r\n    arr.forEach(el => {\r\n      if (Array.isArray(el)) {\r\n        res.push(...arrayFlat(el));\r\n      } else {\r\n        res.push(el);\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n\r\n  function arrayFilter(arr, callback) {\r\n    return Array.prototype.filter.call(arr, callback);\r\n  }\r\n\r\n  function arrayUnique(arr) {\r\n    const uniqueArray = [];\r\n\r\n    for (let i = 0; i < arr.length; i += 1) {\r\n      if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\r\n    }\r\n\r\n    return uniqueArray;\r\n  }\r\n\r\n\r\n  function qsa(selector, context) {\r\n    if (typeof selector !== 'string') {\r\n      return [selector];\r\n    }\r\n\r\n    const a = [];\r\n    const res = context.querySelectorAll(selector);\r\n\r\n    for (let i = 0; i < res.length; i += 1) {\r\n      a.push(res[i]);\r\n    }\r\n\r\n    return a;\r\n  }\r\n\r\n  function $(selector, context) {\r\n    const window = getWindow();\r\n    const document = getDocument();\r\n    let arr = [];\r\n\r\n    if (!context && selector instanceof Dom7) {\r\n      return selector;\r\n    }\r\n\r\n    if (!selector) {\r\n      return new Dom7(arr);\r\n    }\r\n\r\n    if (typeof selector === 'string') {\r\n      const html = selector.trim();\r\n\r\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\r\n        let toCreate = 'div';\r\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\r\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\r\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\r\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\r\n        if (html.indexOf('<option') === 0) toCreate = 'select';\r\n        const tempParent = document.createElement(toCreate);\r\n        tempParent.innerHTML = html;\r\n\r\n        for (let i = 0; i < tempParent.childNodes.length; i += 1) {\r\n          arr.push(tempParent.childNodes[i]);\r\n        }\r\n      } else {\r\n        arr = qsa(selector.trim(), context || document);\r\n      } // arr = qsa(selector, document);\r\n\r\n    } else if (selector.nodeType || selector === window || selector === document) {\r\n      arr.push(selector);\r\n    } else if (Array.isArray(selector)) {\r\n      if (selector instanceof Dom7) return selector;\r\n      arr = selector;\r\n    }\r\n\r\n    return new Dom7(arrayUnique(arr));\r\n  }\r\n\r\n  $.fn = Dom7.prototype; // eslint-disable-next-line\r\n\r\n  function addClass() {\r\n    for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      classes[_key] = arguments[_key];\r\n    }\r\n\r\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\r\n    this.forEach(el => {\r\n      el.classList.add(...classNames);\r\n    });\r\n    return this;\r\n  }\r\n\r\n  function removeClass() {\r\n    for (var _len2 = arguments.length, classes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n      classes[_key2] = arguments[_key2];\r\n    }\r\n\r\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\r\n    this.forEach(el => {\r\n      el.classList.remove(...classNames);\r\n    });\r\n    return this;\r\n  }\r\n\r\n  function toggleClass() {\r\n    for (var _len3 = arguments.length, classes = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n      classes[_key3] = arguments[_key3];\r\n    }\r\n\r\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\r\n    this.forEach(el => {\r\n      classNames.forEach(className => {\r\n        el.classList.toggle(className);\r\n      });\r\n    });\r\n  }\r\n\r\n  function hasClass() {\r\n    for (var _len4 = arguments.length, classes = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\r\n      classes[_key4] = arguments[_key4];\r\n    }\r\n\r\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\r\n    return arrayFilter(this, el => {\r\n      return classNames.filter(className => el.classList.contains(className)).length > 0;\r\n    }).length > 0;\r\n  }\r\n\r\n  function attr(attrs, value) {\r\n    if (arguments.length === 1 && typeof attrs === 'string') {\r\n      // Get attr\r\n      if (this[0]) return this[0].getAttribute(attrs);\r\n      return undefined;\r\n    } // Set attrs\r\n\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      if (arguments.length === 2) {\r\n        // String\r\n        this[i].setAttribute(attrs, value);\r\n      } else {\r\n        // Object\r\n        for (const attrName in attrs) {\r\n          this[i][attrName] = attrs[attrName];\r\n          this[i].setAttribute(attrName, attrs[attrName]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function removeAttr(attr) {\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      this[i].removeAttribute(attr);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function transform(transform) {\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      this[i].style.transform = transform;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function transition$1(duration) {\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      this[i].style.transitionDuration = typeof duration !== 'string' ? `${duration}ms` : duration;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function on() {\r\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\r\n      args[_key5] = arguments[_key5];\r\n    }\r\n\r\n    let [eventType, targetSelector, listener, capture] = args;\r\n\r\n    if (typeof args[1] === 'function') {\r\n      [eventType, listener, capture] = args;\r\n      targetSelector = undefined;\r\n    }\r\n\r\n    if (!capture) capture = false;\r\n\r\n    function handleLiveEvent(e) {\r\n      const target = e.target;\r\n      if (!target) return;\r\n      const eventData = e.target.dom7EventData || [];\r\n\r\n      if (eventData.indexOf(e) < 0) {\r\n        eventData.unshift(e);\r\n      }\r\n\r\n      if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\r\n        const parents = $(target).parents(); // eslint-disable-line\r\n\r\n        for (let k = 0; k < parents.length; k += 1) {\r\n          if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\r\n        }\r\n      }\r\n    }\r\n\r\n    function handleEvent(e) {\r\n      const eventData = e && e.target ? e.target.dom7EventData || [] : [];\r\n\r\n      if (eventData.indexOf(e) < 0) {\r\n        eventData.unshift(e);\r\n      }\r\n\r\n      listener.apply(this, eventData);\r\n    }\r\n\r\n    const events = eventType.split(' ');\r\n    let j;\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      const el = this[i];\r\n\r\n      if (!targetSelector) {\r\n        for (j = 0; j < events.length; j += 1) {\r\n          const event = events[j];\r\n          if (!el.dom7Listeners) el.dom7Listeners = {};\r\n          if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\r\n          el.dom7Listeners[event].push({\r\n            listener,\r\n            proxyListener: handleEvent\r\n          });\r\n          el.addEventListener(event, handleEvent, capture);\r\n        }\r\n      } else {\r\n        // Live events\r\n        for (j = 0; j < events.length; j += 1) {\r\n          const event = events[j];\r\n          if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\r\n          if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\r\n          el.dom7LiveListeners[event].push({\r\n            listener,\r\n            proxyListener: handleLiveEvent\r\n          });\r\n          el.addEventListener(event, handleLiveEvent, capture);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function off() {\r\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\r\n      args[_key6] = arguments[_key6];\r\n    }\r\n\r\n    let [eventType, targetSelector, listener, capture] = args;\r\n\r\n    if (typeof args[1] === 'function') {\r\n      [eventType, listener, capture] = args;\r\n      targetSelector = undefined;\r\n    }\r\n\r\n    if (!capture) capture = false;\r\n    const events = eventType.split(' ');\r\n\r\n    for (let i = 0; i < events.length; i += 1) {\r\n      const event = events[i];\r\n\r\n      for (let j = 0; j < this.length; j += 1) {\r\n        const el = this[j];\r\n        let handlers;\r\n\r\n        if (!targetSelector && el.dom7Listeners) {\r\n          handlers = el.dom7Listeners[event];\r\n        } else if (targetSelector && el.dom7LiveListeners) {\r\n          handlers = el.dom7LiveListeners[event];\r\n        }\r\n\r\n        if (handlers && handlers.length) {\r\n          for (let k = handlers.length - 1; k >= 0; k -= 1) {\r\n            const handler = handlers[k];\r\n\r\n            if (listener && handler.listener === listener) {\r\n              el.removeEventListener(event, handler.proxyListener, capture);\r\n              handlers.splice(k, 1);\r\n            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\r\n              el.removeEventListener(event, handler.proxyListener, capture);\r\n              handlers.splice(k, 1);\r\n            } else if (!listener) {\r\n              el.removeEventListener(event, handler.proxyListener, capture);\r\n              handlers.splice(k, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function trigger() {\r\n    const window = getWindow();\r\n\r\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\r\n      args[_key9] = arguments[_key9];\r\n    }\r\n\r\n    const events = args[0].split(' ');\r\n    const eventData = args[1];\r\n\r\n    for (let i = 0; i < events.length; i += 1) {\r\n      const event = events[i];\r\n\r\n      for (let j = 0; j < this.length; j += 1) {\r\n        const el = this[j];\r\n\r\n        if (window.CustomEvent) {\r\n          const evt = new window.CustomEvent(event, {\r\n            detail: eventData,\r\n            bubbles: true,\r\n            cancelable: true\r\n          });\r\n          el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\r\n          el.dispatchEvent(evt);\r\n          el.dom7EventData = [];\r\n          delete el.dom7EventData;\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function transitionEnd$1(callback) {\r\n    const dom = this;\r\n\r\n    function fireCallBack(e) {\r\n      if (e.target !== this) return;\r\n      callback.call(this, e);\r\n      dom.off('transitionend', fireCallBack);\r\n    }\r\n\r\n    if (callback) {\r\n      dom.on('transitionend', fireCallBack);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function outerWidth(includeMargins) {\r\n    if (this.length > 0) {\r\n      if (includeMargins) {\r\n        const styles = this.styles();\r\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\r\n      }\r\n\r\n      return this[0].offsetWidth;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function outerHeight(includeMargins) {\r\n    if (this.length > 0) {\r\n      if (includeMargins) {\r\n        const styles = this.styles();\r\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\r\n      }\r\n\r\n      return this[0].offsetHeight;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function offset() {\r\n    if (this.length > 0) {\r\n      const window = getWindow();\r\n      const document = getDocument();\r\n      const el = this[0];\r\n      const box = el.getBoundingClientRect();\r\n      const body = document.body;\r\n      const clientTop = el.clientTop || body.clientTop || 0;\r\n      const clientLeft = el.clientLeft || body.clientLeft || 0;\r\n      const scrollTop = el === window ? window.scrollY : el.scrollTop;\r\n      const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\r\n      return {\r\n        top: box.top + scrollTop - clientTop,\r\n        left: box.left + scrollLeft - clientLeft\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function styles() {\r\n    const window = getWindow();\r\n    if (this[0]) return window.getComputedStyle(this[0], null);\r\n    return {};\r\n  }\r\n\r\n  function css(props, value) {\r\n    const window = getWindow();\r\n    let i;\r\n\r\n    if (arguments.length === 1) {\r\n      if (typeof props === 'string') {\r\n        // .css('width')\r\n        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\r\n      } else {\r\n        // .css({ width: '100px' })\r\n        for (i = 0; i < this.length; i += 1) {\r\n          for (const prop in props) {\r\n            this[i].style[prop] = props[prop];\r\n          }\r\n        }\r\n\r\n        return this;\r\n      }\r\n    }\r\n\r\n    if (arguments.length === 2 && typeof props === 'string') {\r\n      // .css('width', '100px')\r\n      for (i = 0; i < this.length; i += 1) {\r\n        this[i].style[props] = value;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function each(callback) {\r\n    if (!callback) return this;\r\n    this.forEach((el, index) => {\r\n      callback.apply(el, [el, index]);\r\n    });\r\n    return this;\r\n  }\r\n\r\n  function filter(callback) {\r\n    const result = arrayFilter(this, callback);\r\n    return $(result);\r\n  }\r\n\r\n  function html(html) {\r\n    if (typeof html === 'undefined') {\r\n      return this[0] ? this[0].innerHTML : null;\r\n    }\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      this[i].innerHTML = html;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function text(text) {\r\n    if (typeof text === 'undefined') {\r\n      return this[0] ? this[0].textContent.trim() : null;\r\n    }\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      this[i].textContent = text;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function is(selector) {\r\n    const window = getWindow();\r\n    const document = getDocument();\r\n    const el = this[0];\r\n    let compareWith;\r\n    let i;\r\n    if (!el || typeof selector === 'undefined') return false;\r\n\r\n    if (typeof selector === 'string') {\r\n      if (el.matches) return el.matches(selector);\r\n      if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\r\n      if (el.msMatchesSelector) return el.msMatchesSelector(selector);\r\n      compareWith = $(selector);\r\n\r\n      for (i = 0; i < compareWith.length; i += 1) {\r\n        if (compareWith[i] === el) return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    if (selector === document) {\r\n      return el === document;\r\n    }\r\n\r\n    if (selector === window) {\r\n      return el === window;\r\n    }\r\n\r\n    if (selector.nodeType || selector instanceof Dom7) {\r\n      compareWith = selector.nodeType ? [selector] : selector;\r\n\r\n      for (i = 0; i < compareWith.length; i += 1) {\r\n        if (compareWith[i] === el) return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function index() {\r\n    let child = this[0];\r\n    let i;\r\n\r\n    if (child) {\r\n      i = 0; // eslint-disable-next-line\r\n\r\n      while ((child = child.previousSibling) !== null) {\r\n        if (child.nodeType === 1) i += 1;\r\n      }\r\n\r\n      return i;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  function eq(index) {\r\n    if (typeof index === 'undefined') return this;\r\n    const length = this.length;\r\n\r\n    if (index > length - 1) {\r\n      return $([]);\r\n    }\r\n\r\n    if (index < 0) {\r\n      const returnIndex = length + index;\r\n      if (returnIndex < 0) return $([]);\r\n      return $([this[returnIndex]]);\r\n    }\r\n\r\n    return $([this[index]]);\r\n  }\r\n\r\n  function append() {\r\n    let newChild;\r\n    const document = getDocument();\r\n\r\n    for (let k = 0; k < arguments.length; k += 1) {\r\n      newChild = k < 0 || arguments.length <= k ? undefined : arguments[k];\r\n\r\n      for (let i = 0; i < this.length; i += 1) {\r\n        if (typeof newChild === 'string') {\r\n          const tempDiv = document.createElement('div');\r\n          tempDiv.innerHTML = newChild;\r\n\r\n          while (tempDiv.firstChild) {\r\n            this[i].appendChild(tempDiv.firstChild);\r\n          }\r\n        } else if (newChild instanceof Dom7) {\r\n          for (let j = 0; j < newChild.length; j += 1) {\r\n            this[i].appendChild(newChild[j]);\r\n          }\r\n        } else {\r\n          this[i].appendChild(newChild);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function prepend(newChild) {\r\n    const document = getDocument();\r\n    let i;\r\n    let j;\r\n\r\n    for (i = 0; i < this.length; i += 1) {\r\n      if (typeof newChild === 'string') {\r\n        const tempDiv = document.createElement('div');\r\n        tempDiv.innerHTML = newChild;\r\n\r\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\r\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\r\n        }\r\n      } else if (newChild instanceof Dom7) {\r\n        for (j = 0; j < newChild.length; j += 1) {\r\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\r\n        }\r\n      } else {\r\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function next(selector) {\r\n    if (this.length > 0) {\r\n      if (selector) {\r\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\r\n          return $([this[0].nextElementSibling]);\r\n        }\r\n\r\n        return $([]);\r\n      }\r\n\r\n      if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\r\n      return $([]);\r\n    }\r\n\r\n    return $([]);\r\n  }\r\n\r\n  function nextAll(selector) {\r\n    const nextEls = [];\r\n    let el = this[0];\r\n    if (!el) return $([]);\r\n\r\n    while (el.nextElementSibling) {\r\n      const next = el.nextElementSibling; // eslint-disable-line\r\n\r\n      if (selector) {\r\n        if ($(next).is(selector)) nextEls.push(next);\r\n      } else nextEls.push(next);\r\n\r\n      el = next;\r\n    }\r\n\r\n    return $(nextEls);\r\n  }\r\n\r\n  function prev(selector) {\r\n    if (this.length > 0) {\r\n      const el = this[0];\r\n\r\n      if (selector) {\r\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\r\n          return $([el.previousElementSibling]);\r\n        }\r\n\r\n        return $([]);\r\n      }\r\n\r\n      if (el.previousElementSibling) return $([el.previousElementSibling]);\r\n      return $([]);\r\n    }\r\n\r\n    return $([]);\r\n  }\r\n\r\n  function prevAll(selector) {\r\n    const prevEls = [];\r\n    let el = this[0];\r\n    if (!el) return $([]);\r\n\r\n    while (el.previousElementSibling) {\r\n      const prev = el.previousElementSibling; // eslint-disable-line\r\n\r\n      if (selector) {\r\n        if ($(prev).is(selector)) prevEls.push(prev);\r\n      } else prevEls.push(prev);\r\n\r\n      el = prev;\r\n    }\r\n\r\n    return $(prevEls);\r\n  }\r\n\r\n  function parent(selector) {\r\n    const parents = []; // eslint-disable-line\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      if (this[i].parentNode !== null) {\r\n        if (selector) {\r\n          if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\r\n        } else {\r\n          parents.push(this[i].parentNode);\r\n        }\r\n      }\r\n    }\r\n\r\n    return $(parents);\r\n  }\r\n\r\n  function parents(selector) {\r\n    const parents = []; // eslint-disable-line\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      let parent = this[i].parentNode; // eslint-disable-line\r\n\r\n      while (parent) {\r\n        if (selector) {\r\n          if ($(parent).is(selector)) parents.push(parent);\r\n        } else {\r\n          parents.push(parent);\r\n        }\r\n\r\n        parent = parent.parentNode;\r\n      }\r\n    }\r\n\r\n    return $(parents);\r\n  }\r\n\r\n  function closest(selector) {\r\n    let closest = this; // eslint-disable-line\r\n\r\n    if (typeof selector === 'undefined') {\r\n      return $([]);\r\n    }\r\n\r\n    if (!closest.is(selector)) {\r\n      closest = closest.parents(selector).eq(0);\r\n    }\r\n\r\n    return closest;\r\n  }\r\n\r\n  function find(selector) {\r\n    const foundElements = [];\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      const found = this[i].querySelectorAll(selector);\r\n\r\n      for (let j = 0; j < found.length; j += 1) {\r\n        foundElements.push(found[j]);\r\n      }\r\n    }\r\n\r\n    return $(foundElements);\r\n  }\r\n\r\n  function children(selector) {\r\n    const children = []; // eslint-disable-line\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      const childNodes = this[i].children;\r\n\r\n      for (let j = 0; j < childNodes.length; j += 1) {\r\n        if (!selector || $(childNodes[j]).is(selector)) {\r\n          children.push(childNodes[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return $(children);\r\n  }\r\n\r\n  function remove() {\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  const Methods = {\r\n    addClass,\r\n    removeClass,\r\n    hasClass,\r\n    toggleClass,\r\n    attr,\r\n    removeAttr,\r\n    transform,\r\n    transition: transition$1,\r\n    on,\r\n    off,\r\n    trigger,\r\n    transitionEnd: transitionEnd$1,\r\n    outerWidth,\r\n    outerHeight,\r\n    styles,\r\n    offset,\r\n    css,\r\n    each,\r\n    html,\r\n    text,\r\n    is,\r\n    index,\r\n    eq,\r\n    append,\r\n    prepend,\r\n    next,\r\n    nextAll,\r\n    prev,\r\n    prevAll,\r\n    parent,\r\n    parents,\r\n    closest,\r\n    find,\r\n    children,\r\n    filter,\r\n    remove\r\n  };\r\n  Object.keys(Methods).forEach(methodName => {\r\n    Object.defineProperty($.fn, methodName, {\r\n      value: Methods[methodName],\r\n      writable: true\r\n    });\r\n  });\r\n\r\n  function deleteProps(obj) {\r\n    const object = obj;\r\n    Object.keys(object).forEach(key => {\r\n      try {\r\n        object[key] = null;\r\n      } catch (e) {// no getter for object\r\n      }\r\n\r\n      try {\r\n        delete object[key];\r\n      } catch (e) {// something got wrong\r\n      }\r\n    });\r\n  }\r\n\r\n  function nextTick(callback, delay) {\r\n    if (delay === void 0) {\r\n      delay = 0;\r\n    }\r\n\r\n    return setTimeout(callback, delay);\r\n  }\r\n\r\n  function now() {\r\n    return Date.now();\r\n  }\r\n\r\n  function getComputedStyle$1(el) {\r\n    const window = getWindow();\r\n    let style;\r\n\r\n    if (window.getComputedStyle) {\r\n      style = window.getComputedStyle(el, null);\r\n    }\r\n\r\n    if (!style && el.currentStyle) {\r\n      style = el.currentStyle;\r\n    }\r\n\r\n    if (!style) {\r\n      style = el.style;\r\n    }\r\n\r\n    return style;\r\n  }\r\n\r\n  function getTranslate(el, axis) {\r\n    if (axis === void 0) {\r\n      axis = 'x';\r\n    }\r\n\r\n    const window = getWindow();\r\n    let matrix;\r\n    let curTransform;\r\n    let transformMatrix;\r\n    const curStyle = getComputedStyle$1(el);\r\n\r\n    if (window.WebKitCSSMatrix) {\r\n      curTransform = curStyle.transform || curStyle.webkitTransform;\r\n\r\n      if (curTransform.split(',').length > 6) {\r\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\r\n      } // Some old versions of Webkit choke when 'none' is passed; pass\r\n      // empty string instead in this case\r\n\r\n\r\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\r\n    } else {\r\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\r\n      matrix = transformMatrix.toString().split(',');\r\n    }\r\n\r\n    if (axis === 'x') {\r\n      // Latest Chrome and webkits Fix\r\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\r\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\r\n      else curTransform = parseFloat(matrix[4]);\r\n    }\r\n\r\n    if (axis === 'y') {\r\n      // Latest Chrome and webkits Fix\r\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\r\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\r\n      else curTransform = parseFloat(matrix[5]);\r\n    }\r\n\r\n    return curTransform || 0;\r\n  }\r\n\r\n  function isObject(o) {\r\n    return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\r\n  }\r\n\r\n  function isNode(node) {\r\n    // eslint-disable-next-line\r\n    if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\r\n      return node instanceof HTMLElement;\r\n    }\r\n\r\n    return node && (node.nodeType === 1 || node.nodeType === 11);\r\n  }\r\n\r\n  function extend() {\r\n    const to = Object(arguments.length <= 0 ? undefined : arguments[0]);\r\n    const noExtend = ['__proto__', 'constructor', 'prototype'];\r\n\r\n    for (let i = 1; i < arguments.length; i += 1) {\r\n      const nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\r\n\r\n      if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\r\n        const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\r\n\r\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\r\n          const nextKey = keysArray[nextIndex];\r\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\r\n\r\n          if (desc !== undefined && desc.enumerable) {\r\n            if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\r\n              if (nextSource[nextKey].__swiper__) {\r\n                to[nextKey] = nextSource[nextKey];\r\n              } else {\r\n                extend(to[nextKey], nextSource[nextKey]);\r\n              }\r\n            } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\r\n              to[nextKey] = {};\r\n\r\n              if (nextSource[nextKey].__swiper__) {\r\n                to[nextKey] = nextSource[nextKey];\r\n              } else {\r\n                extend(to[nextKey], nextSource[nextKey]);\r\n              }\r\n            } else {\r\n              to[nextKey] = nextSource[nextKey];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return to;\r\n  }\r\n\r\n  function setCSSProperty(el, varName, varValue) {\r\n    el.style.setProperty(varName, varValue);\r\n  }\r\n\r\n  function animateCSSModeScroll(_ref) {\r\n    let {\r\n      swiper,\r\n      targetPosition,\r\n      side\r\n    } = _ref;\r\n    const window = getWindow();\r\n    const startPosition = -swiper.translate;\r\n    let startTime = null;\r\n    let time;\r\n    const duration = swiper.params.speed;\r\n    swiper.wrapperEl.style.scrollSnapType = 'none';\r\n    window.cancelAnimationFrame(swiper.cssModeFrameID);\r\n    const dir = targetPosition > startPosition ? 'next' : 'prev';\r\n\r\n    const isOutOfBound = (current, target) => {\r\n      return dir === 'next' && current >= target || dir === 'prev' && current <= target;\r\n    };\r\n\r\n    const animate = () => {\r\n      time = new Date().getTime();\r\n\r\n      if (startTime === null) {\r\n        startTime = time;\r\n      }\r\n\r\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\r\n      const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\r\n      let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\r\n\r\n      if (isOutOfBound(currentPosition, targetPosition)) {\r\n        currentPosition = targetPosition;\r\n      }\r\n\r\n      swiper.wrapperEl.scrollTo({\r\n        [side]: currentPosition\r\n      });\r\n\r\n      if (isOutOfBound(currentPosition, targetPosition)) {\r\n        swiper.wrapperEl.style.overflow = 'hidden';\r\n        swiper.wrapperEl.style.scrollSnapType = '';\r\n        setTimeout(() => {\r\n          swiper.wrapperEl.style.overflow = '';\r\n          swiper.wrapperEl.scrollTo({\r\n            [side]: currentPosition\r\n          });\r\n        });\r\n        window.cancelAnimationFrame(swiper.cssModeFrameID);\r\n        return;\r\n      }\r\n\r\n      swiper.cssModeFrameID = window.requestAnimationFrame(animate);\r\n    };\r\n\r\n    animate();\r\n  }\r\n\r\n  let support;\r\n\r\n  function calcSupport() {\r\n    const window = getWindow();\r\n    const document = getDocument();\r\n    return {\r\n      smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\r\n      touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch),\r\n      passiveListener: function checkPassiveListener() {\r\n        let supportsPassive = false;\r\n\r\n        try {\r\n          const opts = Object.defineProperty({}, 'passive', {\r\n            // eslint-disable-next-line\r\n            get() {\r\n              supportsPassive = true;\r\n            }\r\n\r\n          });\r\n          window.addEventListener('testPassiveListener', null, opts);\r\n        } catch (e) {// No support\r\n        }\r\n\r\n        return supportsPassive;\r\n      }(),\r\n      gestures: function checkGestures() {\r\n        return 'ongesturestart' in window;\r\n      }()\r\n    };\r\n  }\r\n\r\n  function getSupport() {\r\n    if (!support) {\r\n      support = calcSupport();\r\n    }\r\n\r\n    return support;\r\n  }\r\n\r\n  let deviceCached;\r\n\r\n  function calcDevice(_temp) {\r\n    let {\r\n      userAgent\r\n    } = _temp === void 0 ? {} : _temp;\r\n    const support = getSupport();\r\n    const window = getWindow();\r\n    const platform = window.navigator.platform;\r\n    const ua = userAgent || window.navigator.userAgent;\r\n    const device = {\r\n      ios: false,\r\n      android: false\r\n    };\r\n    const screenWidth = window.screen.width;\r\n    const screenHeight = window.screen.height;\r\n    const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\r\n\r\n    let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\r\n    const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\r\n    const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\r\n    const windows = platform === 'Win32';\r\n    let macos = platform === 'MacIntel'; // iPadOs 13 fix\r\n\r\n    const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\r\n\r\n    if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\r\n      ipad = ua.match(/(Version)\\/([\\d.]+)/);\r\n      if (!ipad) ipad = [0, 1, '13_0_0'];\r\n      macos = false;\r\n    } // Android\r\n\r\n\r\n    if (android && !windows) {\r\n      device.os = 'android';\r\n      device.android = true;\r\n    }\r\n\r\n    if (ipad || iphone || ipod) {\r\n      device.os = 'ios';\r\n      device.ios = true;\r\n    } // Export object\r\n\r\n\r\n    return device;\r\n  }\r\n\r\n  function getDevice(overrides) {\r\n    if (overrides === void 0) {\r\n      overrides = {};\r\n    }\r\n\r\n    if (!deviceCached) {\r\n      deviceCached = calcDevice(overrides);\r\n    }\r\n\r\n    return deviceCached;\r\n  }\r\n\r\n  let browser;\r\n\r\n  function calcBrowser() {\r\n    const window = getWindow();\r\n\r\n    function isSafari() {\r\n      const ua = window.navigator.userAgent.toLowerCase();\r\n      return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\r\n    }\r\n\r\n    return {\r\n      isSafari: isSafari(),\r\n      isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\r\n    };\r\n  }\r\n\r\n  function getBrowser() {\r\n    if (!browser) {\r\n      browser = calcBrowser();\r\n    }\r\n\r\n    return browser;\r\n  }\r\n\r\n  function Resize(_ref) {\r\n    let {\r\n      swiper,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    const window = getWindow();\r\n    let observer = null;\r\n\r\n    const resizeHandler = () => {\r\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n      emit('beforeResize');\r\n      emit('resize');\r\n    };\r\n\r\n    const createObserver = () => {\r\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n      observer = new ResizeObserver(entries => {\r\n        const {\r\n          width,\r\n          height\r\n        } = swiper;\r\n        let newWidth = width;\r\n        let newHeight = height;\r\n        entries.forEach(_ref2 => {\r\n          let {\r\n            contentBoxSize,\r\n            contentRect,\r\n            target\r\n          } = _ref2;\r\n          if (target && target !== swiper.el) return;\r\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\r\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\r\n        });\r\n\r\n        if (newWidth !== width || newHeight !== height) {\r\n          resizeHandler();\r\n        }\r\n      });\r\n      observer.observe(swiper.el);\r\n    };\r\n\r\n    const removeObserver = () => {\r\n      if (observer && observer.unobserve && swiper.el) {\r\n        observer.unobserve(swiper.el);\r\n        observer = null;\r\n      }\r\n    };\r\n\r\n    const orientationChangeHandler = () => {\r\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n      emit('orientationchange');\r\n    };\r\n\r\n    on('init', () => {\r\n      if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\r\n        createObserver();\r\n        return;\r\n      }\r\n\r\n      window.addEventListener('resize', resizeHandler);\r\n      window.addEventListener('orientationchange', orientationChangeHandler);\r\n    });\r\n    on('destroy', () => {\r\n      removeObserver();\r\n      window.removeEventListener('resize', resizeHandler);\r\n      window.removeEventListener('orientationchange', orientationChangeHandler);\r\n    });\r\n  }\r\n\r\n  function Observer(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    const observers = [];\r\n    const window = getWindow();\r\n\r\n    const attach = function (target, options) {\r\n      if (options === void 0) {\r\n        options = {};\r\n      }\r\n\r\n      const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\r\n      const observer = new ObserverFunc(mutations => {\r\n        // The observerUpdate event should only be triggered\r\n        // once despite the number of mutations.  Additional\r\n        // triggers are redundant and are very costly\r\n        if (mutations.length === 1) {\r\n          emit('observerUpdate', mutations[0]);\r\n          return;\r\n        }\r\n\r\n        const observerUpdate = function observerUpdate() {\r\n          emit('observerUpdate', mutations[0]);\r\n        };\r\n\r\n        if (window.requestAnimationFrame) {\r\n          window.requestAnimationFrame(observerUpdate);\r\n        } else {\r\n          window.setTimeout(observerUpdate, 0);\r\n        }\r\n      });\r\n      observer.observe(target, {\r\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\r\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\r\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData\r\n      });\r\n      observers.push(observer);\r\n    };\r\n\r\n    const init = () => {\r\n      if (!swiper.params.observer) return;\r\n\r\n      if (swiper.params.observeParents) {\r\n        const containerParents = swiper.$el.parents();\r\n\r\n        for (let i = 0; i < containerParents.length; i += 1) {\r\n          attach(containerParents[i]);\r\n        }\r\n      } // Observe container\r\n\r\n\r\n      attach(swiper.$el[0], {\r\n        childList: swiper.params.observeSlideChildren\r\n      }); // Observe wrapper\r\n\r\n      attach(swiper.$wrapperEl[0], {\r\n        attributes: false\r\n      });\r\n    };\r\n\r\n    const destroy = () => {\r\n      observers.forEach(observer => {\r\n        observer.disconnect();\r\n      });\r\n      observers.splice(0, observers.length);\r\n    };\r\n\r\n    extendParams({\r\n      observer: false,\r\n      observeParents: false,\r\n      observeSlideChildren: false\r\n    });\r\n    on('init', init);\r\n    on('destroy', destroy);\r\n  }\r\n\r\n  /* eslint-disable no-underscore-dangle */\r\n  var eventsEmitter = {\r\n    on(events, handler, priority) {\r\n      const self = this;\r\n      if (typeof handler !== 'function') return self;\r\n      const method = priority ? 'unshift' : 'push';\r\n      events.split(' ').forEach(event => {\r\n        if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\r\n        self.eventsListeners[event][method](handler);\r\n      });\r\n      return self;\r\n    },\r\n\r\n    once(events, handler, priority) {\r\n      const self = this;\r\n      if (typeof handler !== 'function') return self;\r\n\r\n      function onceHandler() {\r\n        self.off(events, onceHandler);\r\n\r\n        if (onceHandler.__emitterProxy) {\r\n          delete onceHandler.__emitterProxy;\r\n        }\r\n\r\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n          args[_key] = arguments[_key];\r\n        }\r\n\r\n        handler.apply(self, args);\r\n      }\r\n\r\n      onceHandler.__emitterProxy = handler;\r\n      return self.on(events, onceHandler, priority);\r\n    },\r\n\r\n    onAny(handler, priority) {\r\n      const self = this;\r\n      if (typeof handler !== 'function') return self;\r\n      const method = priority ? 'unshift' : 'push';\r\n\r\n      if (self.eventsAnyListeners.indexOf(handler) < 0) {\r\n        self.eventsAnyListeners[method](handler);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    offAny(handler) {\r\n      const self = this;\r\n      if (!self.eventsAnyListeners) return self;\r\n      const index = self.eventsAnyListeners.indexOf(handler);\r\n\r\n      if (index >= 0) {\r\n        self.eventsAnyListeners.splice(index, 1);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    off(events, handler) {\r\n      const self = this;\r\n      if (!self.eventsListeners) return self;\r\n      events.split(' ').forEach(event => {\r\n        if (typeof handler === 'undefined') {\r\n          self.eventsListeners[event] = [];\r\n        } else if (self.eventsListeners[event]) {\r\n          self.eventsListeners[event].forEach((eventHandler, index) => {\r\n            if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\r\n              self.eventsListeners[event].splice(index, 1);\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return self;\r\n    },\r\n\r\n    emit() {\r\n      const self = this;\r\n      if (!self.eventsListeners) return self;\r\n      let events;\r\n      let data;\r\n      let context;\r\n\r\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n        args[_key2] = arguments[_key2];\r\n      }\r\n\r\n      if (typeof args[0] === 'string' || Array.isArray(args[0])) {\r\n        events = args[0];\r\n        data = args.slice(1, args.length);\r\n        context = self;\r\n      } else {\r\n        events = args[0].events;\r\n        data = args[0].data;\r\n        context = args[0].context || self;\r\n      }\r\n\r\n      data.unshift(context);\r\n      const eventsArray = Array.isArray(events) ? events : events.split(' ');\r\n      eventsArray.forEach(event => {\r\n        if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\r\n          self.eventsAnyListeners.forEach(eventHandler => {\r\n            eventHandler.apply(context, [event, ...data]);\r\n          });\r\n        }\r\n\r\n        if (self.eventsListeners && self.eventsListeners[event]) {\r\n          self.eventsListeners[event].forEach(eventHandler => {\r\n            eventHandler.apply(context, data);\r\n          });\r\n        }\r\n      });\r\n      return self;\r\n    }\r\n\r\n  };\r\n\r\n  function updateSize() {\r\n    const swiper = this;\r\n    let width;\r\n    let height;\r\n    const $el = swiper.$el;\r\n\r\n    if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\r\n      width = swiper.params.width;\r\n    } else {\r\n      width = $el[0].clientWidth;\r\n    }\r\n\r\n    if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\r\n      height = swiper.params.height;\r\n    } else {\r\n      height = $el[0].clientHeight;\r\n    }\r\n\r\n    if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\r\n      return;\r\n    } // Subtract paddings\r\n\r\n\r\n    width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);\r\n    height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);\r\n    if (Number.isNaN(width)) width = 0;\r\n    if (Number.isNaN(height)) height = 0;\r\n    Object.assign(swiper, {\r\n      width,\r\n      height,\r\n      size: swiper.isHorizontal() ? width : height\r\n    });\r\n  }\r\n\r\n  function updateSlides() {\r\n    const swiper = this;\r\n\r\n    function getDirectionLabel(property) {\r\n      if (swiper.isHorizontal()) {\r\n        return property;\r\n      } // prettier-ignore\r\n\r\n\r\n      return {\r\n        'width': 'height',\r\n        'margin-top': 'margin-left',\r\n        'margin-bottom ': 'margin-right',\r\n        'margin-left': 'margin-top',\r\n        'margin-right': 'margin-bottom',\r\n        'padding-left': 'padding-top',\r\n        'padding-right': 'padding-bottom',\r\n        'marginRight': 'marginBottom'\r\n      }[property];\r\n    }\r\n\r\n    function getDirectionPropertyValue(node, label) {\r\n      return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\r\n    }\r\n\r\n    const params = swiper.params;\r\n    const {\r\n      $wrapperEl,\r\n      size: swiperSize,\r\n      rtlTranslate: rtl,\r\n      wrongRTL\r\n    } = swiper;\r\n    const isVirtual = swiper.virtual && params.virtual.enabled;\r\n    const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\r\n    const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\r\n    const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\r\n    let snapGrid = [];\r\n    const slidesGrid = [];\r\n    const slidesSizesGrid = [];\r\n    let offsetBefore = params.slidesOffsetBefore;\r\n\r\n    if (typeof offsetBefore === 'function') {\r\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\r\n    }\r\n\r\n    let offsetAfter = params.slidesOffsetAfter;\r\n\r\n    if (typeof offsetAfter === 'function') {\r\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\r\n    }\r\n\r\n    const previousSnapGridLength = swiper.snapGrid.length;\r\n    const previousSlidesGridLength = swiper.slidesGrid.length;\r\n    let spaceBetween = params.spaceBetween;\r\n    let slidePosition = -offsetBefore;\r\n    let prevSlideSize = 0;\r\n    let index = 0;\r\n\r\n    if (typeof swiperSize === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\r\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\r\n    }\r\n\r\n    swiper.virtualSize = -spaceBetween; // reset margins\r\n\r\n    if (rtl) slides.css({\r\n      marginLeft: '',\r\n      marginBottom: '',\r\n      marginTop: ''\r\n    });else slides.css({\r\n      marginRight: '',\r\n      marginBottom: '',\r\n      marginTop: ''\r\n    }); // reset cssMode offsets\r\n\r\n    if (params.centeredSlides && params.cssMode) {\r\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', '');\r\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', '');\r\n    }\r\n\r\n    const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\r\n\r\n    if (gridEnabled) {\r\n      swiper.grid.initSlides(slidesLength);\r\n    } // Calc slides\r\n\r\n\r\n    let slideSize;\r\n    const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\r\n      return typeof params.breakpoints[key].slidesPerView !== 'undefined';\r\n    }).length > 0;\r\n\r\n    for (let i = 0; i < slidesLength; i += 1) {\r\n      slideSize = 0;\r\n      const slide = slides.eq(i);\r\n\r\n      if (gridEnabled) {\r\n        swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\r\n      }\r\n\r\n      if (slide.css('display') === 'none') continue; // eslint-disable-line\r\n\r\n      if (params.slidesPerView === 'auto') {\r\n        if (shouldResetSlideSize) {\r\n          slides[i].style[getDirectionLabel('width')] = ``;\r\n        }\r\n\r\n        const slideStyles = getComputedStyle(slide[0]);\r\n        const currentTransform = slide[0].style.transform;\r\n        const currentWebKitTransform = slide[0].style.webkitTransform;\r\n\r\n        if (currentTransform) {\r\n          slide[0].style.transform = 'none';\r\n        }\r\n\r\n        if (currentWebKitTransform) {\r\n          slide[0].style.webkitTransform = 'none';\r\n        }\r\n\r\n        if (params.roundLengths) {\r\n          slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\r\n        } else {\r\n          // eslint-disable-next-line\r\n          const width = getDirectionPropertyValue(slideStyles, 'width');\r\n          const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\r\n          const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\r\n          const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\r\n          const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\r\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\r\n\r\n          if (boxSizing && boxSizing === 'border-box') {\r\n            slideSize = width + marginLeft + marginRight;\r\n          } else {\r\n            const {\r\n              clientWidth,\r\n              offsetWidth\r\n            } = slide[0];\r\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\r\n          }\r\n        }\r\n\r\n        if (currentTransform) {\r\n          slide[0].style.transform = currentTransform;\r\n        }\r\n\r\n        if (currentWebKitTransform) {\r\n          slide[0].style.webkitTransform = currentWebKitTransform;\r\n        }\r\n\r\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\r\n      } else {\r\n        slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\r\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\r\n\r\n        if (slides[i]) {\r\n          slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\r\n        }\r\n      }\r\n\r\n      if (slides[i]) {\r\n        slides[i].swiperSlideSize = slideSize;\r\n      }\r\n\r\n      slidesSizesGrid.push(slideSize);\r\n\r\n      if (params.centeredSlides) {\r\n        slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\r\n        if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\r\n        if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\r\n        if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\r\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\r\n        if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\r\n        slidesGrid.push(slidePosition);\r\n      } else {\r\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\r\n        if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\r\n        slidesGrid.push(slidePosition);\r\n        slidePosition = slidePosition + slideSize + spaceBetween;\r\n      }\r\n\r\n      swiper.virtualSize += slideSize + spaceBetween;\r\n      prevSlideSize = slideSize;\r\n      index += 1;\r\n    }\r\n\r\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\r\n\r\n    if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\r\n      $wrapperEl.css({\r\n        width: `${swiper.virtualSize + params.spaceBetween}px`\r\n      });\r\n    }\r\n\r\n    if (params.setWrapperSize) {\r\n      $wrapperEl.css({\r\n        [getDirectionLabel('width')]: `${swiper.virtualSize + params.spaceBetween}px`\r\n      });\r\n    }\r\n\r\n    if (gridEnabled) {\r\n      swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\r\n    } // Remove last grid elements depending on width\r\n\r\n\r\n    if (!params.centeredSlides) {\r\n      const newSlidesGrid = [];\r\n\r\n      for (let i = 0; i < snapGrid.length; i += 1) {\r\n        let slidesGridItem = snapGrid[i];\r\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\r\n\r\n        if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\r\n          newSlidesGrid.push(slidesGridItem);\r\n        }\r\n      }\r\n\r\n      snapGrid = newSlidesGrid;\r\n\r\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\r\n        snapGrid.push(swiper.virtualSize - swiperSize);\r\n      }\r\n    }\r\n\r\n    if (snapGrid.length === 0) snapGrid = [0];\r\n\r\n    if (params.spaceBetween !== 0) {\r\n      const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\r\n      slides.filter((_, slideIndex) => {\r\n        if (!params.cssMode) return true;\r\n\r\n        if (slideIndex === slides.length - 1) {\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      }).css({\r\n        [key]: `${spaceBetween}px`\r\n      });\r\n    }\r\n\r\n    if (params.centeredSlides && params.centeredSlidesBounds) {\r\n      let allSlidesSize = 0;\r\n      slidesSizesGrid.forEach(slideSizeValue => {\r\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\r\n      });\r\n      allSlidesSize -= params.spaceBetween;\r\n      const maxSnap = allSlidesSize - swiperSize;\r\n      snapGrid = snapGrid.map(snap => {\r\n        if (snap < 0) return -offsetBefore;\r\n        if (snap > maxSnap) return maxSnap + offsetAfter;\r\n        return snap;\r\n      });\r\n    }\r\n\r\n    if (params.centerInsufficientSlides) {\r\n      let allSlidesSize = 0;\r\n      slidesSizesGrid.forEach(slideSizeValue => {\r\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\r\n      });\r\n      allSlidesSize -= params.spaceBetween;\r\n\r\n      if (allSlidesSize < swiperSize) {\r\n        const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\r\n        snapGrid.forEach((snap, snapIndex) => {\r\n          snapGrid[snapIndex] = snap - allSlidesOffset;\r\n        });\r\n        slidesGrid.forEach((snap, snapIndex) => {\r\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\r\n        });\r\n      }\r\n    }\r\n\r\n    Object.assign(swiper, {\r\n      slides,\r\n      snapGrid,\r\n      slidesGrid,\r\n      slidesSizesGrid\r\n    });\r\n\r\n    if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\r\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\r\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\r\n      const addToSnapGrid = -swiper.snapGrid[0];\r\n      const addToSlidesGrid = -swiper.slidesGrid[0];\r\n      swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\r\n      swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\r\n    }\r\n\r\n    if (slidesLength !== previousSlidesLength) {\r\n      swiper.emit('slidesLengthChange');\r\n    }\r\n\r\n    if (snapGrid.length !== previousSnapGridLength) {\r\n      if (swiper.params.watchOverflow) swiper.checkOverflow();\r\n      swiper.emit('snapGridLengthChange');\r\n    }\r\n\r\n    if (slidesGrid.length !== previousSlidesGridLength) {\r\n      swiper.emit('slidesGridLengthChange');\r\n    }\r\n\r\n    if (params.watchSlidesProgress) {\r\n      swiper.updateSlidesOffset();\r\n    }\r\n\r\n    if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\r\n      if (slidesLength <= params.maxBackfaceHiddenSlides) {\r\n        swiper.$el.addClass(`${params.containerModifierClass}backface-hidden`);\r\n      } else {\r\n        swiper.$el.removeClass(`${params.containerModifierClass}backface-hidden`);\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateAutoHeight(speed) {\r\n    const swiper = this;\r\n    const activeSlides = [];\r\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n    let newHeight = 0;\r\n    let i;\r\n\r\n    if (typeof speed === 'number') {\r\n      swiper.setTransition(speed);\r\n    } else if (speed === true) {\r\n      swiper.setTransition(swiper.params.speed);\r\n    }\r\n\r\n    const getSlideByIndex = index => {\r\n      if (isVirtual) {\r\n        return swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index)[0];\r\n      }\r\n\r\n      return swiper.slides.eq(index)[0];\r\n    }; // Find slides currently in view\r\n\r\n\r\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\r\n      if (swiper.params.centeredSlides) {\r\n        swiper.visibleSlides.each(slide => {\r\n          activeSlides.push(slide);\r\n        });\r\n      } else {\r\n        for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\r\n          const index = swiper.activeIndex + i;\r\n          if (index > swiper.slides.length && !isVirtual) break;\r\n          activeSlides.push(getSlideByIndex(index));\r\n        }\r\n      }\r\n    } else {\r\n      activeSlides.push(getSlideByIndex(swiper.activeIndex));\r\n    } // Find new height from highest slide in view\r\n\r\n\r\n    for (i = 0; i < activeSlides.length; i += 1) {\r\n      if (typeof activeSlides[i] !== 'undefined') {\r\n        const height = activeSlides[i].offsetHeight;\r\n        newHeight = height > newHeight ? height : newHeight;\r\n      }\r\n    } // Update Height\r\n\r\n\r\n    if (newHeight || newHeight === 0) swiper.$wrapperEl.css('height', `${newHeight}px`);\r\n  }\r\n\r\n  function updateSlidesOffset() {\r\n    const swiper = this;\r\n    const slides = swiper.slides;\r\n\r\n    for (let i = 0; i < slides.length; i += 1) {\r\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\r\n    }\r\n  }\r\n\r\n  function updateSlidesProgress(translate) {\r\n    if (translate === void 0) {\r\n      translate = this && this.translate || 0;\r\n    }\r\n\r\n    const swiper = this;\r\n    const params = swiper.params;\r\n    const {\r\n      slides,\r\n      rtlTranslate: rtl,\r\n      snapGrid\r\n    } = swiper;\r\n    if (slides.length === 0) return;\r\n    if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\r\n    let offsetCenter = -translate;\r\n    if (rtl) offsetCenter = translate; // Visible Slides\r\n\r\n    slides.removeClass(params.slideVisibleClass);\r\n    swiper.visibleSlidesIndexes = [];\r\n    swiper.visibleSlides = [];\r\n\r\n    for (let i = 0; i < slides.length; i += 1) {\r\n      const slide = slides[i];\r\n      let slideOffset = slide.swiperSlideOffset;\r\n\r\n      if (params.cssMode && params.centeredSlides) {\r\n        slideOffset -= slides[0].swiperSlideOffset;\r\n      }\r\n\r\n      const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\r\n      const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\r\n      const slideBefore = -(offsetCenter - slideOffset);\r\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\r\n      const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\r\n\r\n      if (isVisible) {\r\n        swiper.visibleSlides.push(slide);\r\n        swiper.visibleSlidesIndexes.push(i);\r\n        slides.eq(i).addClass(params.slideVisibleClass);\r\n      }\r\n\r\n      slide.progress = rtl ? -slideProgress : slideProgress;\r\n      slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\r\n    }\r\n\r\n    swiper.visibleSlides = $(swiper.visibleSlides);\r\n  }\r\n\r\n  function updateProgress(translate) {\r\n    const swiper = this;\r\n\r\n    if (typeof translate === 'undefined') {\r\n      const multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\r\n\r\n      translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\r\n    }\r\n\r\n    const params = swiper.params;\r\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n    let {\r\n      progress,\r\n      isBeginning,\r\n      isEnd\r\n    } = swiper;\r\n    const wasBeginning = isBeginning;\r\n    const wasEnd = isEnd;\r\n\r\n    if (translatesDiff === 0) {\r\n      progress = 0;\r\n      isBeginning = true;\r\n      isEnd = true;\r\n    } else {\r\n      progress = (translate - swiper.minTranslate()) / translatesDiff;\r\n      isBeginning = progress <= 0;\r\n      isEnd = progress >= 1;\r\n    }\r\n\r\n    Object.assign(swiper, {\r\n      progress,\r\n      isBeginning,\r\n      isEnd\r\n    });\r\n    if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\r\n\r\n    if (isBeginning && !wasBeginning) {\r\n      swiper.emit('reachBeginning toEdge');\r\n    }\r\n\r\n    if (isEnd && !wasEnd) {\r\n      swiper.emit('reachEnd toEdge');\r\n    }\r\n\r\n    if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\r\n      swiper.emit('fromEdge');\r\n    }\r\n\r\n    swiper.emit('progress', progress);\r\n  }\r\n\r\n  function updateSlidesClasses() {\r\n    const swiper = this;\r\n    const {\r\n      slides,\r\n      params,\r\n      $wrapperEl,\r\n      activeIndex,\r\n      realIndex\r\n    } = swiper;\r\n    const isVirtual = swiper.virtual && params.virtual.enabled;\r\n    slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\r\n    let activeSlide;\r\n\r\n    if (isVirtual) {\r\n      activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\r\n    } else {\r\n      activeSlide = slides.eq(activeIndex);\r\n    } // Active classes\r\n\r\n\r\n    activeSlide.addClass(params.slideActiveClass);\r\n\r\n    if (params.loop) {\r\n      // Duplicate to all looped slides\r\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\r\n        $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\r\n      } else {\r\n        $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\r\n      }\r\n    } // Next Slide\r\n\r\n\r\n    let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\r\n\r\n    if (params.loop && nextSlide.length === 0) {\r\n      nextSlide = slides.eq(0);\r\n      nextSlide.addClass(params.slideNextClass);\r\n    } // Prev Slide\r\n\r\n\r\n    let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\r\n\r\n    if (params.loop && prevSlide.length === 0) {\r\n      prevSlide = slides.eq(-1);\r\n      prevSlide.addClass(params.slidePrevClass);\r\n    }\r\n\r\n    if (params.loop) {\r\n      // Duplicate to all looped slides\r\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\r\n        $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\r\n      } else {\r\n        $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\r\n      }\r\n\r\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\r\n        $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\r\n      } else {\r\n        $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\r\n      }\r\n    }\r\n\r\n    swiper.emitSlidesClasses();\r\n  }\r\n\r\n  function updateActiveIndex(newActiveIndex) {\r\n    const swiper = this;\r\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n    const {\r\n      slidesGrid,\r\n      snapGrid,\r\n      params,\r\n      activeIndex: previousIndex,\r\n      realIndex: previousRealIndex,\r\n      snapIndex: previousSnapIndex\r\n    } = swiper;\r\n    let activeIndex = newActiveIndex;\r\n    let snapIndex;\r\n\r\n    if (typeof activeIndex === 'undefined') {\r\n      for (let i = 0; i < slidesGrid.length; i += 1) {\r\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\r\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\r\n            activeIndex = i;\r\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\r\n            activeIndex = i + 1;\r\n          }\r\n        } else if (translate >= slidesGrid[i]) {\r\n          activeIndex = i;\r\n        }\r\n      } // Normalize slideIndex\r\n\r\n\r\n      if (params.normalizeSlideIndex) {\r\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\r\n      }\r\n    }\r\n\r\n    if (snapGrid.indexOf(translate) >= 0) {\r\n      snapIndex = snapGrid.indexOf(translate);\r\n    } else {\r\n      const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\r\n      snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\r\n    }\r\n\r\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n\r\n    if (activeIndex === previousIndex) {\r\n      if (snapIndex !== previousSnapIndex) {\r\n        swiper.snapIndex = snapIndex;\r\n        swiper.emit('snapIndexChange');\r\n      }\r\n\r\n      return;\r\n    } // Get real index\r\n\r\n\r\n    const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\r\n    Object.assign(swiper, {\r\n      snapIndex,\r\n      realIndex,\r\n      previousIndex,\r\n      activeIndex\r\n    });\r\n    swiper.emit('activeIndexChange');\r\n    swiper.emit('snapIndexChange');\r\n\r\n    if (previousRealIndex !== realIndex) {\r\n      swiper.emit('realIndexChange');\r\n    }\r\n\r\n    if (swiper.initialized || swiper.params.runCallbacksOnInit) {\r\n      swiper.emit('slideChange');\r\n    }\r\n  }\r\n\r\n  function updateClickedSlide(e) {\r\n    const swiper = this;\r\n    const params = swiper.params;\r\n    const slide = $(e).closest(`.${params.slideClass}`)[0];\r\n    let slideFound = false;\r\n    let slideIndex;\r\n\r\n    if (slide) {\r\n      for (let i = 0; i < swiper.slides.length; i += 1) {\r\n        if (swiper.slides[i] === slide) {\r\n          slideFound = true;\r\n          slideIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (slide && slideFound) {\r\n      swiper.clickedSlide = slide;\r\n\r\n      if (swiper.virtual && swiper.params.virtual.enabled) {\r\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\r\n      } else {\r\n        swiper.clickedIndex = slideIndex;\r\n      }\r\n    } else {\r\n      swiper.clickedSlide = undefined;\r\n      swiper.clickedIndex = undefined;\r\n      return;\r\n    }\r\n\r\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\r\n      swiper.slideToClickedSlide();\r\n    }\r\n  }\r\n\r\n  var update = {\r\n    updateSize,\r\n    updateSlides,\r\n    updateAutoHeight,\r\n    updateSlidesOffset,\r\n    updateSlidesProgress,\r\n    updateProgress,\r\n    updateSlidesClasses,\r\n    updateActiveIndex,\r\n    updateClickedSlide\r\n  };\r\n\r\n  function getSwiperTranslate(axis) {\r\n    if (axis === void 0) {\r\n      axis = this.isHorizontal() ? 'x' : 'y';\r\n    }\r\n\r\n    const swiper = this;\r\n    const {\r\n      params,\r\n      rtlTranslate: rtl,\r\n      translate,\r\n      $wrapperEl\r\n    } = swiper;\r\n\r\n    if (params.virtualTranslate) {\r\n      return rtl ? -translate : translate;\r\n    }\r\n\r\n    if (params.cssMode) {\r\n      return translate;\r\n    }\r\n\r\n    let currentTranslate = getTranslate($wrapperEl[0], axis);\r\n    if (rtl) currentTranslate = -currentTranslate;\r\n    return currentTranslate || 0;\r\n  }\r\n\r\n  function setTranslate(translate, byController) {\r\n    const swiper = this;\r\n    const {\r\n      rtlTranslate: rtl,\r\n      params,\r\n      $wrapperEl,\r\n      wrapperEl,\r\n      progress\r\n    } = swiper;\r\n    let x = 0;\r\n    let y = 0;\r\n    const z = 0;\r\n\r\n    if (swiper.isHorizontal()) {\r\n      x = rtl ? -translate : translate;\r\n    } else {\r\n      y = translate;\r\n    }\r\n\r\n    if (params.roundLengths) {\r\n      x = Math.floor(x);\r\n      y = Math.floor(y);\r\n    }\r\n\r\n    if (params.cssMode) {\r\n      wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\r\n    } else if (!params.virtualTranslate) {\r\n      $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\r\n    }\r\n\r\n    swiper.previousTranslate = swiper.translate;\r\n    swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\r\n\r\n    let newProgress;\r\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n\r\n    if (translatesDiff === 0) {\r\n      newProgress = 0;\r\n    } else {\r\n      newProgress = (translate - swiper.minTranslate()) / translatesDiff;\r\n    }\r\n\r\n    if (newProgress !== progress) {\r\n      swiper.updateProgress(translate);\r\n    }\r\n\r\n    swiper.emit('setTranslate', swiper.translate, byController);\r\n  }\r\n\r\n  function minTranslate() {\r\n    return -this.snapGrid[0];\r\n  }\r\n\r\n  function maxTranslate() {\r\n    return -this.snapGrid[this.snapGrid.length - 1];\r\n  }\r\n\r\n  function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\r\n    if (translate === void 0) {\r\n      translate = 0;\r\n    }\r\n\r\n    if (speed === void 0) {\r\n      speed = this.params.speed;\r\n    }\r\n\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    if (translateBounds === void 0) {\r\n      translateBounds = true;\r\n    }\r\n\r\n    const swiper = this;\r\n    const {\r\n      params,\r\n      wrapperEl\r\n    } = swiper;\r\n\r\n    if (swiper.animating && params.preventInteractionOnTransition) {\r\n      return false;\r\n    }\r\n\r\n    const minTranslate = swiper.minTranslate();\r\n    const maxTranslate = swiper.maxTranslate();\r\n    let newTranslate;\r\n    if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress\r\n\r\n    swiper.updateProgress(newTranslate);\r\n\r\n    if (params.cssMode) {\r\n      const isH = swiper.isHorizontal();\r\n\r\n      if (speed === 0) {\r\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\r\n      } else {\r\n        if (!swiper.support.smoothScroll) {\r\n          animateCSSModeScroll({\r\n            swiper,\r\n            targetPosition: -newTranslate,\r\n            side: isH ? 'left' : 'top'\r\n          });\r\n          return true;\r\n        }\r\n\r\n        wrapperEl.scrollTo({\r\n          [isH ? 'left' : 'top']: -newTranslate,\r\n          behavior: 'smooth'\r\n        });\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    if (speed === 0) {\r\n      swiper.setTransition(0);\r\n      swiper.setTranslate(newTranslate);\r\n\r\n      if (runCallbacks) {\r\n        swiper.emit('beforeTransitionStart', speed, internal);\r\n        swiper.emit('transitionEnd');\r\n      }\r\n    } else {\r\n      swiper.setTransition(speed);\r\n      swiper.setTranslate(newTranslate);\r\n\r\n      if (runCallbacks) {\r\n        swiper.emit('beforeTransitionStart', speed, internal);\r\n        swiper.emit('transitionStart');\r\n      }\r\n\r\n      if (!swiper.animating) {\r\n        swiper.animating = true;\r\n\r\n        if (!swiper.onTranslateToWrapperTransitionEnd) {\r\n          swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\r\n            if (!swiper || swiper.destroyed) return;\r\n            if (e.target !== this) return;\r\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\r\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\r\n            swiper.onTranslateToWrapperTransitionEnd = null;\r\n            delete swiper.onTranslateToWrapperTransitionEnd;\r\n\r\n            if (runCallbacks) {\r\n              swiper.emit('transitionEnd');\r\n            }\r\n          };\r\n        }\r\n\r\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\r\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  var translate = {\r\n    getTranslate: getSwiperTranslate,\r\n    setTranslate,\r\n    minTranslate,\r\n    maxTranslate,\r\n    translateTo\r\n  };\r\n\r\n  function setTransition(duration, byController) {\r\n    const swiper = this;\r\n\r\n    if (!swiper.params.cssMode) {\r\n      swiper.$wrapperEl.transition(duration);\r\n    }\r\n\r\n    swiper.emit('setTransition', duration, byController);\r\n  }\r\n\r\n  function transitionEmit(_ref) {\r\n    let {\r\n      swiper,\r\n      runCallbacks,\r\n      direction,\r\n      step\r\n    } = _ref;\r\n    const {\r\n      activeIndex,\r\n      previousIndex\r\n    } = swiper;\r\n    let dir = direction;\r\n\r\n    if (!dir) {\r\n      if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\r\n    }\r\n\r\n    swiper.emit(`transition${step}`);\r\n\r\n    if (runCallbacks && activeIndex !== previousIndex) {\r\n      if (dir === 'reset') {\r\n        swiper.emit(`slideResetTransition${step}`);\r\n        return;\r\n      }\r\n\r\n      swiper.emit(`slideChangeTransition${step}`);\r\n\r\n      if (dir === 'next') {\r\n        swiper.emit(`slideNextTransition${step}`);\r\n      } else {\r\n        swiper.emit(`slidePrevTransition${step}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  function transitionStart(runCallbacks, direction) {\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    const swiper = this;\r\n    const {\r\n      params\r\n    } = swiper;\r\n    if (params.cssMode) return;\r\n\r\n    if (params.autoHeight) {\r\n      swiper.updateAutoHeight();\r\n    }\r\n\r\n    transitionEmit({\r\n      swiper,\r\n      runCallbacks,\r\n      direction,\r\n      step: 'Start'\r\n    });\r\n  }\r\n\r\n  function transitionEnd(runCallbacks, direction) {\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    const swiper = this;\r\n    const {\r\n      params\r\n    } = swiper;\r\n    swiper.animating = false;\r\n    if (params.cssMode) return;\r\n    swiper.setTransition(0);\r\n    transitionEmit({\r\n      swiper,\r\n      runCallbacks,\r\n      direction,\r\n      step: 'End'\r\n    });\r\n  }\r\n\r\n  var transition = {\r\n    setTransition,\r\n    transitionStart,\r\n    transitionEnd\r\n  };\r\n\r\n  function slideTo(index, speed, runCallbacks, internal, initial) {\r\n    if (index === void 0) {\r\n      index = 0;\r\n    }\r\n\r\n    if (speed === void 0) {\r\n      speed = this.params.speed;\r\n    }\r\n\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    if (typeof index !== 'number' && typeof index !== 'string') {\r\n      throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`);\r\n    }\r\n\r\n    if (typeof index === 'string') {\r\n      /**\r\n       * The `index` argument converted from `string` to `number`.\r\n       * @type {number}\r\n       */\r\n      const indexAsNumber = parseInt(index, 10);\r\n      /**\r\n       * Determines whether the `index` argument is a valid `number`\r\n       * after being converted from the `string` type.\r\n       * @type {boolean}\r\n       */\r\n\r\n      const isValidNumber = isFinite(indexAsNumber);\r\n\r\n      if (!isValidNumber) {\r\n        throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\r\n      } // Knowing that the converted `index` is a valid number,\r\n      // we can update the original argument's value.\r\n\r\n\r\n      index = indexAsNumber;\r\n    }\r\n\r\n    const swiper = this;\r\n    let slideIndex = index;\r\n    if (slideIndex < 0) slideIndex = 0;\r\n    const {\r\n      params,\r\n      snapGrid,\r\n      slidesGrid,\r\n      previousIndex,\r\n      activeIndex,\r\n      rtlTranslate: rtl,\r\n      wrapperEl,\r\n      enabled\r\n    } = swiper;\r\n\r\n    if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\r\n      return false;\r\n    }\r\n\r\n    const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\r\n    let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\r\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n\r\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\r\n      swiper.emit('beforeSlideChangeStart');\r\n    }\r\n\r\n    const translate = -snapGrid[snapIndex]; // Update progress\r\n\r\n    swiper.updateProgress(translate); // Normalize slideIndex\r\n\r\n    if (params.normalizeSlideIndex) {\r\n      for (let i = 0; i < slidesGrid.length; i += 1) {\r\n        const normalizedTranslate = -Math.floor(translate * 100);\r\n        const normalizedGrid = Math.floor(slidesGrid[i] * 100);\r\n        const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\r\n\r\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\r\n          if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\r\n            slideIndex = i;\r\n          } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\r\n            slideIndex = i + 1;\r\n          }\r\n        } else if (normalizedTranslate >= normalizedGrid) {\r\n          slideIndex = i;\r\n        }\r\n      }\r\n    } // Directions locks\r\n\r\n\r\n    if (swiper.initialized && slideIndex !== activeIndex) {\r\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\r\n        return false;\r\n      }\r\n\r\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\r\n        if ((activeIndex || 0) !== slideIndex) return false;\r\n      }\r\n    }\r\n\r\n    let direction;\r\n    if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\r\n\r\n    if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\r\n      swiper.updateActiveIndex(slideIndex); // Update Height\r\n\r\n      if (params.autoHeight) {\r\n        swiper.updateAutoHeight();\r\n      }\r\n\r\n      swiper.updateSlidesClasses();\r\n\r\n      if (params.effect !== 'slide') {\r\n        swiper.setTranslate(translate);\r\n      }\r\n\r\n      if (direction !== 'reset') {\r\n        swiper.transitionStart(runCallbacks, direction);\r\n        swiper.transitionEnd(runCallbacks, direction);\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    if (params.cssMode) {\r\n      const isH = swiper.isHorizontal();\r\n      const t = rtl ? translate : -translate;\r\n\r\n      if (speed === 0) {\r\n        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n\r\n        if (isVirtual) {\r\n          swiper.wrapperEl.style.scrollSnapType = 'none';\r\n          swiper._immediateVirtual = true;\r\n        }\r\n\r\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\r\n\r\n        if (isVirtual) {\r\n          requestAnimationFrame(() => {\r\n            swiper.wrapperEl.style.scrollSnapType = '';\r\n            swiper._swiperImmediateVirtual = false;\r\n          });\r\n        }\r\n      } else {\r\n        if (!swiper.support.smoothScroll) {\r\n          animateCSSModeScroll({\r\n            swiper,\r\n            targetPosition: t,\r\n            side: isH ? 'left' : 'top'\r\n          });\r\n          return true;\r\n        }\r\n\r\n        wrapperEl.scrollTo({\r\n          [isH ? 'left' : 'top']: t,\r\n          behavior: 'smooth'\r\n        });\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    swiper.setTransition(speed);\r\n    swiper.setTranslate(translate);\r\n    swiper.updateActiveIndex(slideIndex);\r\n    swiper.updateSlidesClasses();\r\n    swiper.emit('beforeTransitionStart', speed, internal);\r\n    swiper.transitionStart(runCallbacks, direction);\r\n\r\n    if (speed === 0) {\r\n      swiper.transitionEnd(runCallbacks, direction);\r\n    } else if (!swiper.animating) {\r\n      swiper.animating = true;\r\n\r\n      if (!swiper.onSlideToWrapperTransitionEnd) {\r\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\r\n          if (!swiper || swiper.destroyed) return;\r\n          if (e.target !== this) return;\r\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\r\n          swiper.onSlideToWrapperTransitionEnd = null;\r\n          delete swiper.onSlideToWrapperTransitionEnd;\r\n          swiper.transitionEnd(runCallbacks, direction);\r\n        };\r\n      }\r\n\r\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function slideToLoop(index, speed, runCallbacks, internal) {\r\n    if (index === void 0) {\r\n      index = 0;\r\n    }\r\n\r\n    if (speed === void 0) {\r\n      speed = this.params.speed;\r\n    }\r\n\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    const swiper = this;\r\n    let newIndex = index;\r\n\r\n    if (swiper.params.loop) {\r\n      newIndex += swiper.loopedSlides;\r\n    }\r\n\r\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\r\n  }\r\n\r\n  /* eslint no-unused-vars: \"off\" */\r\n  function slideNext(speed, runCallbacks, internal) {\r\n    if (speed === void 0) {\r\n      speed = this.params.speed;\r\n    }\r\n\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    const swiper = this;\r\n    const {\r\n      animating,\r\n      enabled,\r\n      params\r\n    } = swiper;\r\n    if (!enabled) return swiper;\r\n    let perGroup = params.slidesPerGroup;\r\n\r\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\r\n      perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\r\n    }\r\n\r\n    const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\r\n\r\n    if (params.loop) {\r\n      if (animating && params.loopPreventsSlide) return false;\r\n      swiper.loopFix(); // eslint-disable-next-line\r\n\r\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n    }\r\n\r\n    if (params.rewind && swiper.isEnd) {\r\n      return swiper.slideTo(0, speed, runCallbacks, internal);\r\n    }\r\n\r\n    return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\r\n  }\r\n\r\n  /* eslint no-unused-vars: \"off\" */\r\n  function slidePrev(speed, runCallbacks, internal) {\r\n    if (speed === void 0) {\r\n      speed = this.params.speed;\r\n    }\r\n\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    const swiper = this;\r\n    const {\r\n      params,\r\n      animating,\r\n      snapGrid,\r\n      slidesGrid,\r\n      rtlTranslate,\r\n      enabled\r\n    } = swiper;\r\n    if (!enabled) return swiper;\r\n\r\n    if (params.loop) {\r\n      if (animating && params.loopPreventsSlide) return false;\r\n      swiper.loopFix(); // eslint-disable-next-line\r\n\r\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n    }\r\n\r\n    const translate = rtlTranslate ? swiper.translate : -swiper.translate;\r\n\r\n    function normalize(val) {\r\n      if (val < 0) return -Math.floor(Math.abs(val));\r\n      return Math.floor(val);\r\n    }\r\n\r\n    const normalizedTranslate = normalize(translate);\r\n    const normalizedSnapGrid = snapGrid.map(val => normalize(val));\r\n    let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\r\n\r\n    if (typeof prevSnap === 'undefined' && params.cssMode) {\r\n      let prevSnapIndex;\r\n      snapGrid.forEach((snap, snapIndex) => {\r\n        if (normalizedTranslate >= snap) {\r\n          // prevSnap = snap;\r\n          prevSnapIndex = snapIndex;\r\n        }\r\n      });\r\n\r\n      if (typeof prevSnapIndex !== 'undefined') {\r\n        prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\r\n      }\r\n    }\r\n\r\n    let prevIndex = 0;\r\n\r\n    if (typeof prevSnap !== 'undefined') {\r\n      prevIndex = slidesGrid.indexOf(prevSnap);\r\n      if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\r\n\r\n      if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\r\n        prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\r\n        prevIndex = Math.max(prevIndex, 0);\r\n      }\r\n    }\r\n\r\n    if (params.rewind && swiper.isBeginning) {\r\n      const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\r\n      return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\r\n    }\r\n\r\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\r\n  }\r\n\r\n  /* eslint no-unused-vars: \"off\" */\r\n  function slideReset(speed, runCallbacks, internal) {\r\n    if (speed === void 0) {\r\n      speed = this.params.speed;\r\n    }\r\n\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    const swiper = this;\r\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\r\n  }\r\n\r\n  /* eslint no-unused-vars: \"off\" */\r\n  function slideToClosest(speed, runCallbacks, internal, threshold) {\r\n    if (speed === void 0) {\r\n      speed = this.params.speed;\r\n    }\r\n\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    if (threshold === void 0) {\r\n      threshold = 0.5;\r\n    }\r\n\r\n    const swiper = this;\r\n    let index = swiper.activeIndex;\r\n    const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\r\n    const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\r\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n\r\n    if (translate >= swiper.snapGrid[snapIndex]) {\r\n      // The current translate is on or after the current snap index, so the choice\r\n      // is between the current index and the one after it.\r\n      const currentSnap = swiper.snapGrid[snapIndex];\r\n      const nextSnap = swiper.snapGrid[snapIndex + 1];\r\n\r\n      if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\r\n        index += swiper.params.slidesPerGroup;\r\n      }\r\n    } else {\r\n      // The current translate is before the current snap index, so the choice\r\n      // is between the current index and the one before it.\r\n      const prevSnap = swiper.snapGrid[snapIndex - 1];\r\n      const currentSnap = swiper.snapGrid[snapIndex];\r\n\r\n      if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\r\n        index -= swiper.params.slidesPerGroup;\r\n      }\r\n    }\r\n\r\n    index = Math.max(index, 0);\r\n    index = Math.min(index, swiper.slidesGrid.length - 1);\r\n    return swiper.slideTo(index, speed, runCallbacks, internal);\r\n  }\r\n\r\n  function slideToClickedSlide() {\r\n    const swiper = this;\r\n    const {\r\n      params,\r\n      $wrapperEl\r\n    } = swiper;\r\n    const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\r\n    let slideToIndex = swiper.clickedIndex;\r\n    let realIndex;\r\n\r\n    if (params.loop) {\r\n      if (swiper.animating) return;\r\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\r\n\r\n      if (params.centeredSlides) {\r\n        if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\r\n          swiper.loopFix();\r\n          slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\r\n          nextTick(() => {\r\n            swiper.slideTo(slideToIndex);\r\n          });\r\n        } else {\r\n          swiper.slideTo(slideToIndex);\r\n        }\r\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\r\n        swiper.loopFix();\r\n        slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\r\n        nextTick(() => {\r\n          swiper.slideTo(slideToIndex);\r\n        });\r\n      } else {\r\n        swiper.slideTo(slideToIndex);\r\n      }\r\n    } else {\r\n      swiper.slideTo(slideToIndex);\r\n    }\r\n  }\r\n\r\n  var slide = {\r\n    slideTo,\r\n    slideToLoop,\r\n    slideNext,\r\n    slidePrev,\r\n    slideReset,\r\n    slideToClosest,\r\n    slideToClickedSlide\r\n  };\r\n\r\n  function loopCreate() {\r\n    const swiper = this;\r\n    const document = getDocument();\r\n    const {\r\n      params,\r\n      $wrapperEl\r\n    } = swiper; // Remove duplicated slides\r\n\r\n    const $selector = $wrapperEl.children().length > 0 ? $($wrapperEl.children()[0].parentNode) : $wrapperEl;\r\n    $selector.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\r\n    let slides = $selector.children(`.${params.slideClass}`);\r\n\r\n    if (params.loopFillGroupWithBlank) {\r\n      const blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\r\n\r\n      if (blankSlidesNum !== params.slidesPerGroup) {\r\n        for (let i = 0; i < blankSlidesNum; i += 1) {\r\n          const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\r\n          $selector.append(blankNode);\r\n        }\r\n\r\n        slides = $selector.children(`.${params.slideClass}`);\r\n      }\r\n    }\r\n\r\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\r\n    swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\r\n    swiper.loopedSlides += params.loopAdditionalSlides;\r\n\r\n    if (swiper.loopedSlides > slides.length) {\r\n      swiper.loopedSlides = slides.length;\r\n    }\r\n\r\n    const prependSlides = [];\r\n    const appendSlides = [];\r\n    slides.each((el, index) => {\r\n      const slide = $(el);\r\n\r\n      if (index < swiper.loopedSlides) {\r\n        appendSlides.push(el);\r\n      }\r\n\r\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) {\r\n        prependSlides.push(el);\r\n      }\r\n\r\n      slide.attr('data-swiper-slide-index', index);\r\n    });\r\n\r\n    for (let i = 0; i < appendSlides.length; i += 1) {\r\n      $selector.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\r\n    }\r\n\r\n    for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\r\n      $selector.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\r\n    }\r\n  }\r\n\r\n  function loopFix() {\r\n    const swiper = this;\r\n    swiper.emit('beforeLoopFix');\r\n    const {\r\n      activeIndex,\r\n      slides,\r\n      loopedSlides,\r\n      allowSlidePrev,\r\n      allowSlideNext,\r\n      snapGrid,\r\n      rtlTranslate: rtl\r\n    } = swiper;\r\n    let newIndex;\r\n    swiper.allowSlidePrev = true;\r\n    swiper.allowSlideNext = true;\r\n    const snapTranslate = -snapGrid[activeIndex];\r\n    const diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\r\n\r\n    if (activeIndex < loopedSlides) {\r\n      newIndex = slides.length - loopedSlides * 3 + activeIndex;\r\n      newIndex += loopedSlides;\r\n      const slideChanged = swiper.slideTo(newIndex, 0, false, true);\r\n\r\n      if (slideChanged && diff !== 0) {\r\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\r\n      }\r\n    } else if (activeIndex >= slides.length - loopedSlides) {\r\n      // Fix For Positive Oversliding\r\n      newIndex = -slides.length + activeIndex + loopedSlides;\r\n      newIndex += loopedSlides;\r\n      const slideChanged = swiper.slideTo(newIndex, 0, false, true);\r\n\r\n      if (slideChanged && diff !== 0) {\r\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\r\n      }\r\n    }\r\n\r\n    swiper.allowSlidePrev = allowSlidePrev;\r\n    swiper.allowSlideNext = allowSlideNext;\r\n    swiper.emit('loopFix');\r\n  }\r\n\r\n  function loopDestroy() {\r\n    const swiper = this;\r\n    const {\r\n      $wrapperEl,\r\n      params,\r\n      slides\r\n    } = swiper;\r\n    $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\r\n    slides.removeAttr('data-swiper-slide-index');\r\n  }\r\n\r\n  var loop = {\r\n    loopCreate,\r\n    loopFix,\r\n    loopDestroy\r\n  };\r\n\r\n  function setGrabCursor(moving) {\r\n    const swiper = this;\r\n    if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\r\n    const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\r\n    el.style.cursor = 'move';\r\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\r\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\r\n    el.style.cursor = moving ? 'grabbing' : 'grab';\r\n  }\r\n\r\n  function unsetGrabCursor() {\r\n    const swiper = this;\r\n\r\n    if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\r\n      return;\r\n    }\r\n\r\n    swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\r\n  }\r\n\r\n  var grabCursor = {\r\n    setGrabCursor,\r\n    unsetGrabCursor\r\n  };\r\n\r\n  function closestElement(selector, base) {\r\n    if (base === void 0) {\r\n      base = this;\r\n    }\r\n\r\n    function __closestFrom(el) {\r\n      if (!el || el === getDocument() || el === getWindow()) return null;\r\n      if (el.assignedSlot) el = el.assignedSlot;\r\n      const found = el.closest(selector);\r\n      return found || __closestFrom(el.getRootNode().host);\r\n    }\r\n\r\n    return __closestFrom(base);\r\n  }\r\n\r\n  function onTouchStart(event) {\r\n    const swiper = this;\r\n    const document = getDocument();\r\n    const window = getWindow();\r\n    const data = swiper.touchEventsData;\r\n    const {\r\n      params,\r\n      touches,\r\n      enabled\r\n    } = swiper;\r\n    if (!enabled) return;\r\n\r\n    if (swiper.animating && params.preventInteractionOnTransition) {\r\n      return;\r\n    }\r\n\r\n    if (!swiper.animating && params.cssMode && params.loop) {\r\n      swiper.loopFix();\r\n    }\r\n\r\n    let e = event;\r\n    if (e.originalEvent) e = e.originalEvent;\r\n    let $targetEl = $(e.target);\r\n\r\n    if (params.touchEventsTarget === 'wrapper') {\r\n      if (!$targetEl.closest(swiper.wrapperEl).length) return;\r\n    }\r\n\r\n    data.isTouchEvent = e.type === 'touchstart';\r\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\r\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\r\n    if (data.isTouched && data.isMoved) return; // change target el for shadow root component\r\n\r\n    const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\r\n\r\n    if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) {\r\n      $targetEl = $(event.path[0]);\r\n    }\r\n\r\n    const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\r\n    const isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\r\n\r\n    if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, e.target) : $targetEl.closest(noSwipingSelector)[0])) {\r\n      swiper.allowClick = true;\r\n      return;\r\n    }\r\n\r\n    if (params.swipeHandler) {\r\n      if (!$targetEl.closest(params.swipeHandler)[0]) return;\r\n    }\r\n\r\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\r\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\r\n    const startX = touches.currentX;\r\n    const startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\r\n\r\n    const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\r\n    const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\r\n\r\n    if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\r\n      if (edgeSwipeDetection === 'prevent') {\r\n        event.preventDefault();\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    Object.assign(data, {\r\n      isTouched: true,\r\n      isMoved: false,\r\n      allowTouchCallbacks: true,\r\n      isScrolling: undefined,\r\n      startMoving: undefined\r\n    });\r\n    touches.startX = startX;\r\n    touches.startY = startY;\r\n    data.touchStartTime = now();\r\n    swiper.allowClick = true;\r\n    swiper.updateSize();\r\n    swiper.swipeDirection = undefined;\r\n    if (params.threshold > 0) data.allowThresholdMove = false;\r\n\r\n    if (e.type !== 'touchstart') {\r\n      let preventDefault = true;\r\n\r\n      if ($targetEl.is(data.focusableElements)) {\r\n        preventDefault = false;\r\n\r\n        if ($targetEl[0].nodeName === 'SELECT') {\r\n          data.isTouched = false;\r\n        }\r\n      }\r\n\r\n      if (document.activeElement && $(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) {\r\n        document.activeElement.blur();\r\n      }\r\n\r\n      const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\r\n\r\n      if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n\r\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\r\n      swiper.freeMode.onTouchStart();\r\n    }\r\n\r\n    swiper.emit('touchStart', e);\r\n  }\r\n\r\n  function onTouchMove(event) {\r\n    const document = getDocument();\r\n    const swiper = this;\r\n    const data = swiper.touchEventsData;\r\n    const {\r\n      params,\r\n      touches,\r\n      rtlTranslate: rtl,\r\n      enabled\r\n    } = swiper;\r\n    if (!enabled) return;\r\n    let e = event;\r\n    if (e.originalEvent) e = e.originalEvent;\r\n\r\n    if (!data.isTouched) {\r\n      if (data.startMoving && data.isScrolling) {\r\n        swiper.emit('touchMoveOpposite', e);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (data.isTouchEvent && e.type !== 'touchmove') return;\r\n    const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\r\n    const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\r\n    const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\r\n\r\n    if (e.preventedByNestedSwiper) {\r\n      touches.startX = pageX;\r\n      touches.startY = pageY;\r\n      return;\r\n    }\r\n\r\n    if (!swiper.allowTouchMove) {\r\n      if (!$(e.target).is(data.focusableElements)) {\r\n        swiper.allowClick = false;\r\n      }\r\n\r\n      if (data.isTouched) {\r\n        Object.assign(touches, {\r\n          startX: pageX,\r\n          startY: pageY,\r\n          currentX: pageX,\r\n          currentY: pageY\r\n        });\r\n        data.touchStartTime = now();\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\r\n      if (swiper.isVertical()) {\r\n        // Vertical\r\n        if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\r\n          data.isTouched = false;\r\n          data.isMoved = false;\r\n          return;\r\n        }\r\n      } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (data.isTouchEvent && document.activeElement) {\r\n      if (e.target === document.activeElement && $(e.target).is(data.focusableElements)) {\r\n        data.isMoved = true;\r\n        swiper.allowClick = false;\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (data.allowTouchCallbacks) {\r\n      swiper.emit('touchMove', e);\r\n    }\r\n\r\n    if (e.targetTouches && e.targetTouches.length > 1) return;\r\n    touches.currentX = pageX;\r\n    touches.currentY = pageY;\r\n    const diffX = touches.currentX - touches.startX;\r\n    const diffY = touches.currentY - touches.startY;\r\n    if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\r\n\r\n    if (typeof data.isScrolling === 'undefined') {\r\n      let touchAngle;\r\n\r\n      if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\r\n        data.isScrolling = false;\r\n      } else {\r\n        // eslint-disable-next-line\r\n        if (diffX * diffX + diffY * diffY >= 25) {\r\n          touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\r\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (data.isScrolling) {\r\n      swiper.emit('touchMoveOpposite', e);\r\n    }\r\n\r\n    if (typeof data.startMoving === 'undefined') {\r\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\r\n        data.startMoving = true;\r\n      }\r\n    }\r\n\r\n    if (data.isScrolling) {\r\n      data.isTouched = false;\r\n      return;\r\n    }\r\n\r\n    if (!data.startMoving) {\r\n      return;\r\n    }\r\n\r\n    swiper.allowClick = false;\r\n\r\n    if (!params.cssMode && e.cancelable) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    if (params.touchMoveStopPropagation && !params.nested) {\r\n      e.stopPropagation();\r\n    }\r\n\r\n    if (!data.isMoved) {\r\n      if (params.loop && !params.cssMode) {\r\n        swiper.loopFix();\r\n      }\r\n\r\n      data.startTranslate = swiper.getTranslate();\r\n      swiper.setTransition(0);\r\n\r\n      if (swiper.animating) {\r\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\r\n      }\r\n\r\n      data.allowMomentumBounce = false; // Grab Cursor\r\n\r\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n        swiper.setGrabCursor(true);\r\n      }\r\n\r\n      swiper.emit('sliderFirstMove', e);\r\n    }\r\n\r\n    swiper.emit('sliderMove', e);\r\n    data.isMoved = true;\r\n    let diff = swiper.isHorizontal() ? diffX : diffY;\r\n    touches.diff = diff;\r\n    diff *= params.touchRatio;\r\n    if (rtl) diff = -diff;\r\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\r\n    data.currentTranslate = diff + data.startTranslate;\r\n    let disableParentSwiper = true;\r\n    let resistanceRatio = params.resistanceRatio;\r\n\r\n    if (params.touchReleaseOnEdges) {\r\n      resistanceRatio = 0;\r\n    }\r\n\r\n    if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\r\n      disableParentSwiper = false;\r\n      if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\r\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\r\n      disableParentSwiper = false;\r\n      if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\r\n    }\r\n\r\n    if (disableParentSwiper) {\r\n      e.preventedByNestedSwiper = true;\r\n    } // Directions locks\r\n\r\n\r\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\r\n      data.currentTranslate = data.startTranslate;\r\n    }\r\n\r\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\r\n      data.currentTranslate = data.startTranslate;\r\n    }\r\n\r\n    if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\r\n      data.currentTranslate = data.startTranslate;\r\n    } // Threshold\r\n\r\n\r\n    if (params.threshold > 0) {\r\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\r\n        if (!data.allowThresholdMove) {\r\n          data.allowThresholdMove = true;\r\n          touches.startX = touches.currentX;\r\n          touches.startY = touches.currentY;\r\n          data.currentTranslate = data.startTranslate;\r\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\r\n          return;\r\n        }\r\n      } else {\r\n        data.currentTranslate = data.startTranslate;\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (!params.followFinger || params.cssMode) return; // Update active index in free mode\r\n\r\n    if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n    }\r\n\r\n    if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\r\n      swiper.freeMode.onTouchMove();\r\n    } // Update progress\r\n\r\n\r\n    swiper.updateProgress(data.currentTranslate); // Update translate\r\n\r\n    swiper.setTranslate(data.currentTranslate);\r\n  }\r\n\r\n  function onTouchEnd(event) {\r\n    const swiper = this;\r\n    const data = swiper.touchEventsData;\r\n    const {\r\n      params,\r\n      touches,\r\n      rtlTranslate: rtl,\r\n      slidesGrid,\r\n      enabled\r\n    } = swiper;\r\n    if (!enabled) return;\r\n    let e = event;\r\n    if (e.originalEvent) e = e.originalEvent;\r\n\r\n    if (data.allowTouchCallbacks) {\r\n      swiper.emit('touchEnd', e);\r\n    }\r\n\r\n    data.allowTouchCallbacks = false;\r\n\r\n    if (!data.isTouched) {\r\n      if (data.isMoved && params.grabCursor) {\r\n        swiper.setGrabCursor(false);\r\n      }\r\n\r\n      data.isMoved = false;\r\n      data.startMoving = false;\r\n      return;\r\n    } // Return Grab Cursor\r\n\r\n\r\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n      swiper.setGrabCursor(false);\r\n    } // Time diff\r\n\r\n\r\n    const touchEndTime = now();\r\n    const timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\r\n\r\n    if (swiper.allowClick) {\r\n      const pathTree = e.path || e.composedPath && e.composedPath();\r\n      swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\r\n      swiper.emit('tap click', e);\r\n\r\n      if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\r\n        swiper.emit('doubleTap doubleClick', e);\r\n      }\r\n    }\r\n\r\n    data.lastClickTime = now();\r\n    nextTick(() => {\r\n      if (!swiper.destroyed) swiper.allowClick = true;\r\n    });\r\n\r\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\r\n      data.isTouched = false;\r\n      data.isMoved = false;\r\n      data.startMoving = false;\r\n      return;\r\n    }\r\n\r\n    data.isTouched = false;\r\n    data.isMoved = false;\r\n    data.startMoving = false;\r\n    let currentPos;\r\n\r\n    if (params.followFinger) {\r\n      currentPos = rtl ? swiper.translate : -swiper.translate;\r\n    } else {\r\n      currentPos = -data.currentTranslate;\r\n    }\r\n\r\n    if (params.cssMode) {\r\n      return;\r\n    }\r\n\r\n    if (swiper.params.freeMode && params.freeMode.enabled) {\r\n      swiper.freeMode.onTouchEnd({\r\n        currentPos\r\n      });\r\n      return;\r\n    } // Find current slide\r\n\r\n\r\n    let stopIndex = 0;\r\n    let groupSize = swiper.slidesSizesGrid[0];\r\n\r\n    for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\r\n      const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\r\n\r\n      if (typeof slidesGrid[i + increment] !== 'undefined') {\r\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\r\n          stopIndex = i;\r\n          groupSize = slidesGrid[i + increment] - slidesGrid[i];\r\n        }\r\n      } else if (currentPos >= slidesGrid[i]) {\r\n        stopIndex = i;\r\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\r\n      }\r\n    } // Find current slide size\r\n\r\n\r\n    const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\r\n    const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\r\n\r\n    if (timeDiff > params.longSwipesMs) {\r\n      // Long touches\r\n      if (!params.longSwipes) {\r\n        swiper.slideTo(swiper.activeIndex);\r\n        return;\r\n      }\r\n\r\n      if (swiper.swipeDirection === 'next') {\r\n        if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\r\n      }\r\n\r\n      if (swiper.swipeDirection === 'prev') {\r\n        if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\r\n      }\r\n    } else {\r\n      // Short swipes\r\n      if (!params.shortSwipes) {\r\n        swiper.slideTo(swiper.activeIndex);\r\n        return;\r\n      }\r\n\r\n      const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\r\n\r\n      if (!isNavButtonTarget) {\r\n        if (swiper.swipeDirection === 'next') {\r\n          swiper.slideTo(stopIndex + increment);\r\n        }\r\n\r\n        if (swiper.swipeDirection === 'prev') {\r\n          swiper.slideTo(stopIndex);\r\n        }\r\n      } else if (e.target === swiper.navigation.nextEl) {\r\n        swiper.slideTo(stopIndex + increment);\r\n      } else {\r\n        swiper.slideTo(stopIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  function onResize() {\r\n    const swiper = this;\r\n    const {\r\n      params,\r\n      el\r\n    } = swiper;\r\n    if (el && el.offsetWidth === 0) return; // Breakpoints\r\n\r\n    if (params.breakpoints) {\r\n      swiper.setBreakpoint();\r\n    } // Save locks\r\n\r\n\r\n    const {\r\n      allowSlideNext,\r\n      allowSlidePrev,\r\n      snapGrid\r\n    } = swiper; // Disable locks on resize\r\n\r\n    swiper.allowSlideNext = true;\r\n    swiper.allowSlidePrev = true;\r\n    swiper.updateSize();\r\n    swiper.updateSlides();\r\n    swiper.updateSlidesClasses();\r\n\r\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\r\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n    } else {\r\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n    }\r\n\r\n    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\r\n      swiper.autoplay.run();\r\n    } // Return locks after resize\r\n\r\n\r\n    swiper.allowSlidePrev = allowSlidePrev;\r\n    swiper.allowSlideNext = allowSlideNext;\r\n\r\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n      swiper.checkOverflow();\r\n    }\r\n  }\r\n\r\n  function onClick(e) {\r\n    const swiper = this;\r\n    if (!swiper.enabled) return;\r\n\r\n    if (!swiper.allowClick) {\r\n      if (swiper.params.preventClicks) e.preventDefault();\r\n\r\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\r\n        e.stopPropagation();\r\n        e.stopImmediatePropagation();\r\n      }\r\n    }\r\n  }\r\n\r\n  function onScroll() {\r\n    const swiper = this;\r\n    const {\r\n      wrapperEl,\r\n      rtlTranslate,\r\n      enabled\r\n    } = swiper;\r\n    if (!enabled) return;\r\n    swiper.previousTranslate = swiper.translate;\r\n\r\n    if (swiper.isHorizontal()) {\r\n      swiper.translate = -wrapperEl.scrollLeft;\r\n    } else {\r\n      swiper.translate = -wrapperEl.scrollTop;\r\n    } // eslint-disable-next-line\r\n\r\n\r\n    if (swiper.translate === -0) swiper.translate = 0;\r\n    swiper.updateActiveIndex();\r\n    swiper.updateSlidesClasses();\r\n    let newProgress;\r\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n\r\n    if (translatesDiff === 0) {\r\n      newProgress = 0;\r\n    } else {\r\n      newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\r\n    }\r\n\r\n    if (newProgress !== swiper.progress) {\r\n      swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\r\n    }\r\n\r\n    swiper.emit('setTranslate', swiper.translate, false);\r\n  }\r\n\r\n  let dummyEventAttached = false;\r\n\r\n  function dummyEventListener() {}\r\n\r\n  const events = (swiper, method) => {\r\n    const document = getDocument();\r\n    const {\r\n      params,\r\n      touchEvents,\r\n      el,\r\n      wrapperEl,\r\n      device,\r\n      support\r\n    } = swiper;\r\n    const capture = !!params.nested;\r\n    const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\r\n    const swiperMethod = method; // Touch Events\r\n\r\n    if (!support.touch) {\r\n      el[domMethod](touchEvents.start, swiper.onTouchStart, false);\r\n      document[domMethod](touchEvents.move, swiper.onTouchMove, capture);\r\n      document[domMethod](touchEvents.end, swiper.onTouchEnd, false);\r\n    } else {\r\n      const passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {\r\n        passive: true,\r\n        capture: false\r\n      } : false;\r\n      el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);\r\n      el[domMethod](touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\r\n        passive: false,\r\n        capture\r\n      } : capture);\r\n      el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);\r\n\r\n      if (touchEvents.cancel) {\r\n        el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);\r\n      }\r\n    } // Prevent Links Clicks\r\n\r\n\r\n    if (params.preventClicks || params.preventClicksPropagation) {\r\n      el[domMethod]('click', swiper.onClick, true);\r\n    }\r\n\r\n    if (params.cssMode) {\r\n      wrapperEl[domMethod]('scroll', swiper.onScroll);\r\n    } // Resize handler\r\n\r\n\r\n    if (params.updateOnWindowResize) {\r\n      swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\r\n    } else {\r\n      swiper[swiperMethod]('observerUpdate', onResize, true);\r\n    }\r\n  };\r\n\r\n  function attachEvents() {\r\n    const swiper = this;\r\n    const document = getDocument();\r\n    const {\r\n      params,\r\n      support\r\n    } = swiper;\r\n    swiper.onTouchStart = onTouchStart.bind(swiper);\r\n    swiper.onTouchMove = onTouchMove.bind(swiper);\r\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\r\n\r\n    if (params.cssMode) {\r\n      swiper.onScroll = onScroll.bind(swiper);\r\n    }\r\n\r\n    swiper.onClick = onClick.bind(swiper);\r\n\r\n    if (support.touch && !dummyEventAttached) {\r\n      document.addEventListener('touchstart', dummyEventListener);\r\n      dummyEventAttached = true;\r\n    }\r\n\r\n    events(swiper, 'on');\r\n  }\r\n\r\n  function detachEvents() {\r\n    const swiper = this;\r\n    events(swiper, 'off');\r\n  }\r\n\r\n  var events$1 = {\r\n    attachEvents,\r\n    detachEvents\r\n  };\r\n\r\n  const isGridEnabled = (swiper, params) => {\r\n    return swiper.grid && params.grid && params.grid.rows > 1;\r\n  };\r\n\r\n  function setBreakpoint() {\r\n    const swiper = this;\r\n    const {\r\n      activeIndex,\r\n      initialized,\r\n      loopedSlides = 0,\r\n      params,\r\n      $el\r\n    } = swiper;\r\n    const breakpoints = params.breakpoints;\r\n    if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\r\n\r\n    const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\r\n    if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\r\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\r\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\r\n    const wasMultiRow = isGridEnabled(swiper, params);\r\n    const isMultiRow = isGridEnabled(swiper, breakpointParams);\r\n    const wasEnabled = params.enabled;\r\n\r\n    if (wasMultiRow && !isMultiRow) {\r\n      $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);\r\n      swiper.emitContainerClasses();\r\n    } else if (!wasMultiRow && isMultiRow) {\r\n      $el.addClass(`${params.containerModifierClass}grid`);\r\n\r\n      if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\r\n        $el.addClass(`${params.containerModifierClass}grid-column`);\r\n      }\r\n\r\n      swiper.emitContainerClasses();\r\n    }\r\n\r\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\r\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\r\n\r\n    if (directionChanged && initialized) {\r\n      swiper.changeDirection();\r\n    }\r\n\r\n    extend(swiper.params, breakpointParams);\r\n    const isEnabled = swiper.params.enabled;\r\n    Object.assign(swiper, {\r\n      allowTouchMove: swiper.params.allowTouchMove,\r\n      allowSlideNext: swiper.params.allowSlideNext,\r\n      allowSlidePrev: swiper.params.allowSlidePrev\r\n    });\r\n\r\n    if (wasEnabled && !isEnabled) {\r\n      swiper.disable();\r\n    } else if (!wasEnabled && isEnabled) {\r\n      swiper.enable();\r\n    }\r\n\r\n    swiper.currentBreakpoint = breakpoint;\r\n    swiper.emit('_beforeBreakpoint', breakpointParams);\r\n\r\n    if (needsReLoop && initialized) {\r\n      swiper.loopDestroy();\r\n      swiper.loopCreate();\r\n      swiper.updateSlides();\r\n      swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\r\n    }\r\n\r\n    swiper.emit('breakpoint', breakpointParams);\r\n  }\r\n\r\n  function getBreakpoint(breakpoints, base, containerEl) {\r\n    if (base === void 0) {\r\n      base = 'window';\r\n    }\r\n\r\n    if (!breakpoints || base === 'container' && !containerEl) return undefined;\r\n    let breakpoint = false;\r\n    const window = getWindow();\r\n    const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\r\n    const points = Object.keys(breakpoints).map(point => {\r\n      if (typeof point === 'string' && point.indexOf('@') === 0) {\r\n        const minRatio = parseFloat(point.substr(1));\r\n        const value = currentHeight * minRatio;\r\n        return {\r\n          value,\r\n          point\r\n        };\r\n      }\r\n\r\n      return {\r\n        value: point,\r\n        point\r\n      };\r\n    });\r\n    points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\r\n\r\n    for (let i = 0; i < points.length; i += 1) {\r\n      const {\r\n        point,\r\n        value\r\n      } = points[i];\r\n\r\n      if (base === 'window') {\r\n        if (window.matchMedia(`(min-width: ${value}px)`).matches) {\r\n          breakpoint = point;\r\n        }\r\n      } else if (value <= containerEl.clientWidth) {\r\n        breakpoint = point;\r\n      }\r\n    }\r\n\r\n    return breakpoint || 'max';\r\n  }\r\n\r\n  var breakpoints = {\r\n    setBreakpoint,\r\n    getBreakpoint\r\n  };\r\n\r\n  function prepareClasses(entries, prefix) {\r\n    const resultClasses = [];\r\n    entries.forEach(item => {\r\n      if (typeof item === 'object') {\r\n        Object.keys(item).forEach(classNames => {\r\n          if (item[classNames]) {\r\n            resultClasses.push(prefix + classNames);\r\n          }\r\n        });\r\n      } else if (typeof item === 'string') {\r\n        resultClasses.push(prefix + item);\r\n      }\r\n    });\r\n    return resultClasses;\r\n  }\r\n\r\n  function addClasses() {\r\n    const swiper = this;\r\n    const {\r\n      classNames,\r\n      params,\r\n      rtl,\r\n      $el,\r\n      device,\r\n      support\r\n    } = swiper; // prettier-ignore\r\n\r\n    const suffixes = prepareClasses(['initialized', params.direction, {\r\n      'pointer-events': !support.touch\r\n    }, {\r\n      'free-mode': swiper.params.freeMode && params.freeMode.enabled\r\n    }, {\r\n      'autoheight': params.autoHeight\r\n    }, {\r\n      'rtl': rtl\r\n    }, {\r\n      'grid': params.grid && params.grid.rows > 1\r\n    }, {\r\n      'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\r\n    }, {\r\n      'android': device.android\r\n    }, {\r\n      'ios': device.ios\r\n    }, {\r\n      'css-mode': params.cssMode\r\n    }, {\r\n      'centered': params.cssMode && params.centeredSlides\r\n    }], params.containerModifierClass);\r\n    classNames.push(...suffixes);\r\n    $el.addClass([...classNames].join(' '));\r\n    swiper.emitContainerClasses();\r\n  }\r\n\r\n  function removeClasses() {\r\n    const swiper = this;\r\n    const {\r\n      $el,\r\n      classNames\r\n    } = swiper;\r\n    $el.removeClass(classNames.join(' '));\r\n    swiper.emitContainerClasses();\r\n  }\r\n\r\n  var classes = {\r\n    addClasses,\r\n    removeClasses\r\n  };\r\n\r\n  function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\r\n    const window = getWindow();\r\n    let image;\r\n\r\n    function onReady() {\r\n      if (callback) callback();\r\n    }\r\n\r\n    const isPicture = $(imageEl).parent('picture')[0];\r\n\r\n    if (!isPicture && (!imageEl.complete || !checkForComplete)) {\r\n      if (src) {\r\n        image = new window.Image();\r\n        image.onload = onReady;\r\n        image.onerror = onReady;\r\n\r\n        if (sizes) {\r\n          image.sizes = sizes;\r\n        }\r\n\r\n        if (srcset) {\r\n          image.srcset = srcset;\r\n        }\r\n\r\n        if (src) {\r\n          image.src = src;\r\n        }\r\n      } else {\r\n        onReady();\r\n      }\r\n    } else {\r\n      // image already loaded...\r\n      onReady();\r\n    }\r\n  }\r\n\r\n  function preloadImages() {\r\n    const swiper = this;\r\n    swiper.imagesToLoad = swiper.$el.find('img');\r\n\r\n    function onReady() {\r\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\r\n      if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\r\n\r\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\r\n        if (swiper.params.updateOnImagesReady) swiper.update();\r\n        swiper.emit('imagesReady');\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\r\n      const imageEl = swiper.imagesToLoad[i];\r\n      swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\r\n    }\r\n  }\r\n\r\n  var images = {\r\n    loadImage,\r\n    preloadImages\r\n  };\r\n\r\n  function checkOverflow() {\r\n    const swiper = this;\r\n    const {\r\n      isLocked: wasLocked,\r\n      params\r\n    } = swiper;\r\n    const {\r\n      slidesOffsetBefore\r\n    } = params;\r\n\r\n    if (slidesOffsetBefore) {\r\n      const lastSlideIndex = swiper.slides.length - 1;\r\n      const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\r\n      swiper.isLocked = swiper.size > lastSlideRightEdge;\r\n    } else {\r\n      swiper.isLocked = swiper.snapGrid.length === 1;\r\n    }\r\n\r\n    if (params.allowSlideNext === true) {\r\n      swiper.allowSlideNext = !swiper.isLocked;\r\n    }\r\n\r\n    if (params.allowSlidePrev === true) {\r\n      swiper.allowSlidePrev = !swiper.isLocked;\r\n    }\r\n\r\n    if (wasLocked && wasLocked !== swiper.isLocked) {\r\n      swiper.isEnd = false;\r\n    }\r\n\r\n    if (wasLocked !== swiper.isLocked) {\r\n      swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\r\n    }\r\n  }\r\n\r\n  var checkOverflow$1 = {\r\n    checkOverflow\r\n  };\r\n\r\n  var defaults = {\r\n    init: true,\r\n    direction: 'horizontal',\r\n    touchEventsTarget: 'wrapper',\r\n    initialSlide: 0,\r\n    speed: 300,\r\n    cssMode: false,\r\n    updateOnWindowResize: true,\r\n    resizeObserver: true,\r\n    nested: false,\r\n    createElements: false,\r\n    enabled: true,\r\n    focusableElements: 'input, select, option, textarea, button, video, label',\r\n    // Overrides\r\n    width: null,\r\n    height: null,\r\n    //\r\n    preventInteractionOnTransition: false,\r\n    // ssr\r\n    userAgent: null,\r\n    url: null,\r\n    // To support iOS's swipe-to-go-back gesture (when being used in-app).\r\n    edgeSwipeDetection: false,\r\n    edgeSwipeThreshold: 20,\r\n    // Autoheight\r\n    autoHeight: false,\r\n    // Set wrapper width\r\n    setWrapperSize: false,\r\n    // Virtual Translate\r\n    virtualTranslate: false,\r\n    // Effects\r\n    effect: 'slide',\r\n    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\r\n    // Breakpoints\r\n    breakpoints: undefined,\r\n    breakpointsBase: 'window',\r\n    // Slides grid\r\n    spaceBetween: 0,\r\n    slidesPerView: 1,\r\n    slidesPerGroup: 1,\r\n    slidesPerGroupSkip: 0,\r\n    slidesPerGroupAuto: false,\r\n    centeredSlides: false,\r\n    centeredSlidesBounds: false,\r\n    slidesOffsetBefore: 0,\r\n    // in px\r\n    slidesOffsetAfter: 0,\r\n    // in px\r\n    normalizeSlideIndex: true,\r\n    centerInsufficientSlides: false,\r\n    // Disable swiper and hide navigation when container not overflow\r\n    watchOverflow: true,\r\n    // Round length\r\n    roundLengths: false,\r\n    // Touches\r\n    touchRatio: 1,\r\n    touchAngle: 45,\r\n    simulateTouch: true,\r\n    shortSwipes: true,\r\n    longSwipes: true,\r\n    longSwipesRatio: 0.5,\r\n    longSwipesMs: 300,\r\n    followFinger: true,\r\n    allowTouchMove: true,\r\n    threshold: 0,\r\n    touchMoveStopPropagation: false,\r\n    touchStartPreventDefault: true,\r\n    touchStartForcePreventDefault: false,\r\n    touchReleaseOnEdges: false,\r\n    // Unique Navigation Elements\r\n    uniqueNavElements: true,\r\n    // Resistance\r\n    resistance: true,\r\n    resistanceRatio: 0.85,\r\n    // Progress\r\n    watchSlidesProgress: false,\r\n    // Cursor\r\n    grabCursor: false,\r\n    // Clicks\r\n    preventClicks: true,\r\n    preventClicksPropagation: true,\r\n    slideToClickedSlide: false,\r\n    // Images\r\n    preloadImages: true,\r\n    updateOnImagesReady: true,\r\n    // loop\r\n    loop: false,\r\n    loopAdditionalSlides: 0,\r\n    loopedSlides: null,\r\n    loopFillGroupWithBlank: false,\r\n    loopPreventsSlide: true,\r\n    // rewind\r\n    rewind: false,\r\n    // Swiping/no swiping\r\n    allowSlidePrev: true,\r\n    allowSlideNext: true,\r\n    swipeHandler: null,\r\n    // '.swipe-handler',\r\n    noSwiping: true,\r\n    noSwipingClass: 'swiper-no-swiping',\r\n    noSwipingSelector: null,\r\n    // Passive Listeners\r\n    passiveListeners: true,\r\n    maxBackfaceHiddenSlides: 10,\r\n    // NS\r\n    containerModifierClass: 'swiper-',\r\n    // NEW\r\n    slideClass: 'swiper-slide',\r\n    slideBlankClass: 'swiper-slide-invisible-blank',\r\n    slideActiveClass: 'swiper-slide-active',\r\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\r\n    slideVisibleClass: 'swiper-slide-visible',\r\n    slideDuplicateClass: 'swiper-slide-duplicate',\r\n    slideNextClass: 'swiper-slide-next',\r\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\r\n    slidePrevClass: 'swiper-slide-prev',\r\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\r\n    wrapperClass: 'swiper-wrapper',\r\n    // Callbacks\r\n    runCallbacksOnInit: true,\r\n    // Internals\r\n    _emitClasses: false\r\n  };\r\n\r\n  function moduleExtendParams(params, allModulesParams) {\r\n    return function extendParams(obj) {\r\n      if (obj === void 0) {\r\n        obj = {};\r\n      }\r\n\r\n      const moduleParamName = Object.keys(obj)[0];\r\n      const moduleParams = obj[moduleParamName];\r\n\r\n      if (typeof moduleParams !== 'object' || moduleParams === null) {\r\n        extend(allModulesParams, obj);\r\n        return;\r\n      }\r\n\r\n      if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\r\n        params[moduleParamName] = {\r\n          auto: true\r\n        };\r\n      }\r\n\r\n      if (!(moduleParamName in params && 'enabled' in moduleParams)) {\r\n        extend(allModulesParams, obj);\r\n        return;\r\n      }\r\n\r\n      if (params[moduleParamName] === true) {\r\n        params[moduleParamName] = {\r\n          enabled: true\r\n        };\r\n      }\r\n\r\n      if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\r\n        params[moduleParamName].enabled = true;\r\n      }\r\n\r\n      if (!params[moduleParamName]) params[moduleParamName] = {\r\n        enabled: false\r\n      };\r\n      extend(allModulesParams, obj);\r\n    };\r\n  }\r\n\r\n  /* eslint no-param-reassign: \"off\" */\r\n  const prototypes = {\r\n    eventsEmitter,\r\n    update,\r\n    translate,\r\n    transition,\r\n    slide,\r\n    loop,\r\n    grabCursor,\r\n    events: events$1,\r\n    breakpoints,\r\n    checkOverflow: checkOverflow$1,\r\n    classes,\r\n    images\r\n  };\r\n  const extendedDefaults = {};\r\n\r\n  class Swiper {\r\n    constructor() {\r\n      let el;\r\n      let params;\r\n\r\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n        args[_key] = arguments[_key];\r\n      }\r\n\r\n      if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\r\n        params = args[0];\r\n      } else {\r\n        [el, params] = args;\r\n      }\r\n\r\n      if (!params) params = {};\r\n      params = extend({}, params);\r\n      if (el && !params.el) params.el = el;\r\n\r\n      if (params.el && $(params.el).length > 1) {\r\n        const swipers = [];\r\n        $(params.el).each(containerEl => {\r\n          const newParams = extend({}, params, {\r\n            el: containerEl\r\n          });\r\n          swipers.push(new Swiper(newParams));\r\n        });\r\n        return swipers;\r\n      } // Swiper Instance\r\n\r\n\r\n      const swiper = this;\r\n      swiper.__swiper__ = true;\r\n      swiper.support = getSupport();\r\n      swiper.device = getDevice({\r\n        userAgent: params.userAgent\r\n      });\r\n      swiper.browser = getBrowser();\r\n      swiper.eventsListeners = {};\r\n      swiper.eventsAnyListeners = [];\r\n      swiper.modules = [...swiper.__modules__];\r\n\r\n      if (params.modules && Array.isArray(params.modules)) {\r\n        swiper.modules.push(...params.modules);\r\n      }\r\n\r\n      const allModulesParams = {};\r\n      swiper.modules.forEach(mod => {\r\n        mod({\r\n          swiper,\r\n          extendParams: moduleExtendParams(params, allModulesParams),\r\n          on: swiper.on.bind(swiper),\r\n          once: swiper.once.bind(swiper),\r\n          off: swiper.off.bind(swiper),\r\n          emit: swiper.emit.bind(swiper)\r\n        });\r\n      }); // Extend defaults with modules params\r\n\r\n      const swiperParams = extend({}, defaults, allModulesParams); // Extend defaults with passed params\r\n\r\n      swiper.params = extend({}, swiperParams, extendedDefaults, params);\r\n      swiper.originalParams = extend({}, swiper.params);\r\n      swiper.passedParams = extend({}, params); // add event listeners\r\n\r\n      if (swiper.params && swiper.params.on) {\r\n        Object.keys(swiper.params.on).forEach(eventName => {\r\n          swiper.on(eventName, swiper.params.on[eventName]);\r\n        });\r\n      }\r\n\r\n      if (swiper.params && swiper.params.onAny) {\r\n        swiper.onAny(swiper.params.onAny);\r\n      } // Save Dom lib\r\n\r\n\r\n      swiper.$ = $; // Extend Swiper\r\n\r\n      Object.assign(swiper, {\r\n        enabled: swiper.params.enabled,\r\n        el,\r\n        // Classes\r\n        classNames: [],\r\n        // Slides\r\n        slides: $(),\r\n        slidesGrid: [],\r\n        snapGrid: [],\r\n        slidesSizesGrid: [],\r\n\r\n        // isDirection\r\n        isHorizontal() {\r\n          return swiper.params.direction === 'horizontal';\r\n        },\r\n\r\n        isVertical() {\r\n          return swiper.params.direction === 'vertical';\r\n        },\r\n\r\n        // Indexes\r\n        activeIndex: 0,\r\n        realIndex: 0,\r\n        //\r\n        isBeginning: true,\r\n        isEnd: false,\r\n        // Props\r\n        translate: 0,\r\n        previousTranslate: 0,\r\n        progress: 0,\r\n        velocity: 0,\r\n        animating: false,\r\n        // Locks\r\n        allowSlideNext: swiper.params.allowSlideNext,\r\n        allowSlidePrev: swiper.params.allowSlidePrev,\r\n        // Touch Events\r\n        touchEvents: function touchEvents() {\r\n          const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\r\n          const desktop = ['pointerdown', 'pointermove', 'pointerup'];\r\n          swiper.touchEventsTouch = {\r\n            start: touch[0],\r\n            move: touch[1],\r\n            end: touch[2],\r\n            cancel: touch[3]\r\n          };\r\n          swiper.touchEventsDesktop = {\r\n            start: desktop[0],\r\n            move: desktop[1],\r\n            end: desktop[2]\r\n          };\r\n          return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\r\n        }(),\r\n        touchEventsData: {\r\n          isTouched: undefined,\r\n          isMoved: undefined,\r\n          allowTouchCallbacks: undefined,\r\n          touchStartTime: undefined,\r\n          isScrolling: undefined,\r\n          currentTranslate: undefined,\r\n          startTranslate: undefined,\r\n          allowThresholdMove: undefined,\r\n          // Form elements to match\r\n          focusableElements: swiper.params.focusableElements,\r\n          // Last click time\r\n          lastClickTime: now(),\r\n          clickTimeout: undefined,\r\n          // Velocities\r\n          velocities: [],\r\n          allowMomentumBounce: undefined,\r\n          isTouchEvent: undefined,\r\n          startMoving: undefined\r\n        },\r\n        // Clicks\r\n        allowClick: true,\r\n        // Touches\r\n        allowTouchMove: swiper.params.allowTouchMove,\r\n        touches: {\r\n          startX: 0,\r\n          startY: 0,\r\n          currentX: 0,\r\n          currentY: 0,\r\n          diff: 0\r\n        },\r\n        // Images\r\n        imagesToLoad: [],\r\n        imagesLoaded: 0\r\n      });\r\n      swiper.emit('_swiper'); // Init\r\n\r\n      if (swiper.params.init) {\r\n        swiper.init();\r\n      } // Return app instance\r\n\r\n\r\n      return swiper;\r\n    }\r\n\r\n    enable() {\r\n      const swiper = this;\r\n      if (swiper.enabled) return;\r\n      swiper.enabled = true;\r\n\r\n      if (swiper.params.grabCursor) {\r\n        swiper.setGrabCursor();\r\n      }\r\n\r\n      swiper.emit('enable');\r\n    }\r\n\r\n    disable() {\r\n      const swiper = this;\r\n      if (!swiper.enabled) return;\r\n      swiper.enabled = false;\r\n\r\n      if (swiper.params.grabCursor) {\r\n        swiper.unsetGrabCursor();\r\n      }\r\n\r\n      swiper.emit('disable');\r\n    }\r\n\r\n    setProgress(progress, speed) {\r\n      const swiper = this;\r\n      progress = Math.min(Math.max(progress, 0), 1);\r\n      const min = swiper.minTranslate();\r\n      const max = swiper.maxTranslate();\r\n      const current = (max - min) * progress + min;\r\n      swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n    }\r\n\r\n    emitContainerClasses() {\r\n      const swiper = this;\r\n      if (!swiper.params._emitClasses || !swiper.el) return;\r\n      const cls = swiper.el.className.split(' ').filter(className => {\r\n        return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\r\n      });\r\n      swiper.emit('_containerClasses', cls.join(' '));\r\n    }\r\n\r\n    getSlideClasses(slideEl) {\r\n      const swiper = this;\r\n      return slideEl.className.split(' ').filter(className => {\r\n        return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\r\n      }).join(' ');\r\n    }\r\n\r\n    emitSlidesClasses() {\r\n      const swiper = this;\r\n      if (!swiper.params._emitClasses || !swiper.el) return;\r\n      const updates = [];\r\n      swiper.slides.each(slideEl => {\r\n        const classNames = swiper.getSlideClasses(slideEl);\r\n        updates.push({\r\n          slideEl,\r\n          classNames\r\n        });\r\n        swiper.emit('_slideClass', slideEl, classNames);\r\n      });\r\n      swiper.emit('_slideClasses', updates);\r\n    }\r\n\r\n    slidesPerViewDynamic(view, exact) {\r\n      if (view === void 0) {\r\n        view = 'current';\r\n      }\r\n\r\n      if (exact === void 0) {\r\n        exact = false;\r\n      }\r\n\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        slides,\r\n        slidesGrid,\r\n        slidesSizesGrid,\r\n        size: swiperSize,\r\n        activeIndex\r\n      } = swiper;\r\n      let spv = 1;\r\n\r\n      if (params.centeredSlides) {\r\n        let slideSize = slides[activeIndex].swiperSlideSize;\r\n        let breakLoop;\r\n\r\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\r\n          if (slides[i] && !breakLoop) {\r\n            slideSize += slides[i].swiperSlideSize;\r\n            spv += 1;\r\n            if (slideSize > swiperSize) breakLoop = true;\r\n          }\r\n        }\r\n\r\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\r\n          if (slides[i] && !breakLoop) {\r\n            slideSize += slides[i].swiperSlideSize;\r\n            spv += 1;\r\n            if (slideSize > swiperSize) breakLoop = true;\r\n          }\r\n        }\r\n      } else {\r\n        // eslint-disable-next-line\r\n        if (view === 'current') {\r\n          for (let i = activeIndex + 1; i < slides.length; i += 1) {\r\n            const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\r\n\r\n            if (slideInView) {\r\n              spv += 1;\r\n            }\r\n          }\r\n        } else {\r\n          // previous\r\n          for (let i = activeIndex - 1; i >= 0; i -= 1) {\r\n            const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\r\n\r\n            if (slideInView) {\r\n              spv += 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return spv;\r\n    }\r\n\r\n    update() {\r\n      const swiper = this;\r\n      if (!swiper || swiper.destroyed) return;\r\n      const {\r\n        snapGrid,\r\n        params\r\n      } = swiper; // Breakpoints\r\n\r\n      if (params.breakpoints) {\r\n        swiper.setBreakpoint();\r\n      }\r\n\r\n      swiper.updateSize();\r\n      swiper.updateSlides();\r\n      swiper.updateProgress();\r\n      swiper.updateSlidesClasses();\r\n\r\n      function setTranslate() {\r\n        const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\r\n        const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\r\n        swiper.setTranslate(newTranslate);\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n      }\r\n\r\n      let translated;\r\n\r\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\r\n        setTranslate();\r\n\r\n        if (swiper.params.autoHeight) {\r\n          swiper.updateAutoHeight();\r\n        }\r\n      } else {\r\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\r\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n        } else {\r\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n        }\r\n\r\n        if (!translated) {\r\n          setTranslate();\r\n        }\r\n      }\r\n\r\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n        swiper.checkOverflow();\r\n      }\r\n\r\n      swiper.emit('update');\r\n    }\r\n\r\n    changeDirection(newDirection, needUpdate) {\r\n      if (needUpdate === void 0) {\r\n        needUpdate = true;\r\n      }\r\n\r\n      const swiper = this;\r\n      const currentDirection = swiper.params.direction;\r\n\r\n      if (!newDirection) {\r\n        // eslint-disable-next-line\r\n        newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\r\n      }\r\n\r\n      if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\r\n        return swiper;\r\n      }\r\n\r\n      swiper.$el.removeClass(`${swiper.params.containerModifierClass}${currentDirection}`).addClass(`${swiper.params.containerModifierClass}${newDirection}`);\r\n      swiper.emitContainerClasses();\r\n      swiper.params.direction = newDirection;\r\n      swiper.slides.each(slideEl => {\r\n        if (newDirection === 'vertical') {\r\n          slideEl.style.width = '';\r\n        } else {\r\n          slideEl.style.height = '';\r\n        }\r\n      });\r\n      swiper.emit('changeDirection');\r\n      if (needUpdate) swiper.update();\r\n      return swiper;\r\n    }\r\n\r\n    mount(el) {\r\n      const swiper = this;\r\n      if (swiper.mounted) return true; // Find el\r\n\r\n      const $el = $(el || swiper.params.el);\r\n      el = $el[0];\r\n\r\n      if (!el) {\r\n        return false;\r\n      }\r\n\r\n      el.swiper = swiper;\r\n\r\n      const getWrapperSelector = () => {\r\n        return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\r\n      };\r\n\r\n      const getWrapper = () => {\r\n        if (el && el.shadowRoot && el.shadowRoot.querySelector) {\r\n          const res = $(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items\r\n\r\n          res.children = options => $el.children(options);\r\n\r\n          return res;\r\n        }\r\n\r\n        return $el.children(getWrapperSelector());\r\n      }; // Find Wrapper\r\n\r\n\r\n      let $wrapperEl = getWrapper();\r\n\r\n      if ($wrapperEl.length === 0 && swiper.params.createElements) {\r\n        const document = getDocument();\r\n        const wrapper = document.createElement('div');\r\n        $wrapperEl = $(wrapper);\r\n        wrapper.className = swiper.params.wrapperClass;\r\n        $el.append(wrapper);\r\n        $el.children(`.${swiper.params.slideClass}`).each(slideEl => {\r\n          $wrapperEl.append(slideEl);\r\n        });\r\n      }\r\n\r\n      Object.assign(swiper, {\r\n        $el,\r\n        el,\r\n        $wrapperEl,\r\n        wrapperEl: $wrapperEl[0],\r\n        mounted: true,\r\n        // RTL\r\n        rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\r\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\r\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box'\r\n      });\r\n      return true;\r\n    }\r\n\r\n    init(el) {\r\n      const swiper = this;\r\n      if (swiper.initialized) return swiper;\r\n      const mounted = swiper.mount(el);\r\n      if (mounted === false) return swiper;\r\n      swiper.emit('beforeInit'); // Set breakpoint\r\n\r\n      if (swiper.params.breakpoints) {\r\n        swiper.setBreakpoint();\r\n      } // Add Classes\r\n\r\n\r\n      swiper.addClasses(); // Create loop\r\n\r\n      if (swiper.params.loop) {\r\n        swiper.loopCreate();\r\n      } // Update size\r\n\r\n\r\n      swiper.updateSize(); // Update slides\r\n\r\n      swiper.updateSlides();\r\n\r\n      if (swiper.params.watchOverflow) {\r\n        swiper.checkOverflow();\r\n      } // Set Grab Cursor\r\n\r\n\r\n      if (swiper.params.grabCursor && swiper.enabled) {\r\n        swiper.setGrabCursor();\r\n      }\r\n\r\n      if (swiper.params.preloadImages) {\r\n        swiper.preloadImages();\r\n      } // Slide To Initial Slide\r\n\r\n\r\n      if (swiper.params.loop) {\r\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);\r\n      } else {\r\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\r\n      } // Attach events\r\n\r\n\r\n      swiper.attachEvents(); // Init Flag\r\n\r\n      swiper.initialized = true; // Emit\r\n\r\n      swiper.emit('init');\r\n      swiper.emit('afterInit');\r\n      return swiper;\r\n    }\r\n\r\n    destroy(deleteInstance, cleanStyles) {\r\n      if (deleteInstance === void 0) {\r\n        deleteInstance = true;\r\n      }\r\n\r\n      if (cleanStyles === void 0) {\r\n        cleanStyles = true;\r\n      }\r\n\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        $el,\r\n        $wrapperEl,\r\n        slides\r\n      } = swiper;\r\n\r\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\r\n        return null;\r\n      }\r\n\r\n      swiper.emit('beforeDestroy'); // Init Flag\r\n\r\n      swiper.initialized = false; // Detach events\r\n\r\n      swiper.detachEvents(); // Destroy loop\r\n\r\n      if (params.loop) {\r\n        swiper.loopDestroy();\r\n      } // Cleanup styles\r\n\r\n\r\n      if (cleanStyles) {\r\n        swiper.removeClasses();\r\n        $el.removeAttr('style');\r\n        $wrapperEl.removeAttr('style');\r\n\r\n        if (slides && slides.length) {\r\n          slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\r\n        }\r\n      }\r\n\r\n      swiper.emit('destroy'); // Detach emitter events\r\n\r\n      Object.keys(swiper.eventsListeners).forEach(eventName => {\r\n        swiper.off(eventName);\r\n      });\r\n\r\n      if (deleteInstance !== false) {\r\n        swiper.$el[0].swiper = null;\r\n        deleteProps(swiper);\r\n      }\r\n\r\n      swiper.destroyed = true;\r\n      return null;\r\n    }\r\n\r\n    static extendDefaults(newDefaults) {\r\n      extend(extendedDefaults, newDefaults);\r\n    }\r\n\r\n    static get extendedDefaults() {\r\n      return extendedDefaults;\r\n    }\r\n\r\n    static get defaults() {\r\n      return defaults;\r\n    }\r\n\r\n    static installModule(mod) {\r\n      if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\r\n      const modules = Swiper.prototype.__modules__;\r\n\r\n      if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\r\n        modules.push(mod);\r\n      }\r\n    }\r\n\r\n    static use(module) {\r\n      if (Array.isArray(module)) {\r\n        module.forEach(m => Swiper.installModule(m));\r\n        return Swiper;\r\n      }\r\n\r\n      Swiper.installModule(module);\r\n      return Swiper;\r\n    }\r\n\r\n  }\r\n\r\n  Object.keys(prototypes).forEach(prototypeGroup => {\r\n    Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\r\n      Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\r\n    });\r\n  });\r\n  Swiper.use([Resize, Observer]);\r\n\r\n  function Virtual(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      virtual: {\r\n        enabled: false,\r\n        slides: [],\r\n        cache: true,\r\n        renderSlide: null,\r\n        renderExternal: null,\r\n        renderExternalUpdate: true,\r\n        addSlidesBefore: 0,\r\n        addSlidesAfter: 0\r\n      }\r\n    });\r\n    let cssModeTimeout;\r\n    swiper.virtual = {\r\n      cache: {},\r\n      from: undefined,\r\n      to: undefined,\r\n      slides: [],\r\n      offset: 0,\r\n      slidesGrid: []\r\n    };\r\n\r\n    function renderSlide(slide, index) {\r\n      const params = swiper.params.virtual;\r\n\r\n      if (params.cache && swiper.virtual.cache[index]) {\r\n        return swiper.virtual.cache[index];\r\n      }\r\n\r\n      const $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\r\n      if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\r\n      if (params.cache) swiper.virtual.cache[index] = $slideEl;\r\n      return $slideEl;\r\n    }\r\n\r\n    function update(force) {\r\n      const {\r\n        slidesPerView,\r\n        slidesPerGroup,\r\n        centeredSlides\r\n      } = swiper.params;\r\n      const {\r\n        addSlidesBefore,\r\n        addSlidesAfter\r\n      } = swiper.params.virtual;\r\n      const {\r\n        from: previousFrom,\r\n        to: previousTo,\r\n        slides,\r\n        slidesGrid: previousSlidesGrid,\r\n        offset: previousOffset\r\n      } = swiper.virtual;\r\n\r\n      if (!swiper.params.cssMode) {\r\n        swiper.updateActiveIndex();\r\n      }\r\n\r\n      const activeIndex = swiper.activeIndex || 0;\r\n      let offsetProp;\r\n      if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\r\n      let slidesAfter;\r\n      let slidesBefore;\r\n\r\n      if (centeredSlides) {\r\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\r\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\r\n      } else {\r\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\r\n        slidesBefore = slidesPerGroup + addSlidesBefore;\r\n      }\r\n\r\n      const from = Math.max((activeIndex || 0) - slidesBefore, 0);\r\n      const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\r\n      const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\r\n      Object.assign(swiper.virtual, {\r\n        from,\r\n        to,\r\n        offset,\r\n        slidesGrid: swiper.slidesGrid\r\n      });\r\n\r\n      function onRendered() {\r\n        swiper.updateSlides();\r\n        swiper.updateProgress();\r\n        swiper.updateSlidesClasses();\r\n\r\n        if (swiper.lazy && swiper.params.lazy.enabled) {\r\n          swiper.lazy.load();\r\n        }\r\n      }\r\n\r\n      if (previousFrom === from && previousTo === to && !force) {\r\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\r\n          swiper.slides.css(offsetProp, `${offset}px`);\r\n        }\r\n\r\n        swiper.updateProgress();\r\n        return;\r\n      }\r\n\r\n      if (swiper.params.virtual.renderExternal) {\r\n        swiper.params.virtual.renderExternal.call(swiper, {\r\n          offset,\r\n          from,\r\n          to,\r\n          slides: function getSlides() {\r\n            const slidesToRender = [];\r\n\r\n            for (let i = from; i <= to; i += 1) {\r\n              slidesToRender.push(slides[i]);\r\n            }\r\n\r\n            return slidesToRender;\r\n          }()\r\n        });\r\n\r\n        if (swiper.params.virtual.renderExternalUpdate) {\r\n          onRendered();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      const prependIndexes = [];\r\n      const appendIndexes = [];\r\n\r\n      if (force) {\r\n        swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\r\n      } else {\r\n        for (let i = previousFrom; i <= previousTo; i += 1) {\r\n          if (i < from || i > to) {\r\n            swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        if (i >= from && i <= to) {\r\n          if (typeof previousTo === 'undefined' || force) {\r\n            appendIndexes.push(i);\r\n          } else {\r\n            if (i > previousTo) appendIndexes.push(i);\r\n            if (i < previousFrom) prependIndexes.push(i);\r\n          }\r\n        }\r\n      }\r\n\r\n      appendIndexes.forEach(index => {\r\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\r\n      });\r\n      prependIndexes.sort((a, b) => b - a).forEach(index => {\r\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\r\n      });\r\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\r\n      onRendered();\r\n    }\r\n\r\n    function appendSlide(slides) {\r\n      if (typeof slides === 'object' && 'length' in slides) {\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          if (slides[i]) swiper.virtual.slides.push(slides[i]);\r\n        }\r\n      } else {\r\n        swiper.virtual.slides.push(slides);\r\n      }\r\n\r\n      update(true);\r\n    }\r\n\r\n    function prependSlide(slides) {\r\n      const activeIndex = swiper.activeIndex;\r\n      let newActiveIndex = activeIndex + 1;\r\n      let numberOfNewSlides = 1;\r\n\r\n      if (Array.isArray(slides)) {\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\r\n        }\r\n\r\n        newActiveIndex = activeIndex + slides.length;\r\n        numberOfNewSlides = slides.length;\r\n      } else {\r\n        swiper.virtual.slides.unshift(slides);\r\n      }\r\n\r\n      if (swiper.params.virtual.cache) {\r\n        const cache = swiper.virtual.cache;\r\n        const newCache = {};\r\n        Object.keys(cache).forEach(cachedIndex => {\r\n          const $cachedEl = cache[cachedIndex];\r\n          const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\r\n\r\n          if (cachedElIndex) {\r\n            $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\r\n          }\r\n\r\n          newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\r\n        });\r\n        swiper.virtual.cache = newCache;\r\n      }\r\n\r\n      update(true);\r\n      swiper.slideTo(newActiveIndex, 0);\r\n    }\r\n\r\n    function removeSlide(slidesIndexes) {\r\n      if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\r\n      let activeIndex = swiper.activeIndex;\r\n\r\n      if (Array.isArray(slidesIndexes)) {\r\n        for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\r\n          swiper.virtual.slides.splice(slidesIndexes[i], 1);\r\n\r\n          if (swiper.params.virtual.cache) {\r\n            delete swiper.virtual.cache[slidesIndexes[i]];\r\n          }\r\n\r\n          if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\r\n          activeIndex = Math.max(activeIndex, 0);\r\n        }\r\n      } else {\r\n        swiper.virtual.slides.splice(slidesIndexes, 1);\r\n\r\n        if (swiper.params.virtual.cache) {\r\n          delete swiper.virtual.cache[slidesIndexes];\r\n        }\r\n\r\n        if (slidesIndexes < activeIndex) activeIndex -= 1;\r\n        activeIndex = Math.max(activeIndex, 0);\r\n      }\r\n\r\n      update(true);\r\n      swiper.slideTo(activeIndex, 0);\r\n    }\r\n\r\n    function removeAllSlides() {\r\n      swiper.virtual.slides = [];\r\n\r\n      if (swiper.params.virtual.cache) {\r\n        swiper.virtual.cache = {};\r\n      }\r\n\r\n      update(true);\r\n      swiper.slideTo(0, 0);\r\n    }\r\n\r\n    on('beforeInit', () => {\r\n      if (!swiper.params.virtual.enabled) return;\r\n      swiper.virtual.slides = swiper.params.virtual.slides;\r\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\r\n      swiper.params.watchSlidesProgress = true;\r\n      swiper.originalParams.watchSlidesProgress = true;\r\n\r\n      if (!swiper.params.initialSlide) {\r\n        update();\r\n      }\r\n    });\r\n    on('setTranslate', () => {\r\n      if (!swiper.params.virtual.enabled) return;\r\n\r\n      if (swiper.params.cssMode && !swiper._immediateVirtual) {\r\n        clearTimeout(cssModeTimeout);\r\n        cssModeTimeout = setTimeout(() => {\r\n          update();\r\n        }, 100);\r\n      } else {\r\n        update();\r\n      }\r\n    });\r\n    on('init update resize', () => {\r\n      if (!swiper.params.virtual.enabled) return;\r\n\r\n      if (swiper.params.cssMode) {\r\n        setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\r\n      }\r\n    });\r\n    Object.assign(swiper.virtual, {\r\n      appendSlide,\r\n      prependSlide,\r\n      removeSlide,\r\n      removeAllSlides,\r\n      update\r\n    });\r\n  }\r\n\r\n  /* eslint-disable consistent-return */\r\n  function Keyboard(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    const document = getDocument();\r\n    const window = getWindow();\r\n    swiper.keyboard = {\r\n      enabled: false\r\n    };\r\n    extendParams({\r\n      keyboard: {\r\n        enabled: false,\r\n        onlyInViewport: true,\r\n        pageUpDown: true\r\n      }\r\n    });\r\n\r\n    function handle(event) {\r\n      if (!swiper.enabled) return;\r\n      const {\r\n        rtlTranslate: rtl\r\n      } = swiper;\r\n      let e = event;\r\n      if (e.originalEvent) e = e.originalEvent; // jquery fix\r\n\r\n      const kc = e.keyCode || e.charCode;\r\n      const pageUpDown = swiper.params.keyboard.pageUpDown;\r\n      const isPageUp = pageUpDown && kc === 33;\r\n      const isPageDown = pageUpDown && kc === 34;\r\n      const isArrowLeft = kc === 37;\r\n      const isArrowRight = kc === 39;\r\n      const isArrowUp = kc === 38;\r\n      const isArrowDown = kc === 40; // Directions locks\r\n\r\n      if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\r\n        return false;\r\n      }\r\n\r\n      if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\r\n        return false;\r\n      }\r\n\r\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\r\n        return undefined;\r\n      }\r\n\r\n      if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\r\n        return undefined;\r\n      }\r\n\r\n      if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\r\n        let inView = false; // Check that swiper should be inside of visible area of window\r\n\r\n        if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\r\n          return undefined;\r\n        }\r\n\r\n        const $el = swiper.$el;\r\n        const swiperWidth = $el[0].clientWidth;\r\n        const swiperHeight = $el[0].clientHeight;\r\n        const windowWidth = window.innerWidth;\r\n        const windowHeight = window.innerHeight;\r\n        const swiperOffset = swiper.$el.offset();\r\n        if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\r\n        const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\r\n\r\n        for (let i = 0; i < swiperCoord.length; i += 1) {\r\n          const point = swiperCoord[i];\r\n\r\n          if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\r\n            if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\r\n\r\n            inView = true;\r\n          }\r\n        }\r\n\r\n        if (!inView) return undefined;\r\n      }\r\n\r\n      if (swiper.isHorizontal()) {\r\n        if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\r\n          if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n        }\r\n\r\n        if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\r\n        if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\r\n      } else {\r\n        if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\r\n          if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n        }\r\n\r\n        if (isPageDown || isArrowDown) swiper.slideNext();\r\n        if (isPageUp || isArrowUp) swiper.slidePrev();\r\n      }\r\n\r\n      emit('keyPress', kc);\r\n      return undefined;\r\n    }\r\n\r\n    function enable() {\r\n      if (swiper.keyboard.enabled) return;\r\n      $(document).on('keydown', handle);\r\n      swiper.keyboard.enabled = true;\r\n    }\r\n\r\n    function disable() {\r\n      if (!swiper.keyboard.enabled) return;\r\n      $(document).off('keydown', handle);\r\n      swiper.keyboard.enabled = false;\r\n    }\r\n\r\n    on('init', () => {\r\n      if (swiper.params.keyboard.enabled) {\r\n        enable();\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      if (swiper.keyboard.enabled) {\r\n        disable();\r\n      }\r\n    });\r\n    Object.assign(swiper.keyboard, {\r\n      enable,\r\n      disable\r\n    });\r\n  }\r\n\r\n  /* eslint-disable consistent-return */\r\n  function Mousewheel(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    const window = getWindow();\r\n    extendParams({\r\n      mousewheel: {\r\n        enabled: false,\r\n        releaseOnEdges: false,\r\n        invert: false,\r\n        forceToAxis: false,\r\n        sensitivity: 1,\r\n        eventsTarget: 'container',\r\n        thresholdDelta: null,\r\n        thresholdTime: null\r\n      }\r\n    });\r\n    swiper.mousewheel = {\r\n      enabled: false\r\n    };\r\n    let timeout;\r\n    let lastScrollTime = now();\r\n    let lastEventBeforeSnap;\r\n    const recentWheelEvents = [];\r\n\r\n    function normalize(e) {\r\n      // Reasonable defaults\r\n      const PIXEL_STEP = 10;\r\n      const LINE_HEIGHT = 40;\r\n      const PAGE_HEIGHT = 800;\r\n      let sX = 0;\r\n      let sY = 0; // spinX, spinY\r\n\r\n      let pX = 0;\r\n      let pY = 0; // pixelX, pixelY\r\n      // Legacy\r\n\r\n      if ('detail' in e) {\r\n        sY = e.detail;\r\n      }\r\n\r\n      if ('wheelDelta' in e) {\r\n        sY = -e.wheelDelta / 120;\r\n      }\r\n\r\n      if ('wheelDeltaY' in e) {\r\n        sY = -e.wheelDeltaY / 120;\r\n      }\r\n\r\n      if ('wheelDeltaX' in e) {\r\n        sX = -e.wheelDeltaX / 120;\r\n      } // side scrolling on FF with DOMMouseScroll\r\n\r\n\r\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\r\n        sX = sY;\r\n        sY = 0;\r\n      }\r\n\r\n      pX = sX * PIXEL_STEP;\r\n      pY = sY * PIXEL_STEP;\r\n\r\n      if ('deltaY' in e) {\r\n        pY = e.deltaY;\r\n      }\r\n\r\n      if ('deltaX' in e) {\r\n        pX = e.deltaX;\r\n      }\r\n\r\n      if (e.shiftKey && !pX) {\r\n        // if user scrolls with shift he wants horizontal scroll\r\n        pX = pY;\r\n        pY = 0;\r\n      }\r\n\r\n      if ((pX || pY) && e.deltaMode) {\r\n        if (e.deltaMode === 1) {\r\n          // delta in LINE units\r\n          pX *= LINE_HEIGHT;\r\n          pY *= LINE_HEIGHT;\r\n        } else {\r\n          // delta in PAGE units\r\n          pX *= PAGE_HEIGHT;\r\n          pY *= PAGE_HEIGHT;\r\n        }\r\n      } // Fall-back if spin cannot be determined\r\n\r\n\r\n      if (pX && !sX) {\r\n        sX = pX < 1 ? -1 : 1;\r\n      }\r\n\r\n      if (pY && !sY) {\r\n        sY = pY < 1 ? -1 : 1;\r\n      }\r\n\r\n      return {\r\n        spinX: sX,\r\n        spinY: sY,\r\n        pixelX: pX,\r\n        pixelY: pY\r\n      };\r\n    }\r\n\r\n    function handleMouseEnter() {\r\n      if (!swiper.enabled) return;\r\n      swiper.mouseEntered = true;\r\n    }\r\n\r\n    function handleMouseLeave() {\r\n      if (!swiper.enabled) return;\r\n      swiper.mouseEntered = false;\r\n    }\r\n\r\n    function animateSlider(newEvent) {\r\n      if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\r\n        // Prevent if delta of wheel scroll delta is below configured threshold\r\n        return false;\r\n      }\r\n\r\n      if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\r\n        // Prevent if time between scrolls is below configured threshold\r\n        return false;\r\n      } // If the movement is NOT big enough and\r\n      // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\r\n      //   Don't go any further (avoid insignificant scroll movement).\r\n\r\n\r\n      if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\r\n        // Return false as a default\r\n        return true;\r\n      } // If user is scrolling towards the end:\r\n      //   If the slider hasn't hit the latest slide or\r\n      //   if the slider is a loop and\r\n      //   if the slider isn't moving right now:\r\n      //     Go to next slide and\r\n      //     emit a scroll event.\r\n      // Else (the user is scrolling towards the beginning) and\r\n      // if the slider hasn't hit the first slide or\r\n      // if the slider is a loop and\r\n      // if the slider isn't moving right now:\r\n      //   Go to prev slide and\r\n      //   emit a scroll event.\r\n\r\n\r\n      if (newEvent.direction < 0) {\r\n        if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\r\n          swiper.slideNext();\r\n          emit('scroll', newEvent.raw);\r\n        }\r\n      } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\r\n        swiper.slidePrev();\r\n        emit('scroll', newEvent.raw);\r\n      } // If you got here is because an animation has been triggered so store the current time\r\n\r\n\r\n      lastScrollTime = new window.Date().getTime(); // Return false as a default\r\n\r\n      return false;\r\n    }\r\n\r\n    function releaseScroll(newEvent) {\r\n      const params = swiper.params.mousewheel;\r\n\r\n      if (newEvent.direction < 0) {\r\n        if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\r\n          // Return true to animate scroll on edges\r\n          return true;\r\n        }\r\n      } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\r\n        // Return true to animate scroll on edges\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    function handle(event) {\r\n      let e = event;\r\n      let disableParentSwiper = true;\r\n      if (!swiper.enabled) return;\r\n      const params = swiper.params.mousewheel;\r\n\r\n      if (swiper.params.cssMode) {\r\n        e.preventDefault();\r\n      }\r\n\r\n      let target = swiper.$el;\r\n\r\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\r\n        target = $(swiper.params.mousewheel.eventsTarget);\r\n      }\r\n\r\n      if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\r\n      if (e.originalEvent) e = e.originalEvent; // jquery fix\r\n\r\n      let delta = 0;\r\n      const rtlFactor = swiper.rtlTranslate ? -1 : 1;\r\n      const data = normalize(e);\r\n\r\n      if (params.forceToAxis) {\r\n        if (swiper.isHorizontal()) {\r\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\r\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\r\n      } else {\r\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\r\n      }\r\n\r\n      if (delta === 0) return true;\r\n      if (params.invert) delta = -delta; // Get the scroll positions\r\n\r\n      let positions = swiper.getTranslate() + delta * params.sensitivity;\r\n      if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\r\n      if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:\r\n      //     the disableParentSwiper will be true.\r\n      // When loop is false:\r\n      //     if the scroll positions is not on edge,\r\n      //     then the disableParentSwiper will be true.\r\n      //     if the scroll on edge positions,\r\n      //     then the disableParentSwiper will be false.\r\n\r\n      disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\r\n      if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\r\n\r\n      if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\r\n        // Register the new event in a variable which stores the relevant data\r\n        const newEvent = {\r\n          time: now(),\r\n          delta: Math.abs(delta),\r\n          direction: Math.sign(delta),\r\n          raw: event\r\n        }; // Keep the most recent events\r\n\r\n        if (recentWheelEvents.length >= 2) {\r\n          recentWheelEvents.shift(); // only store the last N events\r\n        }\r\n\r\n        const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\r\n        recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\r\n        //   If direction has changed or\r\n        //   if the scroll is quicker than the previous one:\r\n        //     Animate the slider.\r\n        // Else (this is the first time the wheel is moved):\r\n        //     Animate the slider.\r\n\r\n        if (prevEvent) {\r\n          if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\r\n            animateSlider(newEvent);\r\n          }\r\n        } else {\r\n          animateSlider(newEvent);\r\n        } // If it's time to release the scroll:\r\n        //   Return now so you don't hit the preventDefault.\r\n\r\n\r\n        if (releaseScroll(newEvent)) {\r\n          return true;\r\n        }\r\n      } else {\r\n        // Freemode or scrollContainer:\r\n        // If we recently snapped after a momentum scroll, then ignore wheel events\r\n        // to give time for the deceleration to finish. Stop ignoring after 500 msecs\r\n        // or if it's a new scroll (larger delta or inverse sign as last event before\r\n        // an end-of-momentum snap).\r\n        const newEvent = {\r\n          time: now(),\r\n          delta: Math.abs(delta),\r\n          direction: Math.sign(delta)\r\n        };\r\n        const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\r\n\r\n        if (!ignoreWheelEvents) {\r\n          lastEventBeforeSnap = undefined;\r\n\r\n          if (swiper.params.loop) {\r\n            swiper.loopFix();\r\n          }\r\n\r\n          let position = swiper.getTranslate() + delta * params.sensitivity;\r\n          const wasBeginning = swiper.isBeginning;\r\n          const wasEnd = swiper.isEnd;\r\n          if (position >= swiper.minTranslate()) position = swiper.minTranslate();\r\n          if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\r\n          swiper.setTransition(0);\r\n          swiper.setTranslate(position);\r\n          swiper.updateProgress();\r\n          swiper.updateActiveIndex();\r\n          swiper.updateSlidesClasses();\r\n\r\n          if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\r\n            swiper.updateSlidesClasses();\r\n          }\r\n\r\n          if (swiper.params.freeMode.sticky) {\r\n            // When wheel scrolling starts with sticky (aka snap) enabled, then detect\r\n            // the end of a momentum scroll by storing recent (N=15?) wheel events.\r\n            // 1. do all N events have decreasing or same (absolute value) delta?\r\n            // 2. did all N events arrive in the last M (M=500?) msecs?\r\n            // 3. does the earliest event have an (absolute value) delta that's\r\n            //    at least P (P=1?) larger than the most recent event's delta?\r\n            // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\r\n            // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\r\n            // Snap immediately and ignore remaining wheel events in this scroll.\r\n            // See comment above for \"remaining wheel events in this scroll\" determination.\r\n            // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\r\n            clearTimeout(timeout);\r\n            timeout = undefined;\r\n\r\n            if (recentWheelEvents.length >= 15) {\r\n              recentWheelEvents.shift(); // only store the last N events\r\n            }\r\n\r\n            const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\r\n            const firstEvent = recentWheelEvents[0];\r\n            recentWheelEvents.push(newEvent);\r\n\r\n            if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\r\n              // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\r\n              recentWheelEvents.splice(0);\r\n            } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\r\n              // We're at the end of the deceleration of a momentum scroll, so there's no need\r\n              // to wait for more events. Snap ASAP on the next tick.\r\n              // Also, because there's some remaining momentum we'll bias the snap in the\r\n              // direction of the ongoing scroll because it's better UX for the scroll to snap\r\n              // in the same direction as the scroll instead of reversing to snap.  Therefore,\r\n              // if it's already scrolled more than 20% in the current direction, keep going.\r\n              const snapToThreshold = delta > 0 ? 0.8 : 0.2;\r\n              lastEventBeforeSnap = newEvent;\r\n              recentWheelEvents.splice(0);\r\n              timeout = nextTick(() => {\r\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\r\n              }, 0); // no delay; move on next tick\r\n            }\r\n\r\n            if (!timeout) {\r\n              // if we get here, then we haven't detected the end of a momentum scroll, so\r\n              // we'll consider a scroll \"complete\" when there haven't been any wheel events\r\n              // for 500ms.\r\n              timeout = nextTick(() => {\r\n                const snapToThreshold = 0.5;\r\n                lastEventBeforeSnap = newEvent;\r\n                recentWheelEvents.splice(0);\r\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\r\n              }, 500);\r\n            }\r\n          } // Emit event\r\n\r\n\r\n          if (!ignoreWheelEvents) emit('scroll', e); // Stop autoplay\r\n\r\n          if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions\r\n\r\n          if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\r\n        }\r\n      }\r\n\r\n      if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n      return false;\r\n    }\r\n\r\n    function events(method) {\r\n      let target = swiper.$el;\r\n\r\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\r\n        target = $(swiper.params.mousewheel.eventsTarget);\r\n      }\r\n\r\n      target[method]('mouseenter', handleMouseEnter);\r\n      target[method]('mouseleave', handleMouseLeave);\r\n      target[method]('wheel', handle);\r\n    }\r\n\r\n    function enable() {\r\n      if (swiper.params.cssMode) {\r\n        swiper.wrapperEl.removeEventListener('wheel', handle);\r\n        return true;\r\n      }\r\n\r\n      if (swiper.mousewheel.enabled) return false;\r\n      events('on');\r\n      swiper.mousewheel.enabled = true;\r\n      return true;\r\n    }\r\n\r\n    function disable() {\r\n      if (swiper.params.cssMode) {\r\n        swiper.wrapperEl.addEventListener(event, handle);\r\n        return true;\r\n      }\r\n\r\n      if (!swiper.mousewheel.enabled) return false;\r\n      events('off');\r\n      swiper.mousewheel.enabled = false;\r\n      return true;\r\n    }\r\n\r\n    on('init', () => {\r\n      if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\r\n        disable();\r\n      }\r\n\r\n      if (swiper.params.mousewheel.enabled) enable();\r\n    });\r\n    on('destroy', () => {\r\n      if (swiper.params.cssMode) {\r\n        enable();\r\n      }\r\n\r\n      if (swiper.mousewheel.enabled) disable();\r\n    });\r\n    Object.assign(swiper.mousewheel, {\r\n      enable,\r\n      disable\r\n    });\r\n  }\r\n\r\n  function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\r\n    const document = getDocument();\r\n\r\n    if (swiper.params.createElements) {\r\n      Object.keys(checkProps).forEach(key => {\r\n        if (!params[key] && params.auto === true) {\r\n          let element = swiper.$el.children(`.${checkProps[key]}`)[0];\r\n\r\n          if (!element) {\r\n            element = document.createElement('div');\r\n            element.className = checkProps[key];\r\n            swiper.$el.append(element);\r\n          }\r\n\r\n          params[key] = element;\r\n          originalParams[key] = element;\r\n        }\r\n      });\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  function Navigation(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    extendParams({\r\n      navigation: {\r\n        nextEl: null,\r\n        prevEl: null,\r\n        hideOnClick: false,\r\n        disabledClass: 'swiper-button-disabled',\r\n        hiddenClass: 'swiper-button-hidden',\r\n        lockClass: 'swiper-button-lock'\r\n      }\r\n    });\r\n    swiper.navigation = {\r\n      nextEl: null,\r\n      $nextEl: null,\r\n      prevEl: null,\r\n      $prevEl: null\r\n    };\r\n\r\n    function getEl(el) {\r\n      let $el;\r\n\r\n      if (el) {\r\n        $el = $(el);\r\n\r\n        if (swiper.params.uniqueNavElements && typeof el === 'string' && $el.length > 1 && swiper.$el.find(el).length === 1) {\r\n          $el = swiper.$el.find(el);\r\n        }\r\n      }\r\n\r\n      return $el;\r\n    }\r\n\r\n    function toggleEl($el, disabled) {\r\n      const params = swiper.params.navigation;\r\n\r\n      if ($el && $el.length > 0) {\r\n        $el[disabled ? 'addClass' : 'removeClass'](params.disabledClass);\r\n        if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\r\n\r\n        if (swiper.params.watchOverflow && swiper.enabled) {\r\n          $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\r\n        }\r\n      }\r\n    }\r\n\r\n    function update() {\r\n      // Update Navigation Buttons\r\n      if (swiper.params.loop) return;\r\n      const {\r\n        $nextEl,\r\n        $prevEl\r\n      } = swiper.navigation;\r\n      toggleEl($prevEl, swiper.isBeginning && !swiper.params.rewind);\r\n      toggleEl($nextEl, swiper.isEnd && !swiper.params.rewind);\r\n    }\r\n\r\n    function onPrevClick(e) {\r\n      e.preventDefault();\r\n      if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\r\n      swiper.slidePrev();\r\n    }\r\n\r\n    function onNextClick(e) {\r\n      e.preventDefault();\r\n      if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\r\n      swiper.slideNext();\r\n    }\r\n\r\n    function init() {\r\n      const params = swiper.params.navigation;\r\n      swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\r\n        nextEl: 'swiper-button-next',\r\n        prevEl: 'swiper-button-prev'\r\n      });\r\n      if (!(params.nextEl || params.prevEl)) return;\r\n      const $nextEl = getEl(params.nextEl);\r\n      const $prevEl = getEl(params.prevEl);\r\n\r\n      if ($nextEl && $nextEl.length > 0) {\r\n        $nextEl.on('click', onNextClick);\r\n      }\r\n\r\n      if ($prevEl && $prevEl.length > 0) {\r\n        $prevEl.on('click', onPrevClick);\r\n      }\r\n\r\n      Object.assign(swiper.navigation, {\r\n        $nextEl,\r\n        nextEl: $nextEl && $nextEl[0],\r\n        $prevEl,\r\n        prevEl: $prevEl && $prevEl[0]\r\n      });\r\n\r\n      if (!swiper.enabled) {\r\n        if ($nextEl) $nextEl.addClass(params.lockClass);\r\n        if ($prevEl) $prevEl.addClass(params.lockClass);\r\n      }\r\n    }\r\n\r\n    function destroy() {\r\n      const {\r\n        $nextEl,\r\n        $prevEl\r\n      } = swiper.navigation;\r\n\r\n      if ($nextEl && $nextEl.length) {\r\n        $nextEl.off('click', onNextClick);\r\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\r\n      }\r\n\r\n      if ($prevEl && $prevEl.length) {\r\n        $prevEl.off('click', onPrevClick);\r\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\r\n      }\r\n    }\r\n\r\n    on('init', () => {\r\n      init();\r\n      update();\r\n    });\r\n    on('toEdge fromEdge lock unlock', () => {\r\n      update();\r\n    });\r\n    on('destroy', () => {\r\n      destroy();\r\n    });\r\n    on('enable disable', () => {\r\n      const {\r\n        $nextEl,\r\n        $prevEl\r\n      } = swiper.navigation;\r\n\r\n      if ($nextEl) {\r\n        $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\r\n      }\r\n\r\n      if ($prevEl) {\r\n        $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\r\n      }\r\n    });\r\n    on('click', (_s, e) => {\r\n      const {\r\n        $nextEl,\r\n        $prevEl\r\n      } = swiper.navigation;\r\n      const targetEl = e.target;\r\n\r\n      if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\r\n        if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\r\n        let isHidden;\r\n\r\n        if ($nextEl) {\r\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\r\n        } else if ($prevEl) {\r\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\r\n        }\r\n\r\n        if (isHidden === true) {\r\n          emit('navigationShow');\r\n        } else {\r\n          emit('navigationHide');\r\n        }\r\n\r\n        if ($nextEl) {\r\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\r\n        }\r\n\r\n        if ($prevEl) {\r\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\r\n        }\r\n      }\r\n    });\r\n    Object.assign(swiper.navigation, {\r\n      update,\r\n      init,\r\n      destroy\r\n    });\r\n  }\r\n\r\n  function classesToSelector(classes) {\r\n    if (classes === void 0) {\r\n      classes = '';\r\n    }\r\n\r\n    return `.${classes.trim().replace(/([\\.:!\\/])/g, '\\\\$1') // eslint-disable-line\r\n.replace(/ /g, '.')}`;\r\n  }\r\n\r\n  function Pagination(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    const pfx = 'swiper-pagination';\r\n    extendParams({\r\n      pagination: {\r\n        el: null,\r\n        bulletElement: 'span',\r\n        clickable: false,\r\n        hideOnClick: false,\r\n        renderBullet: null,\r\n        renderProgressbar: null,\r\n        renderFraction: null,\r\n        renderCustom: null,\r\n        progressbarOpposite: false,\r\n        type: 'bullets',\r\n        // 'bullets' or 'progressbar' or 'fraction' or 'custom'\r\n        dynamicBullets: false,\r\n        dynamicMainBullets: 1,\r\n        formatFractionCurrent: number => number,\r\n        formatFractionTotal: number => number,\r\n        bulletClass: `${pfx}-bullet`,\r\n        bulletActiveClass: `${pfx}-bullet-active`,\r\n        modifierClass: `${pfx}-`,\r\n        currentClass: `${pfx}-current`,\r\n        totalClass: `${pfx}-total`,\r\n        hiddenClass: `${pfx}-hidden`,\r\n        progressbarFillClass: `${pfx}-progressbar-fill`,\r\n        progressbarOppositeClass: `${pfx}-progressbar-opposite`,\r\n        clickableClass: `${pfx}-clickable`,\r\n        lockClass: `${pfx}-lock`,\r\n        horizontalClass: `${pfx}-horizontal`,\r\n        verticalClass: `${pfx}-vertical`\r\n      }\r\n    });\r\n    swiper.pagination = {\r\n      el: null,\r\n      $el: null,\r\n      bullets: []\r\n    };\r\n    let bulletSize;\r\n    let dynamicBulletIndex = 0;\r\n\r\n    function isPaginationDisabled() {\r\n      return !swiper.params.pagination.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0;\r\n    }\r\n\r\n    function setSideBullets($bulletEl, position) {\r\n      const {\r\n        bulletActiveClass\r\n      } = swiper.params.pagination;\r\n      $bulletEl[position]().addClass(`${bulletActiveClass}-${position}`)[position]().addClass(`${bulletActiveClass}-${position}-${position}`);\r\n    }\r\n\r\n    function update() {\r\n      // Render || Update Pagination bullets/items\r\n      const rtl = swiper.rtl;\r\n      const params = swiper.params.pagination;\r\n      if (isPaginationDisabled()) return;\r\n      const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n      const $el = swiper.pagination.$el; // Current/Total\r\n\r\n      let current;\r\n      const total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n\r\n      if (swiper.params.loop) {\r\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\r\n\r\n        if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\r\n          current -= slidesLength - swiper.loopedSlides * 2;\r\n        }\r\n\r\n        if (current > total - 1) current -= total;\r\n        if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\r\n      } else if (typeof swiper.snapIndex !== 'undefined') {\r\n        current = swiper.snapIndex;\r\n      } else {\r\n        current = swiper.activeIndex || 0;\r\n      } // Types\r\n\r\n\r\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\r\n        const bullets = swiper.pagination.bullets;\r\n        let firstIndex;\r\n        let lastIndex;\r\n        let midIndex;\r\n\r\n        if (params.dynamicBullets) {\r\n          bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\r\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', `${bulletSize * (params.dynamicMainBullets + 4)}px`);\r\n\r\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\r\n            dynamicBulletIndex += current - (swiper.previousIndex - swiper.loopedSlides || 0);\r\n\r\n            if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\r\n              dynamicBulletIndex = params.dynamicMainBullets - 1;\r\n            } else if (dynamicBulletIndex < 0) {\r\n              dynamicBulletIndex = 0;\r\n            }\r\n          }\r\n\r\n          firstIndex = Math.max(current - dynamicBulletIndex, 0);\r\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\r\n          midIndex = (lastIndex + firstIndex) / 2;\r\n        }\r\n\r\n        bullets.removeClass(['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`).join(' '));\r\n\r\n        if ($el.length > 1) {\r\n          bullets.each(bullet => {\r\n            const $bullet = $(bullet);\r\n            const bulletIndex = $bullet.index();\r\n\r\n            if (bulletIndex === current) {\r\n              $bullet.addClass(params.bulletActiveClass);\r\n            }\r\n\r\n            if (params.dynamicBullets) {\r\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\r\n                $bullet.addClass(`${params.bulletActiveClass}-main`);\r\n              }\r\n\r\n              if (bulletIndex === firstIndex) {\r\n                setSideBullets($bullet, 'prev');\r\n              }\r\n\r\n              if (bulletIndex === lastIndex) {\r\n                setSideBullets($bullet, 'next');\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          const $bullet = bullets.eq(current);\r\n          const bulletIndex = $bullet.index();\r\n          $bullet.addClass(params.bulletActiveClass);\r\n\r\n          if (params.dynamicBullets) {\r\n            const $firstDisplayedBullet = bullets.eq(firstIndex);\r\n            const $lastDisplayedBullet = bullets.eq(lastIndex);\r\n\r\n            for (let i = firstIndex; i <= lastIndex; i += 1) {\r\n              bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\r\n            }\r\n\r\n            if (swiper.params.loop) {\r\n              if (bulletIndex >= bullets.length) {\r\n                for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\r\n                  bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\r\n                }\r\n\r\n                bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\r\n              } else {\r\n                setSideBullets($firstDisplayedBullet, 'prev');\r\n                setSideBullets($lastDisplayedBullet, 'next');\r\n              }\r\n            } else {\r\n              setSideBullets($firstDisplayedBullet, 'prev');\r\n              setSideBullets($lastDisplayedBullet, 'next');\r\n            }\r\n          }\r\n        }\r\n\r\n        if (params.dynamicBullets) {\r\n          const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\r\n          const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\r\n          const offsetProp = rtl ? 'right' : 'left';\r\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\r\n        }\r\n      }\r\n\r\n      if (params.type === 'fraction') {\r\n        $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));\r\n        $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\r\n      }\r\n\r\n      if (params.type === 'progressbar') {\r\n        let progressbarDirection;\r\n\r\n        if (params.progressbarOpposite) {\r\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\r\n        } else {\r\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\r\n        }\r\n\r\n        const scale = (current + 1) / total;\r\n        let scaleX = 1;\r\n        let scaleY = 1;\r\n\r\n        if (progressbarDirection === 'horizontal') {\r\n          scaleX = scale;\r\n        } else {\r\n          scaleY = scale;\r\n        }\r\n\r\n        $el.find(classesToSelector(params.progressbarFillClass)).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\r\n      }\r\n\r\n      if (params.type === 'custom' && params.renderCustom) {\r\n        $el.html(params.renderCustom(swiper, current + 1, total));\r\n        emit('paginationRender', $el[0]);\r\n      } else {\r\n        emit('paginationUpdate', $el[0]);\r\n      }\r\n\r\n      if (swiper.params.watchOverflow && swiper.enabled) {\r\n        $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\r\n      }\r\n    }\r\n\r\n    function render() {\r\n      // Render Container\r\n      const params = swiper.params.pagination;\r\n      if (isPaginationDisabled()) return;\r\n      const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n      const $el = swiper.pagination.$el;\r\n      let paginationHTML = '';\r\n\r\n      if (params.type === 'bullets') {\r\n        let numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n\r\n        if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.loop && numberOfBullets > slidesLength) {\r\n          numberOfBullets = slidesLength;\r\n        }\r\n\r\n        for (let i = 0; i < numberOfBullets; i += 1) {\r\n          if (params.renderBullet) {\r\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\r\n          } else {\r\n            paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\r\n          }\r\n        }\r\n\r\n        $el.html(paginationHTML);\r\n        swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\r\n      }\r\n\r\n      if (params.type === 'fraction') {\r\n        if (params.renderFraction) {\r\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\r\n        } else {\r\n          paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\r\n        }\r\n\r\n        $el.html(paginationHTML);\r\n      }\r\n\r\n      if (params.type === 'progressbar') {\r\n        if (params.renderProgressbar) {\r\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\r\n        } else {\r\n          paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\r\n        }\r\n\r\n        $el.html(paginationHTML);\r\n      }\r\n\r\n      if (params.type !== 'custom') {\r\n        emit('paginationRender', swiper.pagination.$el[0]);\r\n      }\r\n    }\r\n\r\n    function init() {\r\n      swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\r\n        el: 'swiper-pagination'\r\n      });\r\n      const params = swiper.params.pagination;\r\n      if (!params.el) return;\r\n      let $el = $(params.el);\r\n      if ($el.length === 0) return;\r\n\r\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\r\n        $el = swiper.$el.find(params.el); // check if it belongs to another nested Swiper\r\n\r\n        if ($el.length > 1) {\r\n          $el = $el.filter(el => {\r\n            if ($(el).parents('.swiper')[0] !== swiper.el) return false;\r\n            return true;\r\n          });\r\n        }\r\n      }\r\n\r\n      if (params.type === 'bullets' && params.clickable) {\r\n        $el.addClass(params.clickableClass);\r\n      }\r\n\r\n      $el.addClass(params.modifierClass + params.type);\r\n      $el.addClass(params.modifierClass + swiper.params.direction);\r\n\r\n      if (params.type === 'bullets' && params.dynamicBullets) {\r\n        $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\r\n        dynamicBulletIndex = 0;\r\n\r\n        if (params.dynamicMainBullets < 1) {\r\n          params.dynamicMainBullets = 1;\r\n        }\r\n      }\r\n\r\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\r\n        $el.addClass(params.progressbarOppositeClass);\r\n      }\r\n\r\n      if (params.clickable) {\r\n        $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {\r\n          e.preventDefault();\r\n          let index = $(this).index() * swiper.params.slidesPerGroup;\r\n          if (swiper.params.loop) index += swiper.loopedSlides;\r\n          swiper.slideTo(index);\r\n        });\r\n      }\r\n\r\n      Object.assign(swiper.pagination, {\r\n        $el,\r\n        el: $el[0]\r\n      });\r\n\r\n      if (!swiper.enabled) {\r\n        $el.addClass(params.lockClass);\r\n      }\r\n    }\r\n\r\n    function destroy() {\r\n      const params = swiper.params.pagination;\r\n      if (isPaginationDisabled()) return;\r\n      const $el = swiper.pagination.$el;\r\n      $el.removeClass(params.hiddenClass);\r\n      $el.removeClass(params.modifierClass + params.type);\r\n      $el.removeClass(params.modifierClass + swiper.params.direction);\r\n      if (swiper.pagination.bullets && swiper.pagination.bullets.removeClass) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\r\n\r\n      if (params.clickable) {\r\n        $el.off('click', classesToSelector(params.bulletClass));\r\n      }\r\n    }\r\n\r\n    on('init', () => {\r\n      init();\r\n      render();\r\n      update();\r\n    });\r\n    on('activeIndexChange', () => {\r\n      if (swiper.params.loop) {\r\n        update();\r\n      } else if (typeof swiper.snapIndex === 'undefined') {\r\n        update();\r\n      }\r\n    });\r\n    on('snapIndexChange', () => {\r\n      if (!swiper.params.loop) {\r\n        update();\r\n      }\r\n    });\r\n    on('slidesLengthChange', () => {\r\n      if (swiper.params.loop) {\r\n        render();\r\n        update();\r\n      }\r\n    });\r\n    on('snapGridLengthChange', () => {\r\n      if (!swiper.params.loop) {\r\n        render();\r\n        update();\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      destroy();\r\n    });\r\n    on('enable disable', () => {\r\n      const {\r\n        $el\r\n      } = swiper.pagination;\r\n\r\n      if ($el) {\r\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.pagination.lockClass);\r\n      }\r\n    });\r\n    on('lock unlock', () => {\r\n      update();\r\n    });\r\n    on('click', (_s, e) => {\r\n      const targetEl = e.target;\r\n      const {\r\n        $el\r\n      } = swiper.pagination;\r\n\r\n      if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && $el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {\r\n        if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\r\n        const isHidden = $el.hasClass(swiper.params.pagination.hiddenClass);\r\n\r\n        if (isHidden === true) {\r\n          emit('paginationShow');\r\n        } else {\r\n          emit('paginationHide');\r\n        }\r\n\r\n        $el.toggleClass(swiper.params.pagination.hiddenClass);\r\n      }\r\n    });\r\n    Object.assign(swiper.pagination, {\r\n      render,\r\n      update,\r\n      init,\r\n      destroy\r\n    });\r\n  }\r\n\r\n  function Scrollbar(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    const document = getDocument();\r\n    let isTouched = false;\r\n    let timeout = null;\r\n    let dragTimeout = null;\r\n    let dragStartPos;\r\n    let dragSize;\r\n    let trackSize;\r\n    let divider;\r\n    extendParams({\r\n      scrollbar: {\r\n        el: null,\r\n        dragSize: 'auto',\r\n        hide: false,\r\n        draggable: false,\r\n        snapOnRelease: true,\r\n        lockClass: 'swiper-scrollbar-lock',\r\n        dragClass: 'swiper-scrollbar-drag'\r\n      }\r\n    });\r\n    swiper.scrollbar = {\r\n      el: null,\r\n      dragEl: null,\r\n      $el: null,\r\n      $dragEl: null\r\n    };\r\n\r\n    function setTranslate() {\r\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n      const {\r\n        scrollbar,\r\n        rtlTranslate: rtl,\r\n        progress\r\n      } = swiper;\r\n      const {\r\n        $dragEl,\r\n        $el\r\n      } = scrollbar;\r\n      const params = swiper.params.scrollbar;\r\n      let newSize = dragSize;\r\n      let newPos = (trackSize - dragSize) * progress;\r\n\r\n      if (rtl) {\r\n        newPos = -newPos;\r\n\r\n        if (newPos > 0) {\r\n          newSize = dragSize - newPos;\r\n          newPos = 0;\r\n        } else if (-newPos + dragSize > trackSize) {\r\n          newSize = trackSize + newPos;\r\n        }\r\n      } else if (newPos < 0) {\r\n        newSize = dragSize + newPos;\r\n        newPos = 0;\r\n      } else if (newPos + dragSize > trackSize) {\r\n        newSize = trackSize - newPos;\r\n      }\r\n\r\n      if (swiper.isHorizontal()) {\r\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\r\n        $dragEl[0].style.width = `${newSize}px`;\r\n      } else {\r\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\r\n        $dragEl[0].style.height = `${newSize}px`;\r\n      }\r\n\r\n      if (params.hide) {\r\n        clearTimeout(timeout);\r\n        $el[0].style.opacity = 1;\r\n        timeout = setTimeout(() => {\r\n          $el[0].style.opacity = 0;\r\n          $el.transition(400);\r\n        }, 1000);\r\n      }\r\n    }\r\n\r\n    function setTransition(duration) {\r\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n      swiper.scrollbar.$dragEl.transition(duration);\r\n    }\r\n\r\n    function updateSize() {\r\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n      const {\r\n        scrollbar\r\n      } = swiper;\r\n      const {\r\n        $dragEl,\r\n        $el\r\n      } = scrollbar;\r\n      $dragEl[0].style.width = '';\r\n      $dragEl[0].style.height = '';\r\n      trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\r\n      divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\r\n\r\n      if (swiper.params.scrollbar.dragSize === 'auto') {\r\n        dragSize = trackSize * divider;\r\n      } else {\r\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\r\n      }\r\n\r\n      if (swiper.isHorizontal()) {\r\n        $dragEl[0].style.width = `${dragSize}px`;\r\n      } else {\r\n        $dragEl[0].style.height = `${dragSize}px`;\r\n      }\r\n\r\n      if (divider >= 1) {\r\n        $el[0].style.display = 'none';\r\n      } else {\r\n        $el[0].style.display = '';\r\n      }\r\n\r\n      if (swiper.params.scrollbar.hide) {\r\n        $el[0].style.opacity = 0;\r\n      }\r\n\r\n      if (swiper.params.watchOverflow && swiper.enabled) {\r\n        scrollbar.$el[swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\r\n      }\r\n    }\r\n\r\n    function getPointerPosition(e) {\r\n      if (swiper.isHorizontal()) {\r\n        return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\r\n      }\r\n\r\n      return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\r\n    }\r\n\r\n    function setDragPosition(e) {\r\n      const {\r\n        scrollbar,\r\n        rtlTranslate: rtl\r\n      } = swiper;\r\n      const {\r\n        $el\r\n      } = scrollbar;\r\n      let positionRatio;\r\n      positionRatio = (getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\r\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\r\n\r\n      if (rtl) {\r\n        positionRatio = 1 - positionRatio;\r\n      }\r\n\r\n      const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\r\n      swiper.updateProgress(position);\r\n      swiper.setTranslate(position);\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n    }\r\n\r\n    function onDragStart(e) {\r\n      const params = swiper.params.scrollbar;\r\n      const {\r\n        scrollbar,\r\n        $wrapperEl\r\n      } = swiper;\r\n      const {\r\n        $el,\r\n        $dragEl\r\n      } = scrollbar;\r\n      isTouched = true;\r\n      dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      $wrapperEl.transition(100);\r\n      $dragEl.transition(100);\r\n      setDragPosition(e);\r\n      clearTimeout(dragTimeout);\r\n      $el.transition(0);\r\n\r\n      if (params.hide) {\r\n        $el.css('opacity', 1);\r\n      }\r\n\r\n      if (swiper.params.cssMode) {\r\n        swiper.$wrapperEl.css('scroll-snap-type', 'none');\r\n      }\r\n\r\n      emit('scrollbarDragStart', e);\r\n    }\r\n\r\n    function onDragMove(e) {\r\n      const {\r\n        scrollbar,\r\n        $wrapperEl\r\n      } = swiper;\r\n      const {\r\n        $el,\r\n        $dragEl\r\n      } = scrollbar;\r\n      if (!isTouched) return;\r\n      if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n      setDragPosition(e);\r\n      $wrapperEl.transition(0);\r\n      $el.transition(0);\r\n      $dragEl.transition(0);\r\n      emit('scrollbarDragMove', e);\r\n    }\r\n\r\n    function onDragEnd(e) {\r\n      const params = swiper.params.scrollbar;\r\n      const {\r\n        scrollbar,\r\n        $wrapperEl\r\n      } = swiper;\r\n      const {\r\n        $el\r\n      } = scrollbar;\r\n      if (!isTouched) return;\r\n      isTouched = false;\r\n\r\n      if (swiper.params.cssMode) {\r\n        swiper.$wrapperEl.css('scroll-snap-type', '');\r\n        $wrapperEl.transition('');\r\n      }\r\n\r\n      if (params.hide) {\r\n        clearTimeout(dragTimeout);\r\n        dragTimeout = nextTick(() => {\r\n          $el.css('opacity', 0);\r\n          $el.transition(400);\r\n        }, 1000);\r\n      }\r\n\r\n      emit('scrollbarDragEnd', e);\r\n\r\n      if (params.snapOnRelease) {\r\n        swiper.slideToClosest();\r\n      }\r\n    }\r\n\r\n    function events(method) {\r\n      const {\r\n        scrollbar,\r\n        touchEventsTouch,\r\n        touchEventsDesktop,\r\n        params,\r\n        support\r\n      } = swiper;\r\n      const $el = scrollbar.$el;\r\n      const target = $el[0];\r\n      const activeListener = support.passiveListener && params.passiveListeners ? {\r\n        passive: false,\r\n        capture: false\r\n      } : false;\r\n      const passiveListener = support.passiveListener && params.passiveListeners ? {\r\n        passive: true,\r\n        capture: false\r\n      } : false;\r\n      if (!target) return;\r\n      const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\r\n\r\n      if (!support.touch) {\r\n        target[eventMethod](touchEventsDesktop.start, onDragStart, activeListener);\r\n        document[eventMethod](touchEventsDesktop.move, onDragMove, activeListener);\r\n        document[eventMethod](touchEventsDesktop.end, onDragEnd, passiveListener);\r\n      } else {\r\n        target[eventMethod](touchEventsTouch.start, onDragStart, activeListener);\r\n        target[eventMethod](touchEventsTouch.move, onDragMove, activeListener);\r\n        target[eventMethod](touchEventsTouch.end, onDragEnd, passiveListener);\r\n      }\r\n    }\r\n\r\n    function enableDraggable() {\r\n      if (!swiper.params.scrollbar.el) return;\r\n      events('on');\r\n    }\r\n\r\n    function disableDraggable() {\r\n      if (!swiper.params.scrollbar.el) return;\r\n      events('off');\r\n    }\r\n\r\n    function init() {\r\n      const {\r\n        scrollbar,\r\n        $el: $swiperEl\r\n      } = swiper;\r\n      swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\r\n        el: 'swiper-scrollbar'\r\n      });\r\n      const params = swiper.params.scrollbar;\r\n      if (!params.el) return;\r\n      let $el = $(params.el);\r\n\r\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\r\n        $el = $swiperEl.find(params.el);\r\n      }\r\n\r\n      let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\r\n\r\n      if ($dragEl.length === 0) {\r\n        $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\r\n        $el.append($dragEl);\r\n      }\r\n\r\n      Object.assign(scrollbar, {\r\n        $el,\r\n        el: $el[0],\r\n        $dragEl,\r\n        dragEl: $dragEl[0]\r\n      });\r\n\r\n      if (params.draggable) {\r\n        enableDraggable();\r\n      }\r\n\r\n      if ($el) {\r\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\r\n      }\r\n    }\r\n\r\n    function destroy() {\r\n      disableDraggable();\r\n    }\r\n\r\n    on('init', () => {\r\n      init();\r\n      updateSize();\r\n      setTranslate();\r\n    });\r\n    on('update resize observerUpdate lock unlock', () => {\r\n      updateSize();\r\n    });\r\n    on('setTranslate', () => {\r\n      setTranslate();\r\n    });\r\n    on('setTransition', (_s, duration) => {\r\n      setTransition(duration);\r\n    });\r\n    on('enable disable', () => {\r\n      const {\r\n        $el\r\n      } = swiper.scrollbar;\r\n\r\n      if ($el) {\r\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      destroy();\r\n    });\r\n    Object.assign(swiper.scrollbar, {\r\n      updateSize,\r\n      setTranslate,\r\n      init,\r\n      destroy\r\n    });\r\n  }\r\n\r\n  function Parallax(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      parallax: {\r\n        enabled: false\r\n      }\r\n    });\r\n\r\n    const setTransform = (el, progress) => {\r\n      const {\r\n        rtl\r\n      } = swiper;\r\n      const $el = $(el);\r\n      const rtlFactor = rtl ? -1 : 1;\r\n      const p = $el.attr('data-swiper-parallax') || '0';\r\n      let x = $el.attr('data-swiper-parallax-x');\r\n      let y = $el.attr('data-swiper-parallax-y');\r\n      const scale = $el.attr('data-swiper-parallax-scale');\r\n      const opacity = $el.attr('data-swiper-parallax-opacity');\r\n\r\n      if (x || y) {\r\n        x = x || '0';\r\n        y = y || '0';\r\n      } else if (swiper.isHorizontal()) {\r\n        x = p;\r\n        y = '0';\r\n      } else {\r\n        y = p;\r\n        x = '0';\r\n      }\r\n\r\n      if (x.indexOf('%') >= 0) {\r\n        x = `${parseInt(x, 10) * progress * rtlFactor}%`;\r\n      } else {\r\n        x = `${x * progress * rtlFactor}px`;\r\n      }\r\n\r\n      if (y.indexOf('%') >= 0) {\r\n        y = `${parseInt(y, 10) * progress}%`;\r\n      } else {\r\n        y = `${y * progress}px`;\r\n      }\r\n\r\n      if (typeof opacity !== 'undefined' && opacity !== null) {\r\n        const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\r\n        $el[0].style.opacity = currentOpacity;\r\n      }\r\n\r\n      if (typeof scale === 'undefined' || scale === null) {\r\n        $el.transform(`translate3d(${x}, ${y}, 0px)`);\r\n      } else {\r\n        const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\r\n        $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\r\n      }\r\n    };\r\n\r\n    const setTranslate = () => {\r\n      const {\r\n        $el,\r\n        slides,\r\n        progress,\r\n        snapGrid\r\n      } = swiper;\r\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\r\n        setTransform(el, progress);\r\n      });\r\n      slides.each((slideEl, slideIndex) => {\r\n        let slideProgress = slideEl.progress;\r\n\r\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\r\n          slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\r\n        }\r\n\r\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\r\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\r\n          setTransform(el, slideProgress);\r\n        });\r\n      });\r\n    };\r\n\r\n    const setTransition = function (duration) {\r\n      if (duration === void 0) {\r\n        duration = swiper.params.speed;\r\n      }\r\n\r\n      const {\r\n        $el\r\n      } = swiper;\r\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(parallaxEl => {\r\n        const $parallaxEl = $(parallaxEl);\r\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\r\n        if (duration === 0) parallaxDuration = 0;\r\n        $parallaxEl.transition(parallaxDuration);\r\n      });\r\n    };\r\n\r\n    on('beforeInit', () => {\r\n      if (!swiper.params.parallax.enabled) return;\r\n      swiper.params.watchSlidesProgress = true;\r\n      swiper.originalParams.watchSlidesProgress = true;\r\n    });\r\n    on('init', () => {\r\n      if (!swiper.params.parallax.enabled) return;\r\n      setTranslate();\r\n    });\r\n    on('setTranslate', () => {\r\n      if (!swiper.params.parallax.enabled) return;\r\n      setTranslate();\r\n    });\r\n    on('setTransition', (_swiper, duration) => {\r\n      if (!swiper.params.parallax.enabled) return;\r\n      setTransition(duration);\r\n    });\r\n  }\r\n\r\n  function Zoom(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    const window = getWindow();\r\n    extendParams({\r\n      zoom: {\r\n        enabled: false,\r\n        maxRatio: 3,\r\n        minRatio: 1,\r\n        toggle: true,\r\n        containerClass: 'swiper-zoom-container',\r\n        zoomedSlideClass: 'swiper-slide-zoomed'\r\n      }\r\n    });\r\n    swiper.zoom = {\r\n      enabled: false\r\n    };\r\n    let currentScale = 1;\r\n    let isScaling = false;\r\n    let gesturesEnabled;\r\n    let fakeGestureTouched;\r\n    let fakeGestureMoved;\r\n    const gesture = {\r\n      $slideEl: undefined,\r\n      slideWidth: undefined,\r\n      slideHeight: undefined,\r\n      $imageEl: undefined,\r\n      $imageWrapEl: undefined,\r\n      maxRatio: 3\r\n    };\r\n    const image = {\r\n      isTouched: undefined,\r\n      isMoved: undefined,\r\n      currentX: undefined,\r\n      currentY: undefined,\r\n      minX: undefined,\r\n      minY: undefined,\r\n      maxX: undefined,\r\n      maxY: undefined,\r\n      width: undefined,\r\n      height: undefined,\r\n      startX: undefined,\r\n      startY: undefined,\r\n      touchesStart: {},\r\n      touchesCurrent: {}\r\n    };\r\n    const velocity = {\r\n      x: undefined,\r\n      y: undefined,\r\n      prevPositionX: undefined,\r\n      prevPositionY: undefined,\r\n      prevTime: undefined\r\n    };\r\n    let scale = 1;\r\n    Object.defineProperty(swiper.zoom, 'scale', {\r\n      get() {\r\n        return scale;\r\n      },\r\n\r\n      set(value) {\r\n        if (scale !== value) {\r\n          const imageEl = gesture.$imageEl ? gesture.$imageEl[0] : undefined;\r\n          const slideEl = gesture.$slideEl ? gesture.$slideEl[0] : undefined;\r\n          emit('zoomChange', value, imageEl, slideEl);\r\n        }\r\n\r\n        scale = value;\r\n      }\r\n\r\n    });\r\n\r\n    function getDistanceBetweenTouches(e) {\r\n      if (e.targetTouches.length < 2) return 1;\r\n      const x1 = e.targetTouches[0].pageX;\r\n      const y1 = e.targetTouches[0].pageY;\r\n      const x2 = e.targetTouches[1].pageX;\r\n      const y2 = e.targetTouches[1].pageY;\r\n      const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\r\n      return distance;\r\n    } // Events\r\n\r\n\r\n    function onGestureStart(e) {\r\n      const support = swiper.support;\r\n      const params = swiper.params.zoom;\r\n      fakeGestureTouched = false;\r\n      fakeGestureMoved = false;\r\n\r\n      if (!support.gestures) {\r\n        if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\r\n          return;\r\n        }\r\n\r\n        fakeGestureTouched = true;\r\n        gesture.scaleStart = getDistanceBetweenTouches(e);\r\n      }\r\n\r\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\r\n        gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\r\n        if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\r\n        gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\r\n        gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\r\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n\r\n        if (gesture.$imageWrapEl.length === 0) {\r\n          gesture.$imageEl = undefined;\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (gesture.$imageEl) {\r\n        gesture.$imageEl.transition(0);\r\n      }\r\n\r\n      isScaling = true;\r\n    }\r\n\r\n    function onGestureChange(e) {\r\n      const support = swiper.support;\r\n      const params = swiper.params.zoom;\r\n      const zoom = swiper.zoom;\r\n\r\n      if (!support.gestures) {\r\n        if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\r\n          return;\r\n        }\r\n\r\n        fakeGestureMoved = true;\r\n        gesture.scaleMove = getDistanceBetweenTouches(e);\r\n      }\r\n\r\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\r\n        if (e.type === 'gesturechange') onGestureStart(e);\r\n        return;\r\n      }\r\n\r\n      if (support.gestures) {\r\n        zoom.scale = e.scale * currentScale;\r\n      } else {\r\n        zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\r\n      }\r\n\r\n      if (zoom.scale > gesture.maxRatio) {\r\n        zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\r\n      }\r\n\r\n      if (zoom.scale < params.minRatio) {\r\n        zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\r\n      }\r\n\r\n      gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\r\n    }\r\n\r\n    function onGestureEnd(e) {\r\n      const device = swiper.device;\r\n      const support = swiper.support;\r\n      const params = swiper.params.zoom;\r\n      const zoom = swiper.zoom;\r\n\r\n      if (!support.gestures) {\r\n        if (!fakeGestureTouched || !fakeGestureMoved) {\r\n          return;\r\n        }\r\n\r\n        if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {\r\n          return;\r\n        }\r\n\r\n        fakeGestureTouched = false;\r\n        fakeGestureMoved = false;\r\n      }\r\n\r\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\r\n      gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\r\n      currentScale = zoom.scale;\r\n      isScaling = false;\r\n      if (zoom.scale === 1) gesture.$slideEl = undefined;\r\n    }\r\n\r\n    function onTouchStart(e) {\r\n      const device = swiper.device;\r\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n      if (image.isTouched) return;\r\n      if (device.android && e.cancelable) e.preventDefault();\r\n      image.isTouched = true;\r\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\r\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\r\n    }\r\n\r\n    function onTouchMove(e) {\r\n      const zoom = swiper.zoom;\r\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n      swiper.allowClick = false;\r\n      if (!image.isTouched || !gesture.$slideEl) return;\r\n\r\n      if (!image.isMoved) {\r\n        image.width = gesture.$imageEl[0].offsetWidth;\r\n        image.height = gesture.$imageEl[0].offsetHeight;\r\n        image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\r\n        image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\r\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\r\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\r\n        gesture.$imageWrapEl.transition(0);\r\n      } // Define if we need image drag\r\n\r\n\r\n      const scaledWidth = image.width * zoom.scale;\r\n      const scaledHeight = image.height * zoom.scale;\r\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\r\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\r\n      image.maxX = -image.minX;\r\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\r\n      image.maxY = -image.minY;\r\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\r\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\r\n\r\n      if (!image.isMoved && !isScaling) {\r\n        if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\r\n          image.isTouched = false;\r\n          return;\r\n        }\r\n\r\n        if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\r\n          image.isTouched = false;\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (e.cancelable) {\r\n        e.preventDefault();\r\n      }\r\n\r\n      e.stopPropagation();\r\n      image.isMoved = true;\r\n      image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\r\n      image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\r\n\r\n      if (image.currentX < image.minX) {\r\n        image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\r\n      }\r\n\r\n      if (image.currentX > image.maxX) {\r\n        image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\r\n      }\r\n\r\n      if (image.currentY < image.minY) {\r\n        image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\r\n      }\r\n\r\n      if (image.currentY > image.maxY) {\r\n        image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\r\n      } // Velocity\r\n\r\n\r\n      if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\r\n      if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\r\n      if (!velocity.prevTime) velocity.prevTime = Date.now();\r\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\r\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\r\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\r\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\r\n      velocity.prevPositionX = image.touchesCurrent.x;\r\n      velocity.prevPositionY = image.touchesCurrent.y;\r\n      velocity.prevTime = Date.now();\r\n      gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\r\n    }\r\n\r\n    function onTouchEnd() {\r\n      const zoom = swiper.zoom;\r\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n\r\n      if (!image.isTouched || !image.isMoved) {\r\n        image.isTouched = false;\r\n        image.isMoved = false;\r\n        return;\r\n      }\r\n\r\n      image.isTouched = false;\r\n      image.isMoved = false;\r\n      let momentumDurationX = 300;\r\n      let momentumDurationY = 300;\r\n      const momentumDistanceX = velocity.x * momentumDurationX;\r\n      const newPositionX = image.currentX + momentumDistanceX;\r\n      const momentumDistanceY = velocity.y * momentumDurationY;\r\n      const newPositionY = image.currentY + momentumDistanceY; // Fix duration\r\n\r\n      if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\r\n      if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\r\n      const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\r\n      image.currentX = newPositionX;\r\n      image.currentY = newPositionY; // Define if we need image drag\r\n\r\n      const scaledWidth = image.width * zoom.scale;\r\n      const scaledHeight = image.height * zoom.scale;\r\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\r\n      image.maxX = -image.minX;\r\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\r\n      image.maxY = -image.minY;\r\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\r\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\r\n      gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\r\n    }\r\n\r\n    function onTransitionEnd() {\r\n      const zoom = swiper.zoom;\r\n\r\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\r\n        if (gesture.$imageEl) {\r\n          gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\r\n        }\r\n\r\n        if (gesture.$imageWrapEl) {\r\n          gesture.$imageWrapEl.transform('translate3d(0,0,0)');\r\n        }\r\n\r\n        zoom.scale = 1;\r\n        currentScale = 1;\r\n        gesture.$slideEl = undefined;\r\n        gesture.$imageEl = undefined;\r\n        gesture.$imageWrapEl = undefined;\r\n      }\r\n    }\r\n\r\n    function zoomIn(e) {\r\n      const zoom = swiper.zoom;\r\n      const params = swiper.params.zoom;\r\n\r\n      if (!gesture.$slideEl) {\r\n        if (e && e.target) {\r\n          gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\r\n        }\r\n\r\n        if (!gesture.$slideEl) {\r\n          if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\r\n            gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\r\n          } else {\r\n            gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\r\n          }\r\n        }\r\n\r\n        gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\r\n        gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\r\n      }\r\n\r\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\r\n\r\n      if (swiper.params.cssMode) {\r\n        swiper.wrapperEl.style.overflow = 'hidden';\r\n        swiper.wrapperEl.style.touchAction = 'none';\r\n      }\r\n\r\n      gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\r\n      let touchX;\r\n      let touchY;\r\n      let offsetX;\r\n      let offsetY;\r\n      let diffX;\r\n      let diffY;\r\n      let translateX;\r\n      let translateY;\r\n      let imageWidth;\r\n      let imageHeight;\r\n      let scaledWidth;\r\n      let scaledHeight;\r\n      let translateMinX;\r\n      let translateMinY;\r\n      let translateMaxX;\r\n      let translateMaxY;\r\n      let slideWidth;\r\n      let slideHeight;\r\n\r\n      if (typeof image.touchesStart.x === 'undefined' && e) {\r\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\r\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\r\n      } else {\r\n        touchX = image.touchesStart.x;\r\n        touchY = image.touchesStart.y;\r\n      }\r\n\r\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n      currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n\r\n      if (e) {\r\n        slideWidth = gesture.$slideEl[0].offsetWidth;\r\n        slideHeight = gesture.$slideEl[0].offsetHeight;\r\n        offsetX = gesture.$slideEl.offset().left + window.scrollX;\r\n        offsetY = gesture.$slideEl.offset().top + window.scrollY;\r\n        diffX = offsetX + slideWidth / 2 - touchX;\r\n        diffY = offsetY + slideHeight / 2 - touchY;\r\n        imageWidth = gesture.$imageEl[0].offsetWidth;\r\n        imageHeight = gesture.$imageEl[0].offsetHeight;\r\n        scaledWidth = imageWidth * zoom.scale;\r\n        scaledHeight = imageHeight * zoom.scale;\r\n        translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\r\n        translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\r\n        translateMaxX = -translateMinX;\r\n        translateMaxY = -translateMinY;\r\n        translateX = diffX * zoom.scale;\r\n        translateY = diffY * zoom.scale;\r\n\r\n        if (translateX < translateMinX) {\r\n          translateX = translateMinX;\r\n        }\r\n\r\n        if (translateX > translateMaxX) {\r\n          translateX = translateMaxX;\r\n        }\r\n\r\n        if (translateY < translateMinY) {\r\n          translateY = translateMinY;\r\n        }\r\n\r\n        if (translateY > translateMaxY) {\r\n          translateY = translateMaxY;\r\n        }\r\n      } else {\r\n        translateX = 0;\r\n        translateY = 0;\r\n      }\r\n\r\n      gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\r\n      gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\r\n    }\r\n\r\n    function zoomOut() {\r\n      const zoom = swiper.zoom;\r\n      const params = swiper.params.zoom;\r\n\r\n      if (!gesture.$slideEl) {\r\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\r\n          gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\r\n        } else {\r\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\r\n        }\r\n\r\n        gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\r\n        gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\r\n      }\r\n\r\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\r\n\r\n      if (swiper.params.cssMode) {\r\n        swiper.wrapperEl.style.overflow = '';\r\n        swiper.wrapperEl.style.touchAction = '';\r\n      }\r\n\r\n      zoom.scale = 1;\r\n      currentScale = 1;\r\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\r\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\r\n      gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\r\n      gesture.$slideEl = undefined;\r\n    } // Toggle Zoom\r\n\r\n\r\n    function zoomToggle(e) {\r\n      const zoom = swiper.zoom;\r\n\r\n      if (zoom.scale && zoom.scale !== 1) {\r\n        // Zoom Out\r\n        zoomOut();\r\n      } else {\r\n        // Zoom In\r\n        zoomIn(e);\r\n      }\r\n    }\r\n\r\n    function getListeners() {\r\n      const support = swiper.support;\r\n      const passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\r\n        passive: true,\r\n        capture: false\r\n      } : false;\r\n      const activeListenerWithCapture = support.passiveListener ? {\r\n        passive: false,\r\n        capture: true\r\n      } : true;\r\n      return {\r\n        passiveListener,\r\n        activeListenerWithCapture\r\n      };\r\n    }\r\n\r\n    function getSlideSelector() {\r\n      return `.${swiper.params.slideClass}`;\r\n    }\r\n\r\n    function toggleGestures(method) {\r\n      const {\r\n        passiveListener\r\n      } = getListeners();\r\n      const slideSelector = getSlideSelector();\r\n      swiper.$wrapperEl[method]('gesturestart', slideSelector, onGestureStart, passiveListener);\r\n      swiper.$wrapperEl[method]('gesturechange', slideSelector, onGestureChange, passiveListener);\r\n      swiper.$wrapperEl[method]('gestureend', slideSelector, onGestureEnd, passiveListener);\r\n    }\r\n\r\n    function enableGestures() {\r\n      if (gesturesEnabled) return;\r\n      gesturesEnabled = true;\r\n      toggleGestures('on');\r\n    }\r\n\r\n    function disableGestures() {\r\n      if (!gesturesEnabled) return;\r\n      gesturesEnabled = false;\r\n      toggleGestures('off');\r\n    } // Attach/Detach Events\r\n\r\n\r\n    function enable() {\r\n      const zoom = swiper.zoom;\r\n      if (zoom.enabled) return;\r\n      zoom.enabled = true;\r\n      const support = swiper.support;\r\n      const {\r\n        passiveListener,\r\n        activeListenerWithCapture\r\n      } = getListeners();\r\n      const slideSelector = getSlideSelector(); // Scale image\r\n\r\n      if (support.gestures) {\r\n        swiper.$wrapperEl.on(swiper.touchEvents.start, enableGestures, passiveListener);\r\n        swiper.$wrapperEl.on(swiper.touchEvents.end, disableGestures, passiveListener);\r\n      } else if (swiper.touchEvents.start === 'touchstart') {\r\n        swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\r\n        swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\r\n        swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\r\n\r\n        if (swiper.touchEvents.cancel) {\r\n          swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\r\n        }\r\n      } // Move image\r\n\r\n\r\n      swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\r\n    }\r\n\r\n    function disable() {\r\n      const zoom = swiper.zoom;\r\n      if (!zoom.enabled) return;\r\n      const support = swiper.support;\r\n      zoom.enabled = false;\r\n      const {\r\n        passiveListener,\r\n        activeListenerWithCapture\r\n      } = getListeners();\r\n      const slideSelector = getSlideSelector(); // Scale image\r\n\r\n      if (support.gestures) {\r\n        swiper.$wrapperEl.off(swiper.touchEvents.start, enableGestures, passiveListener);\r\n        swiper.$wrapperEl.off(swiper.touchEvents.end, disableGestures, passiveListener);\r\n      } else if (swiper.touchEvents.start === 'touchstart') {\r\n        swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\r\n        swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\r\n        swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\r\n\r\n        if (swiper.touchEvents.cancel) {\r\n          swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\r\n        }\r\n      } // Move image\r\n\r\n\r\n      swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\r\n    }\r\n\r\n    on('init', () => {\r\n      if (swiper.params.zoom.enabled) {\r\n        enable();\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      disable();\r\n    });\r\n    on('touchStart', (_s, e) => {\r\n      if (!swiper.zoom.enabled) return;\r\n      onTouchStart(e);\r\n    });\r\n    on('touchEnd', (_s, e) => {\r\n      if (!swiper.zoom.enabled) return;\r\n      onTouchEnd();\r\n    });\r\n    on('doubleTap', (_s, e) => {\r\n      if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\r\n        zoomToggle(e);\r\n      }\r\n    });\r\n    on('transitionEnd', () => {\r\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\r\n        onTransitionEnd();\r\n      }\r\n    });\r\n    on('slideChange', () => {\r\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\r\n        onTransitionEnd();\r\n      }\r\n    });\r\n    Object.assign(swiper.zoom, {\r\n      enable,\r\n      disable,\r\n      in: zoomIn,\r\n      out: zoomOut,\r\n      toggle: zoomToggle\r\n    });\r\n  }\r\n\r\n  function Lazy(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    extendParams({\r\n      lazy: {\r\n        checkInView: false,\r\n        enabled: false,\r\n        loadPrevNext: false,\r\n        loadPrevNextAmount: 1,\r\n        loadOnTransitionStart: false,\r\n        scrollingElement: '',\r\n        elementClass: 'swiper-lazy',\r\n        loadingClass: 'swiper-lazy-loading',\r\n        loadedClass: 'swiper-lazy-loaded',\r\n        preloaderClass: 'swiper-lazy-preloader'\r\n      }\r\n    });\r\n    swiper.lazy = {};\r\n    let scrollHandlerAttached = false;\r\n    let initialImageLoaded = false;\r\n\r\n    function loadInSlide(index, loadInDuplicate) {\r\n      if (loadInDuplicate === void 0) {\r\n        loadInDuplicate = true;\r\n      }\r\n\r\n      const params = swiper.params.lazy;\r\n      if (typeof index === 'undefined') return;\r\n      if (swiper.slides.length === 0) return;\r\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n      const $slideEl = isVirtual ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`) : swiper.slides.eq(index);\r\n      const $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\r\n\r\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\r\n        $images.push($slideEl[0]);\r\n      }\r\n\r\n      if ($images.length === 0) return;\r\n      $images.each(imageEl => {\r\n        const $imageEl = $(imageEl);\r\n        $imageEl.addClass(params.loadingClass);\r\n        const background = $imageEl.attr('data-background');\r\n        const src = $imageEl.attr('data-src');\r\n        const srcset = $imageEl.attr('data-srcset');\r\n        const sizes = $imageEl.attr('data-sizes');\r\n        const $pictureEl = $imageEl.parent('picture');\r\n        swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, () => {\r\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;\r\n\r\n          if (background) {\r\n            $imageEl.css('background-image', `url(\"${background}\")`);\r\n            $imageEl.removeAttr('data-background');\r\n          } else {\r\n            if (srcset) {\r\n              $imageEl.attr('srcset', srcset);\r\n              $imageEl.removeAttr('data-srcset');\r\n            }\r\n\r\n            if (sizes) {\r\n              $imageEl.attr('sizes', sizes);\r\n              $imageEl.removeAttr('data-sizes');\r\n            }\r\n\r\n            if ($pictureEl.length) {\r\n              $pictureEl.children('source').each(sourceEl => {\r\n                const $source = $(sourceEl);\r\n\r\n                if ($source.attr('data-srcset')) {\r\n                  $source.attr('srcset', $source.attr('data-srcset'));\r\n                  $source.removeAttr('data-srcset');\r\n                }\r\n              });\r\n            }\r\n\r\n            if (src) {\r\n              $imageEl.attr('src', src);\r\n              $imageEl.removeAttr('data-src');\r\n            }\r\n          }\r\n\r\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\r\n          $slideEl.find(`.${params.preloaderClass}`).remove();\r\n\r\n          if (swiper.params.loop && loadInDuplicate) {\r\n            const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\r\n\r\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\r\n              const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\r\n              loadInSlide(originalSlide.index(), false);\r\n            } else {\r\n              const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\r\n              loadInSlide(duplicatedSlide.index(), false);\r\n            }\r\n          }\r\n\r\n          emit('lazyImageReady', $slideEl[0], $imageEl[0]);\r\n\r\n          if (swiper.params.autoHeight) {\r\n            swiper.updateAutoHeight();\r\n          }\r\n        });\r\n        emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\r\n      });\r\n    }\r\n\r\n    function load() {\r\n      const {\r\n        $wrapperEl,\r\n        params: swiperParams,\r\n        slides,\r\n        activeIndex\r\n      } = swiper;\r\n      const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\r\n      const params = swiperParams.lazy;\r\n      let slidesPerView = swiperParams.slidesPerView;\r\n\r\n      if (slidesPerView === 'auto') {\r\n        slidesPerView = 0;\r\n      }\r\n\r\n      function slideExist(index) {\r\n        if (isVirtual) {\r\n          if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\r\n            return true;\r\n          }\r\n        } else if (slides[index]) return true;\r\n\r\n        return false;\r\n      }\r\n\r\n      function slideIndex(slideEl) {\r\n        if (isVirtual) {\r\n          return $(slideEl).attr('data-swiper-slide-index');\r\n        }\r\n\r\n        return $(slideEl).index();\r\n      }\r\n\r\n      if (!initialImageLoaded) initialImageLoaded = true;\r\n\r\n      if (swiper.params.watchSlidesProgress) {\r\n        $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each(slideEl => {\r\n          const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\r\n          loadInSlide(index);\r\n        });\r\n      } else if (slidesPerView > 1) {\r\n        for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\r\n          if (slideExist(i)) loadInSlide(i);\r\n        }\r\n      } else {\r\n        loadInSlide(activeIndex);\r\n      }\r\n\r\n      if (params.loadPrevNext) {\r\n        if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\r\n          const amount = params.loadPrevNextAmount;\r\n          const spv = slidesPerView;\r\n          const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\r\n          const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\r\n\r\n          for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\r\n            if (slideExist(i)) loadInSlide(i);\r\n          } // Prev Slides\r\n\r\n\r\n          for (let i = minIndex; i < activeIndex; i += 1) {\r\n            if (slideExist(i)) loadInSlide(i);\r\n          }\r\n        } else {\r\n          const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\r\n          if (nextSlide.length > 0) loadInSlide(slideIndex(nextSlide));\r\n          const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\r\n          if (prevSlide.length > 0) loadInSlide(slideIndex(prevSlide));\r\n        }\r\n      }\r\n    }\r\n\r\n    function checkInViewOnLoad() {\r\n      const window = getWindow();\r\n      if (!swiper || swiper.destroyed) return;\r\n      const $scrollElement = swiper.params.lazy.scrollingElement ? $(swiper.params.lazy.scrollingElement) : $(window);\r\n      const isWindow = $scrollElement[0] === window;\r\n      const scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;\r\n      const scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;\r\n      const swiperOffset = swiper.$el.offset();\r\n      const {\r\n        rtlTranslate: rtl\r\n      } = swiper;\r\n      let inView = false;\r\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\r\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\r\n\r\n      for (let i = 0; i < swiperCoord.length; i += 1) {\r\n        const point = swiperCoord[i];\r\n\r\n        if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {\r\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\r\n\r\n          inView = true;\r\n        }\r\n      }\r\n\r\n      const passiveListener = swiper.touchEvents.start === 'touchstart' && swiper.support.passiveListener && swiper.params.passiveListeners ? {\r\n        passive: true,\r\n        capture: false\r\n      } : false;\r\n\r\n      if (inView) {\r\n        load();\r\n        $scrollElement.off('scroll', checkInViewOnLoad, passiveListener);\r\n      } else if (!scrollHandlerAttached) {\r\n        scrollHandlerAttached = true;\r\n        $scrollElement.on('scroll', checkInViewOnLoad, passiveListener);\r\n      }\r\n    }\r\n\r\n    on('beforeInit', () => {\r\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\r\n        swiper.params.preloadImages = false;\r\n      }\r\n    });\r\n    on('init', () => {\r\n      if (swiper.params.lazy.enabled) {\r\n        if (swiper.params.lazy.checkInView) {\r\n          checkInViewOnLoad();\r\n        } else {\r\n          load();\r\n        }\r\n      }\r\n    });\r\n    on('scroll', () => {\r\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.freeMode.sticky) {\r\n        load();\r\n      }\r\n    });\r\n    on('scrollbarDragMove resize _freeModeNoMomentumRelease', () => {\r\n      if (swiper.params.lazy.enabled) {\r\n        if (swiper.params.lazy.checkInView) {\r\n          checkInViewOnLoad();\r\n        } else {\r\n          load();\r\n        }\r\n      }\r\n    });\r\n    on('transitionStart', () => {\r\n      if (swiper.params.lazy.enabled) {\r\n        if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !initialImageLoaded) {\r\n          if (swiper.params.lazy.checkInView) {\r\n            checkInViewOnLoad();\r\n          } else {\r\n            load();\r\n          }\r\n        }\r\n      }\r\n    });\r\n    on('transitionEnd', () => {\r\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\r\n        if (swiper.params.lazy.checkInView) {\r\n          checkInViewOnLoad();\r\n        } else {\r\n          load();\r\n        }\r\n      }\r\n    });\r\n    on('slideChange', () => {\r\n      const {\r\n        lazy,\r\n        cssMode,\r\n        watchSlidesProgress,\r\n        touchReleaseOnEdges,\r\n        resistanceRatio\r\n      } = swiper.params;\r\n\r\n      if (lazy.enabled && (cssMode || watchSlidesProgress && (touchReleaseOnEdges || resistanceRatio === 0))) {\r\n        load();\r\n      }\r\n    });\r\n    Object.assign(swiper.lazy, {\r\n      load,\r\n      loadInSlide\r\n    });\r\n  }\r\n\r\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\r\n  function Controller(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      controller: {\r\n        control: undefined,\r\n        inverse: false,\r\n        by: 'slide' // or 'container'\r\n\r\n      }\r\n    });\r\n    swiper.controller = {\r\n      control: undefined\r\n    };\r\n\r\n    function LinearSpline(x, y) {\r\n      const binarySearch = function search() {\r\n        let maxIndex;\r\n        let minIndex;\r\n        let guess;\r\n        return (array, val) => {\r\n          minIndex = -1;\r\n          maxIndex = array.length;\r\n\r\n          while (maxIndex - minIndex > 1) {\r\n            guess = maxIndex + minIndex >> 1;\r\n\r\n            if (array[guess] <= val) {\r\n              minIndex = guess;\r\n            } else {\r\n              maxIndex = guess;\r\n            }\r\n          }\r\n\r\n          return maxIndex;\r\n        };\r\n      }();\r\n\r\n      this.x = x;\r\n      this.y = y;\r\n      this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\r\n      // (x1,y1) is the known point before given value,\r\n      // (x3,y3) is the known point after given value.\r\n\r\n      let i1;\r\n      let i3;\r\n\r\n      this.interpolate = function interpolate(x2) {\r\n        if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):\r\n\r\n        i3 = binarySearch(this.x, x2);\r\n        i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\r\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\r\n\r\n        return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\r\n      };\r\n\r\n      return this;\r\n    } // xxx: for now i will just save one spline function to to\r\n\r\n\r\n    function getInterpolateFunction(c) {\r\n      if (!swiper.controller.spline) {\r\n        swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\r\n      }\r\n    }\r\n\r\n    function setTranslate(_t, byController) {\r\n      const controlled = swiper.controller.control;\r\n      let multiplier;\r\n      let controlledTranslate;\r\n      const Swiper = swiper.constructor;\r\n\r\n      function setControlledTranslate(c) {\r\n        // this will create an Interpolate function based on the snapGrids\r\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\r\n        // it makes sense to create this only once and recall it for the interpolation\r\n        // the function does a lot of value caching for performance\r\n        const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\r\n\r\n        if (swiper.params.controller.by === 'slide') {\r\n          getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\r\n          // but it did not work out\r\n\r\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\r\n        }\r\n\r\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\r\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\r\n          controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\r\n        }\r\n\r\n        if (swiper.params.controller.inverse) {\r\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\r\n        }\r\n\r\n        c.updateProgress(controlledTranslate);\r\n        c.setTranslate(controlledTranslate, swiper);\r\n        c.updateActiveIndex();\r\n        c.updateSlidesClasses();\r\n      }\r\n\r\n      if (Array.isArray(controlled)) {\r\n        for (let i = 0; i < controlled.length; i += 1) {\r\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\r\n            setControlledTranslate(controlled[i]);\r\n          }\r\n        }\r\n      } else if (controlled instanceof Swiper && byController !== controlled) {\r\n        setControlledTranslate(controlled);\r\n      }\r\n    }\r\n\r\n    function setTransition(duration, byController) {\r\n      const Swiper = swiper.constructor;\r\n      const controlled = swiper.controller.control;\r\n      let i;\r\n\r\n      function setControlledTransition(c) {\r\n        c.setTransition(duration, swiper);\r\n\r\n        if (duration !== 0) {\r\n          c.transitionStart();\r\n\r\n          if (c.params.autoHeight) {\r\n            nextTick(() => {\r\n              c.updateAutoHeight();\r\n            });\r\n          }\r\n\r\n          c.$wrapperEl.transitionEnd(() => {\r\n            if (!controlled) return;\r\n\r\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\r\n              c.loopFix();\r\n            }\r\n\r\n            c.transitionEnd();\r\n          });\r\n        }\r\n      }\r\n\r\n      if (Array.isArray(controlled)) {\r\n        for (i = 0; i < controlled.length; i += 1) {\r\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\r\n            setControlledTransition(controlled[i]);\r\n          }\r\n        }\r\n      } else if (controlled instanceof Swiper && byController !== controlled) {\r\n        setControlledTransition(controlled);\r\n      }\r\n    }\r\n\r\n    function removeSpline() {\r\n      if (!swiper.controller.control) return;\r\n\r\n      if (swiper.controller.spline) {\r\n        swiper.controller.spline = undefined;\r\n        delete swiper.controller.spline;\r\n      }\r\n    }\r\n\r\n    on('beforeInit', () => {\r\n      swiper.controller.control = swiper.params.controller.control;\r\n    });\r\n    on('update', () => {\r\n      removeSpline();\r\n    });\r\n    on('resize', () => {\r\n      removeSpline();\r\n    });\r\n    on('observerUpdate', () => {\r\n      removeSpline();\r\n    });\r\n    on('setTranslate', (_s, translate, byController) => {\r\n      if (!swiper.controller.control) return;\r\n      swiper.controller.setTranslate(translate, byController);\r\n    });\r\n    on('setTransition', (_s, duration, byController) => {\r\n      if (!swiper.controller.control) return;\r\n      swiper.controller.setTransition(duration, byController);\r\n    });\r\n    Object.assign(swiper.controller, {\r\n      setTranslate,\r\n      setTransition\r\n    });\r\n  }\r\n\r\n  function A11y(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      a11y: {\r\n        enabled: true,\r\n        notificationClass: 'swiper-notification',\r\n        prevSlideMessage: 'Previous slide',\r\n        nextSlideMessage: 'Next slide',\r\n        firstSlideMessage: 'This is the first slide',\r\n        lastSlideMessage: 'This is the last slide',\r\n        paginationBulletMessage: 'Go to slide {{index}}',\r\n        slideLabelMessage: '{{index}} / {{slidesLength}}',\r\n        containerMessage: null,\r\n        containerRoleDescriptionMessage: null,\r\n        itemRoleDescriptionMessage: null,\r\n        slideRole: 'group'\r\n      }\r\n    });\r\n    let liveRegion = null;\r\n\r\n    function notify(message) {\r\n      const notification = liveRegion;\r\n      if (notification.length === 0) return;\r\n      notification.html('');\r\n      notification.html(message);\r\n    }\r\n\r\n    function getRandomNumber(size) {\r\n      if (size === void 0) {\r\n        size = 16;\r\n      }\r\n\r\n      const randomChar = () => Math.round(16 * Math.random()).toString(16);\r\n\r\n      return 'x'.repeat(size).replace(/x/g, randomChar);\r\n    }\r\n\r\n    function makeElFocusable($el) {\r\n      $el.attr('tabIndex', '0');\r\n    }\r\n\r\n    function makeElNotFocusable($el) {\r\n      $el.attr('tabIndex', '-1');\r\n    }\r\n\r\n    function addElRole($el, role) {\r\n      $el.attr('role', role);\r\n    }\r\n\r\n    function addElRoleDescription($el, description) {\r\n      $el.attr('aria-roledescription', description);\r\n    }\r\n\r\n    function addElControls($el, controls) {\r\n      $el.attr('aria-controls', controls);\r\n    }\r\n\r\n    function addElLabel($el, label) {\r\n      $el.attr('aria-label', label);\r\n    }\r\n\r\n    function addElId($el, id) {\r\n      $el.attr('id', id);\r\n    }\r\n\r\n    function addElLive($el, live) {\r\n      $el.attr('aria-live', live);\r\n    }\r\n\r\n    function disableEl($el) {\r\n      $el.attr('aria-disabled', true);\r\n    }\r\n\r\n    function enableEl($el) {\r\n      $el.attr('aria-disabled', false);\r\n    }\r\n\r\n    function onEnterOrSpaceKey(e) {\r\n      if (e.keyCode !== 13 && e.keyCode !== 32) return;\r\n      const params = swiper.params.a11y;\r\n      const $targetEl = $(e.target);\r\n\r\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\r\n        if (!(swiper.isEnd && !swiper.params.loop)) {\r\n          swiper.slideNext();\r\n        }\r\n\r\n        if (swiper.isEnd) {\r\n          notify(params.lastSlideMessage);\r\n        } else {\r\n          notify(params.nextSlideMessage);\r\n        }\r\n      }\r\n\r\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\r\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\r\n          swiper.slidePrev();\r\n        }\r\n\r\n        if (swiper.isBeginning) {\r\n          notify(params.firstSlideMessage);\r\n        } else {\r\n          notify(params.prevSlideMessage);\r\n        }\r\n      }\r\n\r\n      if (swiper.pagination && $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))) {\r\n        $targetEl[0].click();\r\n      }\r\n    }\r\n\r\n    function updateNavigation() {\r\n      if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\r\n      const {\r\n        $nextEl,\r\n        $prevEl\r\n      } = swiper.navigation;\r\n\r\n      if ($prevEl && $prevEl.length > 0) {\r\n        if (swiper.isBeginning) {\r\n          disableEl($prevEl);\r\n          makeElNotFocusable($prevEl);\r\n        } else {\r\n          enableEl($prevEl);\r\n          makeElFocusable($prevEl);\r\n        }\r\n      }\r\n\r\n      if ($nextEl && $nextEl.length > 0) {\r\n        if (swiper.isEnd) {\r\n          disableEl($nextEl);\r\n          makeElNotFocusable($nextEl);\r\n        } else {\r\n          enableEl($nextEl);\r\n          makeElFocusable($nextEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    function hasPagination() {\r\n      return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\r\n    }\r\n\r\n    function hasClickablePagination() {\r\n      return hasPagination() && swiper.params.pagination.clickable;\r\n    }\r\n\r\n    function updatePagination() {\r\n      const params = swiper.params.a11y;\r\n      if (!hasPagination()) return;\r\n      swiper.pagination.bullets.each(bulletEl => {\r\n        const $bulletEl = $(bulletEl);\r\n\r\n        if (swiper.params.pagination.clickable) {\r\n          makeElFocusable($bulletEl);\r\n\r\n          if (!swiper.params.pagination.renderBullet) {\r\n            addElRole($bulletEl, 'button');\r\n            addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\r\n          }\r\n        }\r\n\r\n        if ($bulletEl.is(`.${swiper.params.pagination.bulletActiveClass}`)) {\r\n          $bulletEl.attr('aria-current', 'true');\r\n        } else {\r\n          $bulletEl.removeAttr('aria-current');\r\n        }\r\n      });\r\n    }\r\n\r\n    const initNavEl = ($el, wrapperId, message) => {\r\n      makeElFocusable($el);\r\n\r\n      if ($el[0].tagName !== 'BUTTON') {\r\n        addElRole($el, 'button');\r\n        $el.on('keydown', onEnterOrSpaceKey);\r\n      }\r\n\r\n      addElLabel($el, message);\r\n      addElControls($el, wrapperId);\r\n    };\r\n\r\n    const handleFocus = e => {\r\n      const slideEl = e.target.closest(`.${swiper.params.slideClass}`);\r\n      if (!slideEl || !swiper.slides.includes(slideEl)) return;\r\n      const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\r\n      const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\r\n      if (isActive || isVisible) return;\r\n      swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\r\n    };\r\n\r\n    function init() {\r\n      const params = swiper.params.a11y;\r\n      swiper.$el.append(liveRegion); // Container\r\n\r\n      const $containerEl = swiper.$el;\r\n\r\n      if (params.containerRoleDescriptionMessage) {\r\n        addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\r\n      }\r\n\r\n      if (params.containerMessage) {\r\n        addElLabel($containerEl, params.containerMessage);\r\n      } // Wrapper\r\n\r\n\r\n      const $wrapperEl = swiper.$wrapperEl;\r\n      const wrapperId = $wrapperEl.attr('id') || `swiper-wrapper-${getRandomNumber(16)}`;\r\n      const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\r\n      addElId($wrapperEl, wrapperId);\r\n      addElLive($wrapperEl, live); // Slide\r\n\r\n      if (params.itemRoleDescriptionMessage) {\r\n        addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\r\n      }\r\n\r\n      addElRole($(swiper.slides), params.slideRole);\r\n      const slidesLength = swiper.params.loop ? swiper.slides.filter(el => !el.classList.contains(swiper.params.slideDuplicateClass)).length : swiper.slides.length;\r\n      swiper.slides.each((slideEl, index) => {\r\n        const $slideEl = $(slideEl);\r\n        const slideIndex = swiper.params.loop ? parseInt($slideEl.attr('data-swiper-slide-index'), 10) : index;\r\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\r\n        addElLabel($slideEl, ariaLabelMessage);\r\n      }); // Navigation\r\n\r\n      let $nextEl;\r\n      let $prevEl;\r\n\r\n      if (swiper.navigation && swiper.navigation.$nextEl) {\r\n        $nextEl = swiper.navigation.$nextEl;\r\n      }\r\n\r\n      if (swiper.navigation && swiper.navigation.$prevEl) {\r\n        $prevEl = swiper.navigation.$prevEl;\r\n      }\r\n\r\n      if ($nextEl && $nextEl.length) {\r\n        initNavEl($nextEl, wrapperId, params.nextSlideMessage);\r\n      }\r\n\r\n      if ($prevEl && $prevEl.length) {\r\n        initNavEl($prevEl, wrapperId, params.prevSlideMessage);\r\n      } // Pagination\r\n\r\n\r\n      if (hasClickablePagination()) {\r\n        swiper.pagination.$el.on('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\r\n      } // Tab focus\r\n\r\n\r\n      swiper.$el.on('focus', handleFocus, true);\r\n    }\r\n\r\n    function destroy() {\r\n      if (liveRegion && liveRegion.length > 0) liveRegion.remove();\r\n      let $nextEl;\r\n      let $prevEl;\r\n\r\n      if (swiper.navigation && swiper.navigation.$nextEl) {\r\n        $nextEl = swiper.navigation.$nextEl;\r\n      }\r\n\r\n      if (swiper.navigation && swiper.navigation.$prevEl) {\r\n        $prevEl = swiper.navigation.$prevEl;\r\n      }\r\n\r\n      if ($nextEl) {\r\n        $nextEl.off('keydown', onEnterOrSpaceKey);\r\n      }\r\n\r\n      if ($prevEl) {\r\n        $prevEl.off('keydown', onEnterOrSpaceKey);\r\n      } // Pagination\r\n\r\n\r\n      if (hasClickablePagination()) {\r\n        swiper.pagination.$el.off('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\r\n      } // Tab focus\r\n\r\n\r\n      swiper.$el.off('focus', handleFocus, true);\r\n    }\r\n\r\n    on('beforeInit', () => {\r\n      liveRegion = $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`);\r\n    });\r\n    on('afterInit', () => {\r\n      if (!swiper.params.a11y.enabled) return;\r\n      init();\r\n    });\r\n    on('fromEdge toEdge afterInit lock unlock', () => {\r\n      if (!swiper.params.a11y.enabled) return;\r\n      updateNavigation();\r\n    });\r\n    on('paginationUpdate', () => {\r\n      if (!swiper.params.a11y.enabled) return;\r\n      updatePagination();\r\n    });\r\n    on('destroy', () => {\r\n      if (!swiper.params.a11y.enabled) return;\r\n      destroy();\r\n    });\r\n  }\r\n\r\n  function History(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      history: {\r\n        enabled: false,\r\n        root: '',\r\n        replaceState: false,\r\n        key: 'slides'\r\n      }\r\n    });\r\n    let initialized = false;\r\n    let paths = {};\r\n\r\n    const slugify = text => {\r\n      return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\r\n    };\r\n\r\n    const getPathValues = urlOverride => {\r\n      const window = getWindow();\r\n      let location;\r\n\r\n      if (urlOverride) {\r\n        location = new URL(urlOverride);\r\n      } else {\r\n        location = window.location;\r\n      }\r\n\r\n      const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\r\n      const total = pathArray.length;\r\n      const key = pathArray[total - 2];\r\n      const value = pathArray[total - 1];\r\n      return {\r\n        key,\r\n        value\r\n      };\r\n    };\r\n\r\n    const setHistory = (key, index) => {\r\n      const window = getWindow();\r\n      if (!initialized || !swiper.params.history.enabled) return;\r\n      let location;\r\n\r\n      if (swiper.params.url) {\r\n        location = new URL(swiper.params.url);\r\n      } else {\r\n        location = window.location;\r\n      }\r\n\r\n      const slide = swiper.slides.eq(index);\r\n      let value = slugify(slide.attr('data-history'));\r\n\r\n      if (swiper.params.history.root.length > 0) {\r\n        let root = swiper.params.history.root;\r\n        if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\r\n        value = `${root}/${key}/${value}`;\r\n      } else if (!location.pathname.includes(key)) {\r\n        value = `${key}/${value}`;\r\n      }\r\n\r\n      const currentState = window.history.state;\r\n\r\n      if (currentState && currentState.value === value) {\r\n        return;\r\n      }\r\n\r\n      if (swiper.params.history.replaceState) {\r\n        window.history.replaceState({\r\n          value\r\n        }, null, value);\r\n      } else {\r\n        window.history.pushState({\r\n          value\r\n        }, null, value);\r\n      }\r\n    };\r\n\r\n    const scrollToSlide = (speed, value, runCallbacks) => {\r\n      if (value) {\r\n        for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\r\n          const slide = swiper.slides.eq(i);\r\n          const slideHistory = slugify(slide.attr('data-history'));\r\n\r\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\r\n            const index = slide.index();\r\n            swiper.slideTo(index, speed, runCallbacks);\r\n          }\r\n        }\r\n      } else {\r\n        swiper.slideTo(0, speed, runCallbacks);\r\n      }\r\n    };\r\n\r\n    const setHistoryPopState = () => {\r\n      paths = getPathValues(swiper.params.url);\r\n      scrollToSlide(swiper.params.speed, swiper.paths.value, false);\r\n    };\r\n\r\n    const init = () => {\r\n      const window = getWindow();\r\n      if (!swiper.params.history) return;\r\n\r\n      if (!window.history || !window.history.pushState) {\r\n        swiper.params.history.enabled = false;\r\n        swiper.params.hashNavigation.enabled = true;\r\n        return;\r\n      }\r\n\r\n      initialized = true;\r\n      paths = getPathValues(swiper.params.url);\r\n      if (!paths.key && !paths.value) return;\r\n      scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\r\n\r\n      if (!swiper.params.history.replaceState) {\r\n        window.addEventListener('popstate', setHistoryPopState);\r\n      }\r\n    };\r\n\r\n    const destroy = () => {\r\n      const window = getWindow();\r\n\r\n      if (!swiper.params.history.replaceState) {\r\n        window.removeEventListener('popstate', setHistoryPopState);\r\n      }\r\n    };\r\n\r\n    on('init', () => {\r\n      if (swiper.params.history.enabled) {\r\n        init();\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      if (swiper.params.history.enabled) {\r\n        destroy();\r\n      }\r\n    });\r\n    on('transitionEnd _freeModeNoMomentumRelease', () => {\r\n      if (initialized) {\r\n        setHistory(swiper.params.history.key, swiper.activeIndex);\r\n      }\r\n    });\r\n    on('slideChange', () => {\r\n      if (initialized && swiper.params.cssMode) {\r\n        setHistory(swiper.params.history.key, swiper.activeIndex);\r\n      }\r\n    });\r\n  }\r\n\r\n  function HashNavigation(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      emit,\r\n      on\r\n    } = _ref;\r\n    let initialized = false;\r\n    const document = getDocument();\r\n    const window = getWindow();\r\n    extendParams({\r\n      hashNavigation: {\r\n        enabled: false,\r\n        replaceState: false,\r\n        watchState: false\r\n      }\r\n    });\r\n\r\n    const onHashChange = () => {\r\n      emit('hashChange');\r\n      const newHash = document.location.hash.replace('#', '');\r\n      const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\r\n\r\n      if (newHash !== activeSlideHash) {\r\n        const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\r\n        if (typeof newIndex === 'undefined') return;\r\n        swiper.slideTo(newIndex);\r\n      }\r\n    };\r\n\r\n    const setHash = () => {\r\n      if (!initialized || !swiper.params.hashNavigation.enabled) return;\r\n\r\n      if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\r\n        window.history.replaceState(null, null, `#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || '');\r\n        emit('hashSet');\r\n      } else {\r\n        const slide = swiper.slides.eq(swiper.activeIndex);\r\n        const hash = slide.attr('data-hash') || slide.attr('data-history');\r\n        document.location.hash = hash || '';\r\n        emit('hashSet');\r\n      }\r\n    };\r\n\r\n    const init = () => {\r\n      if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\r\n      initialized = true;\r\n      const hash = document.location.hash.replace('#', '');\r\n\r\n      if (hash) {\r\n        const speed = 0;\r\n\r\n        for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\r\n          const slide = swiper.slides.eq(i);\r\n          const slideHash = slide.attr('data-hash') || slide.attr('data-history');\r\n\r\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\r\n            const index = slide.index();\r\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (swiper.params.hashNavigation.watchState) {\r\n        $(window).on('hashchange', onHashChange);\r\n      }\r\n    };\r\n\r\n    const destroy = () => {\r\n      if (swiper.params.hashNavigation.watchState) {\r\n        $(window).off('hashchange', onHashChange);\r\n      }\r\n    };\r\n\r\n    on('init', () => {\r\n      if (swiper.params.hashNavigation.enabled) {\r\n        init();\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      if (swiper.params.hashNavigation.enabled) {\r\n        destroy();\r\n      }\r\n    });\r\n    on('transitionEnd _freeModeNoMomentumRelease', () => {\r\n      if (initialized) {\r\n        setHash();\r\n      }\r\n    });\r\n    on('slideChange', () => {\r\n      if (initialized && swiper.params.cssMode) {\r\n        setHash();\r\n      }\r\n    });\r\n  }\r\n\r\n  /* eslint no-underscore-dangle: \"off\" */\r\n  function Autoplay(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    let timeout;\r\n    swiper.autoplay = {\r\n      running: false,\r\n      paused: false\r\n    };\r\n    extendParams({\r\n      autoplay: {\r\n        enabled: false,\r\n        delay: 3000,\r\n        waitForTransition: true,\r\n        disableOnInteraction: true,\r\n        stopOnLastSlide: false,\r\n        reverseDirection: false,\r\n        pauseOnMouseEnter: false\r\n      }\r\n    });\r\n\r\n    function run() {\r\n      const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\r\n      let delay = swiper.params.autoplay.delay;\r\n\r\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\r\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\r\n      }\r\n\r\n      clearTimeout(timeout);\r\n      timeout = nextTick(() => {\r\n        let autoplayResult;\r\n\r\n        if (swiper.params.autoplay.reverseDirection) {\r\n          if (swiper.params.loop) {\r\n            swiper.loopFix();\r\n            autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\r\n            emit('autoplay');\r\n          } else if (!swiper.isBeginning) {\r\n            autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\r\n            emit('autoplay');\r\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n            autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\r\n            emit('autoplay');\r\n          } else {\r\n            stop();\r\n          }\r\n        } else if (swiper.params.loop) {\r\n          swiper.loopFix();\r\n          autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\r\n          emit('autoplay');\r\n        } else if (!swiper.isEnd) {\r\n          autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\r\n          emit('autoplay');\r\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n          autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\r\n          emit('autoplay');\r\n        } else {\r\n          stop();\r\n        }\r\n\r\n        if (swiper.params.cssMode && swiper.autoplay.running) run();else if (autoplayResult === false) {\r\n          run();\r\n        }\r\n      }, delay);\r\n    }\r\n\r\n    function start() {\r\n      if (typeof timeout !== 'undefined') return false;\r\n      if (swiper.autoplay.running) return false;\r\n      swiper.autoplay.running = true;\r\n      emit('autoplayStart');\r\n      run();\r\n      return true;\r\n    }\r\n\r\n    function stop() {\r\n      if (!swiper.autoplay.running) return false;\r\n      if (typeof timeout === 'undefined') return false;\r\n\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n        timeout = undefined;\r\n      }\r\n\r\n      swiper.autoplay.running = false;\r\n      emit('autoplayStop');\r\n      return true;\r\n    }\r\n\r\n    function pause(speed) {\r\n      if (!swiper.autoplay.running) return;\r\n      if (swiper.autoplay.paused) return;\r\n      if (timeout) clearTimeout(timeout);\r\n      swiper.autoplay.paused = true;\r\n\r\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\r\n        swiper.autoplay.paused = false;\r\n        run();\r\n      } else {\r\n        ['transitionend', 'webkitTransitionEnd'].forEach(event => {\r\n          swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd);\r\n        });\r\n      }\r\n    }\r\n\r\n    function onVisibilityChange() {\r\n      const document = getDocument();\r\n\r\n      if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\r\n        pause();\r\n      }\r\n\r\n      if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\r\n        run();\r\n        swiper.autoplay.paused = false;\r\n      }\r\n    }\r\n\r\n    function onTransitionEnd(e) {\r\n      if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\r\n      if (e.target !== swiper.$wrapperEl[0]) return;\r\n      ['transitionend', 'webkitTransitionEnd'].forEach(event => {\r\n        swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\r\n      });\r\n      swiper.autoplay.paused = false;\r\n\r\n      if (!swiper.autoplay.running) {\r\n        stop();\r\n      } else {\r\n        run();\r\n      }\r\n    }\r\n\r\n    function onMouseEnter() {\r\n      if (swiper.params.autoplay.disableOnInteraction) {\r\n        stop();\r\n      } else {\r\n        emit('autoplayPause');\r\n        pause();\r\n      }\r\n\r\n      ['transitionend', 'webkitTransitionEnd'].forEach(event => {\r\n        swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\r\n      });\r\n    }\r\n\r\n    function onMouseLeave() {\r\n      if (swiper.params.autoplay.disableOnInteraction) {\r\n        return;\r\n      }\r\n\r\n      swiper.autoplay.paused = false;\r\n      emit('autoplayResume');\r\n      run();\r\n    }\r\n\r\n    function attachMouseEvents() {\r\n      if (swiper.params.autoplay.pauseOnMouseEnter) {\r\n        swiper.$el.on('mouseenter', onMouseEnter);\r\n        swiper.$el.on('mouseleave', onMouseLeave);\r\n      }\r\n    }\r\n\r\n    function detachMouseEvents() {\r\n      swiper.$el.off('mouseenter', onMouseEnter);\r\n      swiper.$el.off('mouseleave', onMouseLeave);\r\n    }\r\n\r\n    on('init', () => {\r\n      if (swiper.params.autoplay.enabled) {\r\n        start();\r\n        const document = getDocument();\r\n        document.addEventListener('visibilitychange', onVisibilityChange);\r\n        attachMouseEvents();\r\n      }\r\n    });\r\n    on('beforeTransitionStart', (_s, speed, internal) => {\r\n      if (swiper.autoplay.running) {\r\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\r\n          swiper.autoplay.pause(speed);\r\n        } else {\r\n          stop();\r\n        }\r\n      }\r\n    });\r\n    on('sliderFirstMove', () => {\r\n      if (swiper.autoplay.running) {\r\n        if (swiper.params.autoplay.disableOnInteraction) {\r\n          stop();\r\n        } else {\r\n          pause();\r\n        }\r\n      }\r\n    });\r\n    on('touchEnd', () => {\r\n      if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\r\n        run();\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      detachMouseEvents();\r\n\r\n      if (swiper.autoplay.running) {\r\n        stop();\r\n      }\r\n\r\n      const document = getDocument();\r\n      document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    });\r\n    Object.assign(swiper.autoplay, {\r\n      pause,\r\n      run,\r\n      start,\r\n      stop\r\n    });\r\n  }\r\n\r\n  function Thumb(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      thumbs: {\r\n        swiper: null,\r\n        multipleActiveThumbs: true,\r\n        autoScrollOffset: 0,\r\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\r\n        thumbsContainerClass: 'swiper-thumbs'\r\n      }\r\n    });\r\n    let initialized = false;\r\n    let swiperCreated = false;\r\n    swiper.thumbs = {\r\n      swiper: null\r\n    };\r\n\r\n    function onThumbClick() {\r\n      const thumbsSwiper = swiper.thumbs.swiper;\r\n      if (!thumbsSwiper) return;\r\n      const clickedIndex = thumbsSwiper.clickedIndex;\r\n      const clickedSlide = thumbsSwiper.clickedSlide;\r\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\r\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\r\n      let slideToIndex;\r\n\r\n      if (thumbsSwiper.params.loop) {\r\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\r\n      } else {\r\n        slideToIndex = clickedIndex;\r\n      }\r\n\r\n      if (swiper.params.loop) {\r\n        let currentIndex = swiper.activeIndex;\r\n\r\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\r\n          swiper.loopFix(); // eslint-disable-next-line\r\n\r\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n          currentIndex = swiper.activeIndex;\r\n        }\r\n\r\n        const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\r\n        const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\r\n        if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;else slideToIndex = prevIndex;\r\n      }\r\n\r\n      swiper.slideTo(slideToIndex);\r\n    }\r\n\r\n    function init() {\r\n      const {\r\n        thumbs: thumbsParams\r\n      } = swiper.params;\r\n      if (initialized) return false;\r\n      initialized = true;\r\n      const SwiperClass = swiper.constructor;\r\n\r\n      if (thumbsParams.swiper instanceof SwiperClass) {\r\n        swiper.thumbs.swiper = thumbsParams.swiper;\r\n        Object.assign(swiper.thumbs.swiper.originalParams, {\r\n          watchSlidesProgress: true,\r\n          slideToClickedSlide: false\r\n        });\r\n        Object.assign(swiper.thumbs.swiper.params, {\r\n          watchSlidesProgress: true,\r\n          slideToClickedSlide: false\r\n        });\r\n      } else if (isObject(thumbsParams.swiper)) {\r\n        const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\r\n        Object.assign(thumbsSwiperParams, {\r\n          watchSlidesProgress: true,\r\n          slideToClickedSlide: false\r\n        });\r\n        swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\r\n        swiperCreated = true;\r\n      }\r\n\r\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\r\n      swiper.thumbs.swiper.on('tap', onThumbClick);\r\n      return true;\r\n    }\r\n\r\n    function update(initial) {\r\n      const thumbsSwiper = swiper.thumbs.swiper;\r\n      if (!thumbsSwiper) return;\r\n      const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\r\n      const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\r\n      const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\r\n\r\n      if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\r\n        let currentThumbsIndex = thumbsSwiper.activeIndex;\r\n        let newThumbsIndex;\r\n        let direction;\r\n\r\n        if (thumbsSwiper.params.loop) {\r\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\r\n            thumbsSwiper.loopFix(); // eslint-disable-next-line\r\n\r\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\r\n            currentThumbsIndex = thumbsSwiper.activeIndex;\r\n          } // Find actual thumbs index to slide to\r\n\r\n\r\n          const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\r\n          const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\r\n\r\n          if (typeof prevThumbsIndex === 'undefined') {\r\n            newThumbsIndex = nextThumbsIndex;\r\n          } else if (typeof nextThumbsIndex === 'undefined') {\r\n            newThumbsIndex = prevThumbsIndex;\r\n          } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\r\n            newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;\r\n          } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\r\n            newThumbsIndex = nextThumbsIndex;\r\n          } else {\r\n            newThumbsIndex = prevThumbsIndex;\r\n          }\r\n\r\n          direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\r\n        } else {\r\n          newThumbsIndex = swiper.realIndex;\r\n          direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\r\n        }\r\n\r\n        if (useOffset) {\r\n          newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\r\n        }\r\n\r\n        if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\r\n          if (thumbsSwiper.params.centeredSlides) {\r\n            if (newThumbsIndex > currentThumbsIndex) {\r\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\r\n            } else {\r\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\r\n            }\r\n          } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) ;\r\n\r\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\r\n        }\r\n      } // Activate thumbs\r\n\r\n\r\n      let thumbsToActivate = 1;\r\n      const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\r\n\r\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\r\n        thumbsToActivate = swiper.params.slidesPerView;\r\n      }\r\n\r\n      if (!swiper.params.thumbs.multipleActiveThumbs) {\r\n        thumbsToActivate = 1;\r\n      }\r\n\r\n      thumbsToActivate = Math.floor(thumbsToActivate);\r\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\r\n\r\n      if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\r\n        for (let i = 0; i < thumbsToActivate; i += 1) {\r\n          thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\r\n        }\r\n      } else {\r\n        for (let i = 0; i < thumbsToActivate; i += 1) {\r\n          thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\r\n        }\r\n      }\r\n    }\r\n\r\n    on('beforeInit', () => {\r\n      const {\r\n        thumbs\r\n      } = swiper.params;\r\n      if (!thumbs || !thumbs.swiper) return;\r\n      init();\r\n      update(true);\r\n    });\r\n    on('slideChange update resize observerUpdate', () => {\r\n      if (!swiper.thumbs.swiper) return;\r\n      update();\r\n    });\r\n    on('setTransition', (_s, duration) => {\r\n      const thumbsSwiper = swiper.thumbs.swiper;\r\n      if (!thumbsSwiper) return;\r\n      thumbsSwiper.setTransition(duration);\r\n    });\r\n    on('beforeDestroy', () => {\r\n      const thumbsSwiper = swiper.thumbs.swiper;\r\n      if (!thumbsSwiper) return;\r\n\r\n      if (swiperCreated && thumbsSwiper) {\r\n        thumbsSwiper.destroy();\r\n      }\r\n    });\r\n    Object.assign(swiper.thumbs, {\r\n      init,\r\n      update\r\n    });\r\n  }\r\n\r\n  function freeMode(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      emit,\r\n      once\r\n    } = _ref;\r\n    extendParams({\r\n      freeMode: {\r\n        enabled: false,\r\n        momentum: true,\r\n        momentumRatio: 1,\r\n        momentumBounce: true,\r\n        momentumBounceRatio: 1,\r\n        momentumVelocityRatio: 1,\r\n        sticky: false,\r\n        minimumVelocity: 0.02\r\n      }\r\n    });\r\n\r\n    function onTouchStart() {\r\n      const translate = swiper.getTranslate();\r\n      swiper.setTranslate(translate);\r\n      swiper.setTransition(0);\r\n      swiper.touchEventsData.velocities.length = 0;\r\n      swiper.freeMode.onTouchEnd({\r\n        currentPos: swiper.rtl ? swiper.translate : -swiper.translate\r\n      });\r\n    }\r\n\r\n    function onTouchMove() {\r\n      const {\r\n        touchEventsData: data,\r\n        touches\r\n      } = swiper; // Velocity\r\n\r\n      if (data.velocities.length === 0) {\r\n        data.velocities.push({\r\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\r\n          time: data.touchStartTime\r\n        });\r\n      }\r\n\r\n      data.velocities.push({\r\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\r\n        time: now()\r\n      });\r\n    }\r\n\r\n    function onTouchEnd(_ref2) {\r\n      let {\r\n        currentPos\r\n      } = _ref2;\r\n      const {\r\n        params,\r\n        $wrapperEl,\r\n        rtlTranslate: rtl,\r\n        snapGrid,\r\n        touchEventsData: data\r\n      } = swiper; // Time diff\r\n\r\n      const touchEndTime = now();\r\n      const timeDiff = touchEndTime - data.touchStartTime;\r\n\r\n      if (currentPos < -swiper.minTranslate()) {\r\n        swiper.slideTo(swiper.activeIndex);\r\n        return;\r\n      }\r\n\r\n      if (currentPos > -swiper.maxTranslate()) {\r\n        if (swiper.slides.length < snapGrid.length) {\r\n          swiper.slideTo(snapGrid.length - 1);\r\n        } else {\r\n          swiper.slideTo(swiper.slides.length - 1);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if (params.freeMode.momentum) {\r\n        if (data.velocities.length > 1) {\r\n          const lastMoveEvent = data.velocities.pop();\r\n          const velocityEvent = data.velocities.pop();\r\n          const distance = lastMoveEvent.position - velocityEvent.position;\r\n          const time = lastMoveEvent.time - velocityEvent.time;\r\n          swiper.velocity = distance / time;\r\n          swiper.velocity /= 2;\r\n\r\n          if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\r\n            swiper.velocity = 0;\r\n          } // this implies that the user stopped moving a finger then released.\r\n          // There would be no events with distance zero, so the last event is stale.\r\n\r\n\r\n          if (time > 150 || now() - lastMoveEvent.time > 300) {\r\n            swiper.velocity = 0;\r\n          }\r\n        } else {\r\n          swiper.velocity = 0;\r\n        }\r\n\r\n        swiper.velocity *= params.freeMode.momentumVelocityRatio;\r\n        data.velocities.length = 0;\r\n        let momentumDuration = 1000 * params.freeMode.momentumRatio;\r\n        const momentumDistance = swiper.velocity * momentumDuration;\r\n        let newPosition = swiper.translate + momentumDistance;\r\n        if (rtl) newPosition = -newPosition;\r\n        let doBounce = false;\r\n        let afterBouncePosition;\r\n        const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\r\n        let needsLoopFix;\r\n\r\n        if (newPosition < swiper.maxTranslate()) {\r\n          if (params.freeMode.momentumBounce) {\r\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\r\n              newPosition = swiper.maxTranslate() - bounceAmount;\r\n            }\r\n\r\n            afterBouncePosition = swiper.maxTranslate();\r\n            doBounce = true;\r\n            data.allowMomentumBounce = true;\r\n          } else {\r\n            newPosition = swiper.maxTranslate();\r\n          }\r\n\r\n          if (params.loop && params.centeredSlides) needsLoopFix = true;\r\n        } else if (newPosition > swiper.minTranslate()) {\r\n          if (params.freeMode.momentumBounce) {\r\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\r\n              newPosition = swiper.minTranslate() + bounceAmount;\r\n            }\r\n\r\n            afterBouncePosition = swiper.minTranslate();\r\n            doBounce = true;\r\n            data.allowMomentumBounce = true;\r\n          } else {\r\n            newPosition = swiper.minTranslate();\r\n          }\r\n\r\n          if (params.loop && params.centeredSlides) needsLoopFix = true;\r\n        } else if (params.freeMode.sticky) {\r\n          let nextSlide;\r\n\r\n          for (let j = 0; j < snapGrid.length; j += 1) {\r\n            if (snapGrid[j] > -newPosition) {\r\n              nextSlide = j;\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\r\n            newPosition = snapGrid[nextSlide];\r\n          } else {\r\n            newPosition = snapGrid[nextSlide - 1];\r\n          }\r\n\r\n          newPosition = -newPosition;\r\n        }\r\n\r\n        if (needsLoopFix) {\r\n          once('transitionEnd', () => {\r\n            swiper.loopFix();\r\n          });\r\n        } // Fix duration\r\n\r\n\r\n        if (swiper.velocity !== 0) {\r\n          if (rtl) {\r\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\r\n          } else {\r\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\r\n          }\r\n\r\n          if (params.freeMode.sticky) {\r\n            // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\r\n            // event, then durations can be 20+ seconds to slide one (or zero!) slides.\r\n            // It's easy to see this when simulating touch with mouse events. To fix this,\r\n            // limit single-slide swipes to the default slide duration. This also has the\r\n            // nice side effect of matching slide speed if the user stopped moving before\r\n            // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\r\n            // For faster swipes, also apply limits (albeit higher ones).\r\n            const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\r\n            const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\r\n\r\n            if (moveDistance < currentSlideSize) {\r\n              momentumDuration = params.speed;\r\n            } else if (moveDistance < 2 * currentSlideSize) {\r\n              momentumDuration = params.speed * 1.5;\r\n            } else {\r\n              momentumDuration = params.speed * 2.5;\r\n            }\r\n          }\r\n        } else if (params.freeMode.sticky) {\r\n          swiper.slideToClosest();\r\n          return;\r\n        }\r\n\r\n        if (params.freeMode.momentumBounce && doBounce) {\r\n          swiper.updateProgress(afterBouncePosition);\r\n          swiper.setTransition(momentumDuration);\r\n          swiper.setTranslate(newPosition);\r\n          swiper.transitionStart(true, swiper.swipeDirection);\r\n          swiper.animating = true;\r\n          $wrapperEl.transitionEnd(() => {\r\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\r\n            emit('momentumBounce');\r\n            swiper.setTransition(params.speed);\r\n            setTimeout(() => {\r\n              swiper.setTranslate(afterBouncePosition);\r\n              $wrapperEl.transitionEnd(() => {\r\n                if (!swiper || swiper.destroyed) return;\r\n                swiper.transitionEnd();\r\n              });\r\n            }, 0);\r\n          });\r\n        } else if (swiper.velocity) {\r\n          emit('_freeModeNoMomentumRelease');\r\n          swiper.updateProgress(newPosition);\r\n          swiper.setTransition(momentumDuration);\r\n          swiper.setTranslate(newPosition);\r\n          swiper.transitionStart(true, swiper.swipeDirection);\r\n\r\n          if (!swiper.animating) {\r\n            swiper.animating = true;\r\n            $wrapperEl.transitionEnd(() => {\r\n              if (!swiper || swiper.destroyed) return;\r\n              swiper.transitionEnd();\r\n            });\r\n          }\r\n        } else {\r\n          swiper.updateProgress(newPosition);\r\n        }\r\n\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n      } else if (params.freeMode.sticky) {\r\n        swiper.slideToClosest();\r\n        return;\r\n      } else if (params.freeMode) {\r\n        emit('_freeModeNoMomentumRelease');\r\n      }\r\n\r\n      if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\r\n        swiper.updateProgress();\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n      }\r\n    }\r\n\r\n    Object.assign(swiper, {\r\n      freeMode: {\r\n        onTouchStart,\r\n        onTouchMove,\r\n        onTouchEnd\r\n      }\r\n    });\r\n  }\r\n\r\n  function Grid(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams\r\n    } = _ref;\r\n    extendParams({\r\n      grid: {\r\n        rows: 1,\r\n        fill: 'column'\r\n      }\r\n    });\r\n    let slidesNumberEvenToRows;\r\n    let slidesPerRow;\r\n    let numFullColumns;\r\n\r\n    const initSlides = slidesLength => {\r\n      const {\r\n        slidesPerView\r\n      } = swiper.params;\r\n      const {\r\n        rows,\r\n        fill\r\n      } = swiper.params.grid;\r\n      slidesPerRow = slidesNumberEvenToRows / rows;\r\n      numFullColumns = Math.floor(slidesLength / rows);\r\n\r\n      if (Math.floor(slidesLength / rows) === slidesLength / rows) {\r\n        slidesNumberEvenToRows = slidesLength;\r\n      } else {\r\n        slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\r\n      }\r\n\r\n      if (slidesPerView !== 'auto' && fill === 'row') {\r\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\r\n      }\r\n    };\r\n\r\n    const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\r\n      const {\r\n        slidesPerGroup,\r\n        spaceBetween\r\n      } = swiper.params;\r\n      const {\r\n        rows,\r\n        fill\r\n      } = swiper.params.grid; // Set slides order\r\n\r\n      let newSlideOrderIndex;\r\n      let column;\r\n      let row;\r\n\r\n      if (fill === 'row' && slidesPerGroup > 1) {\r\n        const groupIndex = Math.floor(i / (slidesPerGroup * rows));\r\n        const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\r\n        const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\r\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\r\n        column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\r\n        newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\r\n        slide.css({\r\n          '-webkit-order': newSlideOrderIndex,\r\n          order: newSlideOrderIndex\r\n        });\r\n      } else if (fill === 'column') {\r\n        column = Math.floor(i / rows);\r\n        row = i - column * rows;\r\n\r\n        if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\r\n          row += 1;\r\n\r\n          if (row >= rows) {\r\n            row = 0;\r\n            column += 1;\r\n          }\r\n        }\r\n      } else {\r\n        row = Math.floor(i / slidesPerRow);\r\n        column = i - row * slidesPerRow;\r\n      }\r\n\r\n      slide.css(getDirectionLabel('margin-top'), row !== 0 ? spaceBetween && `${spaceBetween}px` : '');\r\n    };\r\n\r\n    const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\r\n      const {\r\n        spaceBetween,\r\n        centeredSlides,\r\n        roundLengths\r\n      } = swiper.params;\r\n      const {\r\n        rows\r\n      } = swiper.params.grid;\r\n      swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\r\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\r\n      swiper.$wrapperEl.css({\r\n        [getDirectionLabel('width')]: `${swiper.virtualSize + spaceBetween}px`\r\n      });\r\n\r\n      if (centeredSlides) {\r\n        snapGrid.splice(0, snapGrid.length);\r\n        const newSlidesGrid = [];\r\n\r\n        for (let i = 0; i < snapGrid.length; i += 1) {\r\n          let slidesGridItem = snapGrid[i];\r\n          if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\r\n          if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\r\n        }\r\n\r\n        snapGrid.push(...newSlidesGrid);\r\n      }\r\n    };\r\n\r\n    swiper.grid = {\r\n      initSlides,\r\n      updateSlide,\r\n      updateWrapperSize\r\n    };\r\n  }\r\n\r\n  function appendSlide(slides) {\r\n    const swiper = this;\r\n    const {\r\n      $wrapperEl,\r\n      params\r\n    } = swiper;\r\n\r\n    if (params.loop) {\r\n      swiper.loopDestroy();\r\n    }\r\n\r\n    if (typeof slides === 'object' && 'length' in slides) {\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        if (slides[i]) $wrapperEl.append(slides[i]);\r\n      }\r\n    } else {\r\n      $wrapperEl.append(slides);\r\n    }\r\n\r\n    if (params.loop) {\r\n      swiper.loopCreate();\r\n    }\r\n\r\n    if (!params.observer) {\r\n      swiper.update();\r\n    }\r\n  }\r\n\r\n  function prependSlide(slides) {\r\n    const swiper = this;\r\n    const {\r\n      params,\r\n      $wrapperEl,\r\n      activeIndex\r\n    } = swiper;\r\n\r\n    if (params.loop) {\r\n      swiper.loopDestroy();\r\n    }\r\n\r\n    let newActiveIndex = activeIndex + 1;\r\n\r\n    if (typeof slides === 'object' && 'length' in slides) {\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        if (slides[i]) $wrapperEl.prepend(slides[i]);\r\n      }\r\n\r\n      newActiveIndex = activeIndex + slides.length;\r\n    } else {\r\n      $wrapperEl.prepend(slides);\r\n    }\r\n\r\n    if (params.loop) {\r\n      swiper.loopCreate();\r\n    }\r\n\r\n    if (!params.observer) {\r\n      swiper.update();\r\n    }\r\n\r\n    swiper.slideTo(newActiveIndex, 0, false);\r\n  }\r\n\r\n  function addSlide(index, slides) {\r\n    const swiper = this;\r\n    const {\r\n      $wrapperEl,\r\n      params,\r\n      activeIndex\r\n    } = swiper;\r\n    let activeIndexBuffer = activeIndex;\r\n\r\n    if (params.loop) {\r\n      activeIndexBuffer -= swiper.loopedSlides;\r\n      swiper.loopDestroy();\r\n      swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\r\n    }\r\n\r\n    const baseLength = swiper.slides.length;\r\n\r\n    if (index <= 0) {\r\n      swiper.prependSlide(slides);\r\n      return;\r\n    }\r\n\r\n    if (index >= baseLength) {\r\n      swiper.appendSlide(slides);\r\n      return;\r\n    }\r\n\r\n    let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\r\n    const slidesBuffer = [];\r\n\r\n    for (let i = baseLength - 1; i >= index; i -= 1) {\r\n      const currentSlide = swiper.slides.eq(i);\r\n      currentSlide.remove();\r\n      slidesBuffer.unshift(currentSlide);\r\n    }\r\n\r\n    if (typeof slides === 'object' && 'length' in slides) {\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        if (slides[i]) $wrapperEl.append(slides[i]);\r\n      }\r\n\r\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\r\n    } else {\r\n      $wrapperEl.append(slides);\r\n    }\r\n\r\n    for (let i = 0; i < slidesBuffer.length; i += 1) {\r\n      $wrapperEl.append(slidesBuffer[i]);\r\n    }\r\n\r\n    if (params.loop) {\r\n      swiper.loopCreate();\r\n    }\r\n\r\n    if (!params.observer) {\r\n      swiper.update();\r\n    }\r\n\r\n    if (params.loop) {\r\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n    } else {\r\n      swiper.slideTo(newActiveIndex, 0, false);\r\n    }\r\n  }\r\n\r\n  function removeSlide(slidesIndexes) {\r\n    const swiper = this;\r\n    const {\r\n      params,\r\n      $wrapperEl,\r\n      activeIndex\r\n    } = swiper;\r\n    let activeIndexBuffer = activeIndex;\r\n\r\n    if (params.loop) {\r\n      activeIndexBuffer -= swiper.loopedSlides;\r\n      swiper.loopDestroy();\r\n      swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\r\n    }\r\n\r\n    let newActiveIndex = activeIndexBuffer;\r\n    let indexToRemove;\r\n\r\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\r\n      for (let i = 0; i < slidesIndexes.length; i += 1) {\r\n        indexToRemove = slidesIndexes[i];\r\n        if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\r\n        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\r\n      }\r\n\r\n      newActiveIndex = Math.max(newActiveIndex, 0);\r\n    } else {\r\n      indexToRemove = slidesIndexes;\r\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\r\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\r\n      newActiveIndex = Math.max(newActiveIndex, 0);\r\n    }\r\n\r\n    if (params.loop) {\r\n      swiper.loopCreate();\r\n    }\r\n\r\n    if (!params.observer) {\r\n      swiper.update();\r\n    }\r\n\r\n    if (params.loop) {\r\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n    } else {\r\n      swiper.slideTo(newActiveIndex, 0, false);\r\n    }\r\n  }\r\n\r\n  function removeAllSlides() {\r\n    const swiper = this;\r\n    const slidesIndexes = [];\r\n\r\n    for (let i = 0; i < swiper.slides.length; i += 1) {\r\n      slidesIndexes.push(i);\r\n    }\r\n\r\n    swiper.removeSlide(slidesIndexes);\r\n  }\r\n\r\n  function Manipulation(_ref) {\r\n    let {\r\n      swiper\r\n    } = _ref;\r\n    Object.assign(swiper, {\r\n      appendSlide: appendSlide.bind(swiper),\r\n      prependSlide: prependSlide.bind(swiper),\r\n      addSlide: addSlide.bind(swiper),\r\n      removeSlide: removeSlide.bind(swiper),\r\n      removeAllSlides: removeAllSlides.bind(swiper)\r\n    });\r\n  }\r\n\r\n  function effectInit(params) {\r\n    const {\r\n      effect,\r\n      swiper,\r\n      on,\r\n      setTranslate,\r\n      setTransition,\r\n      overwriteParams,\r\n      perspective\r\n    } = params;\r\n    on('beforeInit', () => {\r\n      if (swiper.params.effect !== effect) return;\r\n      swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\r\n\r\n      if (perspective && perspective()) {\r\n        swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\r\n      }\r\n\r\n      const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\r\n      Object.assign(swiper.params, overwriteParamsResult);\r\n      Object.assign(swiper.originalParams, overwriteParamsResult);\r\n    });\r\n    on('setTranslate', () => {\r\n      if (swiper.params.effect !== effect) return;\r\n      setTranslate();\r\n    });\r\n    on('setTransition', (_s, duration) => {\r\n      if (swiper.params.effect !== effect) return;\r\n      setTransition(duration);\r\n    });\r\n  }\r\n\r\n  function effectTarget(effectParams, $slideEl) {\r\n    if (effectParams.transformEl) {\r\n      return $slideEl.find(effectParams.transformEl).css({\r\n        'backface-visibility': 'hidden',\r\n        '-webkit-backface-visibility': 'hidden'\r\n      });\r\n    }\r\n\r\n    return $slideEl;\r\n  }\r\n\r\n  function effectVirtualTransitionEnd(_ref) {\r\n    let {\r\n      swiper,\r\n      duration,\r\n      transformEl,\r\n      allSlides\r\n    } = _ref;\r\n    const {\r\n      slides,\r\n      activeIndex,\r\n      $wrapperEl\r\n    } = swiper;\r\n\r\n    if (swiper.params.virtualTranslate && duration !== 0) {\r\n      let eventTriggered = false;\r\n      let $transitionEndTarget;\r\n\r\n      if (allSlides) {\r\n        $transitionEndTarget = transformEl ? slides.find(transformEl) : slides;\r\n      } else {\r\n        $transitionEndTarget = transformEl ? slides.eq(activeIndex).find(transformEl) : slides.eq(activeIndex);\r\n      }\r\n\r\n      $transitionEndTarget.transitionEnd(() => {\r\n        if (eventTriggered) return;\r\n        if (!swiper || swiper.destroyed) return;\r\n        eventTriggered = true;\r\n        swiper.animating = false;\r\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\r\n\r\n        for (let i = 0; i < triggerEvents.length; i += 1) {\r\n          $wrapperEl.trigger(triggerEvents[i]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function EffectFade(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      fadeEffect: {\r\n        crossFade: false,\r\n        transformEl: null\r\n      }\r\n    });\r\n\r\n    const setTranslate = () => {\r\n      const {\r\n        slides\r\n      } = swiper;\r\n      const params = swiper.params.fadeEffect;\r\n\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        const $slideEl = swiper.slides.eq(i);\r\n        const offset = $slideEl[0].swiperSlideOffset;\r\n        let tx = -offset;\r\n        if (!swiper.params.virtualTranslate) tx -= swiper.translate;\r\n        let ty = 0;\r\n\r\n        if (!swiper.isHorizontal()) {\r\n          ty = tx;\r\n          tx = 0;\r\n        }\r\n\r\n        const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\r\n        const $targetEl = effectTarget(params, $slideEl);\r\n        $targetEl.css({\r\n          opacity: slideOpacity\r\n        }).transform(`translate3d(${tx}px, ${ty}px, 0px)`);\r\n      }\r\n    };\r\n\r\n    const setTransition = duration => {\r\n      const {\r\n        transformEl\r\n      } = swiper.params.fadeEffect;\r\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\r\n      $transitionElements.transition(duration);\r\n      effectVirtualTransitionEnd({\r\n        swiper,\r\n        duration,\r\n        transformEl,\r\n        allSlides: true\r\n      });\r\n    };\r\n\r\n    effectInit({\r\n      effect: 'fade',\r\n      swiper,\r\n      on,\r\n      setTranslate,\r\n      setTransition,\r\n      overwriteParams: () => ({\r\n        slidesPerView: 1,\r\n        slidesPerGroup: 1,\r\n        watchSlidesProgress: true,\r\n        spaceBetween: 0,\r\n        virtualTranslate: !swiper.params.cssMode\r\n      })\r\n    });\r\n  }\r\n\r\n  function EffectCube(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      cubeEffect: {\r\n        slideShadows: true,\r\n        shadow: true,\r\n        shadowOffset: 20,\r\n        shadowScale: 0.94\r\n      }\r\n    });\r\n\r\n    const setTranslate = () => {\r\n      const {\r\n        $el,\r\n        $wrapperEl,\r\n        slides,\r\n        width: swiperWidth,\r\n        height: swiperHeight,\r\n        rtlTranslate: rtl,\r\n        size: swiperSize,\r\n        browser\r\n      } = swiper;\r\n      const params = swiper.params.cubeEffect;\r\n      const isHorizontal = swiper.isHorizontal();\r\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n      let wrapperRotate = 0;\r\n      let $cubeShadowEl;\r\n\r\n      if (params.shadow) {\r\n        if (isHorizontal) {\r\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\r\n\r\n          if ($cubeShadowEl.length === 0) {\r\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\r\n            $wrapperEl.append($cubeShadowEl);\r\n          }\r\n\r\n          $cubeShadowEl.css({\r\n            height: `${swiperWidth}px`\r\n          });\r\n        } else {\r\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\r\n\r\n          if ($cubeShadowEl.length === 0) {\r\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\r\n            $el.append($cubeShadowEl);\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        const $slideEl = slides.eq(i);\r\n        let slideIndex = i;\r\n\r\n        if (isVirtual) {\r\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\r\n        }\r\n\r\n        let slideAngle = slideIndex * 90;\r\n        let round = Math.floor(slideAngle / 360);\r\n\r\n        if (rtl) {\r\n          slideAngle = -slideAngle;\r\n          round = Math.floor(-slideAngle / 360);\r\n        }\r\n\r\n        const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\r\n        let tx = 0;\r\n        let ty = 0;\r\n        let tz = 0;\r\n\r\n        if (slideIndex % 4 === 0) {\r\n          tx = -round * 4 * swiperSize;\r\n          tz = 0;\r\n        } else if ((slideIndex - 1) % 4 === 0) {\r\n          tx = 0;\r\n          tz = -round * 4 * swiperSize;\r\n        } else if ((slideIndex - 2) % 4 === 0) {\r\n          tx = swiperSize + round * 4 * swiperSize;\r\n          tz = swiperSize;\r\n        } else if ((slideIndex - 3) % 4 === 0) {\r\n          tx = -swiperSize;\r\n          tz = 3 * swiperSize + swiperSize * 4 * round;\r\n        }\r\n\r\n        if (rtl) {\r\n          tx = -tx;\r\n        }\r\n\r\n        if (!isHorizontal) {\r\n          ty = tx;\r\n          tx = 0;\r\n        }\r\n\r\n        const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\r\n\r\n        if (progress <= 1 && progress > -1) {\r\n          wrapperRotate = slideIndex * 90 + progress * 90;\r\n          if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\r\n        }\r\n\r\n        $slideEl.transform(transform);\r\n\r\n        if (params.slideShadows) {\r\n          // Set shadows\r\n          let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\r\n          let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\r\n\r\n          if (shadowBefore.length === 0) {\r\n            shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\r\n            $slideEl.append(shadowBefore);\r\n          }\r\n\r\n          if (shadowAfter.length === 0) {\r\n            shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\r\n            $slideEl.append(shadowAfter);\r\n          }\r\n\r\n          if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\r\n          if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\r\n        }\r\n      }\r\n\r\n      $wrapperEl.css({\r\n        '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\r\n        'transform-origin': `50% 50% -${swiperSize / 2}px`\r\n      });\r\n\r\n      if (params.shadow) {\r\n        if (isHorizontal) {\r\n          $cubeShadowEl.transform(`translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\r\n        } else {\r\n          const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\r\n          const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\r\n          const scale1 = params.shadowScale;\r\n          const scale2 = params.shadowScale / multiplier;\r\n          const offset = params.shadowOffset;\r\n          $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\r\n        }\r\n      }\r\n\r\n      const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\r\n      $wrapperEl.transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\r\n    };\r\n\r\n    const setTransition = duration => {\r\n      const {\r\n        $el,\r\n        slides\r\n      } = swiper;\r\n      slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\r\n\r\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\r\n        $el.find('.swiper-cube-shadow').transition(duration);\r\n      }\r\n    };\r\n\r\n    effectInit({\r\n      effect: 'cube',\r\n      swiper,\r\n      on,\r\n      setTranslate,\r\n      setTransition,\r\n      perspective: () => true,\r\n      overwriteParams: () => ({\r\n        slidesPerView: 1,\r\n        slidesPerGroup: 1,\r\n        watchSlidesProgress: true,\r\n        resistanceRatio: 0,\r\n        spaceBetween: 0,\r\n        centeredSlides: false,\r\n        virtualTranslate: true\r\n      })\r\n    });\r\n  }\r\n\r\n  function createShadow(params, $slideEl, side) {\r\n    const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\r\n    const $shadowContainer = params.transformEl ? $slideEl.find(params.transformEl) : $slideEl;\r\n    let $shadowEl = $shadowContainer.children(`.${shadowClass}`);\r\n\r\n    if (!$shadowEl.length) {\r\n      $shadowEl = $(`<div class=\"swiper-slide-shadow${side ? `-${side}` : ''}\"></div>`);\r\n      $shadowContainer.append($shadowEl);\r\n    }\r\n\r\n    return $shadowEl;\r\n  }\r\n\r\n  function EffectFlip(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      flipEffect: {\r\n        slideShadows: true,\r\n        limitRotation: true,\r\n        transformEl: null\r\n      }\r\n    });\r\n\r\n    const setTranslate = () => {\r\n      const {\r\n        slides,\r\n        rtlTranslate: rtl\r\n      } = swiper;\r\n      const params = swiper.params.flipEffect;\r\n\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        const $slideEl = slides.eq(i);\r\n        let progress = $slideEl[0].progress;\r\n\r\n        if (swiper.params.flipEffect.limitRotation) {\r\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\r\n        }\r\n\r\n        const offset = $slideEl[0].swiperSlideOffset;\r\n        const rotate = -180 * progress;\r\n        let rotateY = rotate;\r\n        let rotateX = 0;\r\n        let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\r\n        let ty = 0;\r\n\r\n        if (!swiper.isHorizontal()) {\r\n          ty = tx;\r\n          tx = 0;\r\n          rotateX = -rotateY;\r\n          rotateY = 0;\r\n        } else if (rtl) {\r\n          rotateY = -rotateY;\r\n        }\r\n\r\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\r\n\r\n        if (params.slideShadows) {\r\n          // Set shadows\r\n          let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\r\n          let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\r\n\r\n          if (shadowBefore.length === 0) {\r\n            shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');\r\n          }\r\n\r\n          if (shadowAfter.length === 0) {\r\n            shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\r\n          }\r\n\r\n          if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\r\n          if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\r\n        }\r\n\r\n        const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\r\n        const $targetEl = effectTarget(params, $slideEl);\r\n        $targetEl.transform(transform);\r\n      }\r\n    };\r\n\r\n    const setTransition = duration => {\r\n      const {\r\n        transformEl\r\n      } = swiper.params.flipEffect;\r\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\r\n      $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\r\n      effectVirtualTransitionEnd({\r\n        swiper,\r\n        duration,\r\n        transformEl\r\n      });\r\n    };\r\n\r\n    effectInit({\r\n      effect: 'flip',\r\n      swiper,\r\n      on,\r\n      setTranslate,\r\n      setTransition,\r\n      perspective: () => true,\r\n      overwriteParams: () => ({\r\n        slidesPerView: 1,\r\n        slidesPerGroup: 1,\r\n        watchSlidesProgress: true,\r\n        spaceBetween: 0,\r\n        virtualTranslate: !swiper.params.cssMode\r\n      })\r\n    });\r\n  }\r\n\r\n  function EffectCoverflow(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      coverflowEffect: {\r\n        rotate: 50,\r\n        stretch: 0,\r\n        depth: 100,\r\n        scale: 1,\r\n        modifier: 1,\r\n        slideShadows: true,\r\n        transformEl: null\r\n      }\r\n    });\r\n\r\n    const setTranslate = () => {\r\n      const {\r\n        width: swiperWidth,\r\n        height: swiperHeight,\r\n        slides,\r\n        slidesSizesGrid\r\n      } = swiper;\r\n      const params = swiper.params.coverflowEffect;\r\n      const isHorizontal = swiper.isHorizontal();\r\n      const transform = swiper.translate;\r\n      const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\r\n      const rotate = isHorizontal ? params.rotate : -params.rotate;\r\n      const translate = params.depth; // Each slide offset from center\r\n\r\n      for (let i = 0, length = slides.length; i < length; i += 1) {\r\n        const $slideEl = slides.eq(i);\r\n        const slideSize = slidesSizesGrid[i];\r\n        const slideOffset = $slideEl[0].swiperSlideOffset;\r\n        const offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\r\n        let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\r\n        let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\r\n\r\n        let translateZ = -translate * Math.abs(offsetMultiplier);\r\n        let stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\r\n\r\n        if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\r\n          stretch = parseFloat(params.stretch) / 100 * slideSize;\r\n        }\r\n\r\n        let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\r\n        let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\r\n        let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\r\n\r\n        if (Math.abs(translateX) < 0.001) translateX = 0;\r\n        if (Math.abs(translateY) < 0.001) translateY = 0;\r\n        if (Math.abs(translateZ) < 0.001) translateZ = 0;\r\n        if (Math.abs(rotateY) < 0.001) rotateY = 0;\r\n        if (Math.abs(rotateX) < 0.001) rotateX = 0;\r\n        if (Math.abs(scale) < 0.001) scale = 0;\r\n        const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\r\n        const $targetEl = effectTarget(params, $slideEl);\r\n        $targetEl.transform(slideTransform);\r\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\r\n\r\n        if (params.slideShadows) {\r\n          // Set shadows\r\n          let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\r\n          let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\r\n\r\n          if ($shadowBeforeEl.length === 0) {\r\n            $shadowBeforeEl = createShadow(params, $slideEl, isHorizontal ? 'left' : 'top');\r\n          }\r\n\r\n          if ($shadowAfterEl.length === 0) {\r\n            $shadowAfterEl = createShadow(params, $slideEl, isHorizontal ? 'right' : 'bottom');\r\n          }\r\n\r\n          if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\r\n          if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\r\n        }\r\n      }\r\n    };\r\n\r\n    const setTransition = duration => {\r\n      const {\r\n        transformEl\r\n      } = swiper.params.coverflowEffect;\r\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\r\n      $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\r\n    };\r\n\r\n    effectInit({\r\n      effect: 'coverflow',\r\n      swiper,\r\n      on,\r\n      setTranslate,\r\n      setTransition,\r\n      perspective: () => true,\r\n      overwriteParams: () => ({\r\n        watchSlidesProgress: true\r\n      })\r\n    });\r\n  }\r\n\r\n  function EffectCreative(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      creativeEffect: {\r\n        transformEl: null,\r\n        limitProgress: 1,\r\n        shadowPerProgress: false,\r\n        progressMultiplier: 1,\r\n        perspective: true,\r\n        prev: {\r\n          translate: [0, 0, 0],\r\n          rotate: [0, 0, 0],\r\n          opacity: 1,\r\n          scale: 1\r\n        },\r\n        next: {\r\n          translate: [0, 0, 0],\r\n          rotate: [0, 0, 0],\r\n          opacity: 1,\r\n          scale: 1\r\n        }\r\n      }\r\n    });\r\n\r\n    const getTranslateValue = value => {\r\n      if (typeof value === 'string') return value;\r\n      return `${value}px`;\r\n    };\r\n\r\n    const setTranslate = () => {\r\n      const {\r\n        slides,\r\n        $wrapperEl,\r\n        slidesSizesGrid\r\n      } = swiper;\r\n      const params = swiper.params.creativeEffect;\r\n      const {\r\n        progressMultiplier: multiplier\r\n      } = params;\r\n      const isCenteredSlides = swiper.params.centeredSlides;\r\n\r\n      if (isCenteredSlides) {\r\n        const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\r\n        $wrapperEl.transform(`translateX(calc(50% - ${margin}px))`);\r\n      }\r\n\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        const $slideEl = slides.eq(i);\r\n        const slideProgress = $slideEl[0].progress;\r\n        const progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);\r\n        let originalProgress = progress;\r\n\r\n        if (!isCenteredSlides) {\r\n          originalProgress = Math.min(Math.max($slideEl[0].originalProgress, -params.limitProgress), params.limitProgress);\r\n        }\r\n\r\n        const offset = $slideEl[0].swiperSlideOffset;\r\n        const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\r\n        const r = [0, 0, 0];\r\n        let custom = false;\r\n\r\n        if (!swiper.isHorizontal()) {\r\n          t[1] = t[0];\r\n          t[0] = 0;\r\n        }\r\n\r\n        let data = {\r\n          translate: [0, 0, 0],\r\n          rotate: [0, 0, 0],\r\n          scale: 1,\r\n          opacity: 1\r\n        };\r\n\r\n        if (progress < 0) {\r\n          data = params.next;\r\n          custom = true;\r\n        } else if (progress > 0) {\r\n          data = params.prev;\r\n          custom = true;\r\n        } // set translate\r\n\r\n\r\n        t.forEach((value, index) => {\r\n          t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\r\n        }); // set rotates\r\n\r\n        r.forEach((value, index) => {\r\n          r[index] = data.rotate[index] * Math.abs(progress * multiplier);\r\n        });\r\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\r\n        const translateString = t.join(', ');\r\n        const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\r\n        const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\r\n        const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\r\n        const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`; // Set shadows\r\n\r\n        if (custom && data.shadow || !custom) {\r\n          let $shadowEl = $slideEl.children('.swiper-slide-shadow');\r\n\r\n          if ($shadowEl.length === 0 && data.shadow) {\r\n            $shadowEl = createShadow(params, $slideEl);\r\n          }\r\n\r\n          if ($shadowEl.length) {\r\n            const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\r\n            $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\r\n          }\r\n        }\r\n\r\n        const $targetEl = effectTarget(params, $slideEl);\r\n        $targetEl.transform(transform).css({\r\n          opacity: opacityString\r\n        });\r\n\r\n        if (data.origin) {\r\n          $targetEl.css('transform-origin', data.origin);\r\n        }\r\n      }\r\n    };\r\n\r\n    const setTransition = duration => {\r\n      const {\r\n        transformEl\r\n      } = swiper.params.creativeEffect;\r\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\r\n      $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\r\n      effectVirtualTransitionEnd({\r\n        swiper,\r\n        duration,\r\n        transformEl,\r\n        allSlides: true\r\n      });\r\n    };\r\n\r\n    effectInit({\r\n      effect: 'creative',\r\n      swiper,\r\n      on,\r\n      setTranslate,\r\n      setTransition,\r\n      perspective: () => swiper.params.creativeEffect.perspective,\r\n      overwriteParams: () => ({\r\n        watchSlidesProgress: true,\r\n        virtualTranslate: !swiper.params.cssMode\r\n      })\r\n    });\r\n  }\r\n\r\n  function EffectCards(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      cardsEffect: {\r\n        slideShadows: true,\r\n        transformEl: null\r\n      }\r\n    });\r\n\r\n    const setTranslate = () => {\r\n      const {\r\n        slides,\r\n        activeIndex\r\n      } = swiper;\r\n      const params = swiper.params.cardsEffect;\r\n      const {\r\n        startTranslate,\r\n        isTouched\r\n      } = swiper.touchEventsData;\r\n      const currentTranslate = swiper.translate;\r\n\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        const $slideEl = slides.eq(i);\r\n        const slideProgress = $slideEl[0].progress;\r\n        const progress = Math.min(Math.max(slideProgress, -4), 4);\r\n        let offset = $slideEl[0].swiperSlideOffset;\r\n\r\n        if (swiper.params.centeredSlides && !swiper.params.cssMode) {\r\n          swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);\r\n        }\r\n\r\n        if (swiper.params.centeredSlides && swiper.params.cssMode) {\r\n          offset -= slides[0].swiperSlideOffset;\r\n        }\r\n\r\n        let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\r\n        let tY = 0;\r\n        const tZ = -100 * Math.abs(progress);\r\n        let scale = 1;\r\n        let rotate = -2 * progress;\r\n        let tXAdd = 8 - Math.abs(progress) * 0.75;\r\n        const isSwipeToNext = (i === activeIndex || i === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\r\n        const isSwipeToPrev = (i === activeIndex || i === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\r\n\r\n        if (isSwipeToNext || isSwipeToPrev) {\r\n          const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\r\n          rotate += -28 * progress * subProgress;\r\n          scale += -0.5 * subProgress;\r\n          tXAdd += 96 * subProgress;\r\n          tY = `${-25 * subProgress * Math.abs(progress)}%`;\r\n        }\r\n\r\n        if (progress < 0) {\r\n          // next\r\n          tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\r\n        } else if (progress > 0) {\r\n          // prev\r\n          tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\r\n        } else {\r\n          tX = `${tX}px`;\r\n        }\r\n\r\n        if (!swiper.isHorizontal()) {\r\n          const prevY = tY;\r\n          tY = tX;\r\n          tX = prevY;\r\n        }\r\n\r\n        const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\r\n        const transform = `\r\n      translate3d(${tX}, ${tY}, ${tZ}px)\r\n      rotateZ(${rotate}deg)\r\n      scale(${scaleString})\r\n    `;\r\n\r\n        if (params.slideShadows) {\r\n          // Set shadows\r\n          let $shadowEl = $slideEl.find('.swiper-slide-shadow');\r\n\r\n          if ($shadowEl.length === 0) {\r\n            $shadowEl = createShadow(params, $slideEl);\r\n          }\r\n\r\n          if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\r\n        }\r\n\r\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\r\n        const $targetEl = effectTarget(params, $slideEl);\r\n        $targetEl.transform(transform);\r\n      }\r\n    };\r\n\r\n    const setTransition = duration => {\r\n      const {\r\n        transformEl\r\n      } = swiper.params.cardsEffect;\r\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\r\n      $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\r\n      effectVirtualTransitionEnd({\r\n        swiper,\r\n        duration,\r\n        transformEl\r\n      });\r\n    };\r\n\r\n    effectInit({\r\n      effect: 'cards',\r\n      swiper,\r\n      on,\r\n      setTranslate,\r\n      setTransition,\r\n      perspective: () => true,\r\n      overwriteParams: () => ({\r\n        watchSlidesProgress: true,\r\n        virtualTranslate: !swiper.params.cssMode\r\n      })\r\n    });\r\n  }\r\n\r\n  // Swiper Class\r\n  const modules = [Virtual, Keyboard, Mousewheel, Navigation, Pagination, Scrollbar, Parallax, Zoom, Lazy, Controller, A11y, History, HashNavigation, Autoplay, Thumb, freeMode, Grid, Manipulation, EffectFade, EffectCube, EffectFlip, EffectCoverflow, EffectCreative, EffectCards];\r\n  Swiper.use(modules);\r\n\r\n  return Swiper;\r\n\r\n}));\r\n//# sourceMappingURL=swiper-bundle.js.map\r\n"],"names":["global","factory","exports","module","define","amd","globalThis","self","Swiper","isObject$1","obj","constructor","Object","extend$1","target","src","keys","forEach","key","length","ssrDocument","body","activeElement","blur","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","createElementNS","importNode","hash","host","hostname","href","origin","pathname","protocol","search","getDocument","doc","document","userAgent","location","pushState","go","back","CustomEvent","this","addEventListener","getComputedStyle","getPropertyValue","Image","screen","clearTimeout","matchMedia","requestAnimationFrame","callback","setTimeout","cancelAnimationFrame","id","window","win","ssrWindow","Dom7","Array","items","super","proto","__proto__","defineProperty","get","set","value","makeReactive","arrayFlat","arr","res","el","isArray","push","prototype","filter","call","$","selector","context","html","trim","indexOf","toCreate","tempParent","innerHTML","i","a","querySelectorAll","qsa","nodeType","uniqueArray","arrayUnique","Methods","addClass","classNames","classes","map","c","split","classList","add","removeClass","_len2","arguments","_key2","remove","hasClass","_len4","_key4","arrayFilter","className","contains","toggleClass","_len3","_key3","toggle","attr","attrs","getAttribute","attrName","removeAttr","removeAttribute","transform","transition","duration","transitionDuration","on","_len5","args","_key5","targetSelector","listener","capture","handleLiveEvent","e","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","eventType","j","event","dom7LiveListeners","dom7Listeners","proxyListener","_len6","_key6","handlers","handler","dom7proxy","splice","removeEventListener","getWindow","_len9","_key9","evt","detail","bubbles","cancelable","data","dataIndex","dispatchEvent","transitionEnd","dom","fireCallBack","off","outerWidth","includeMargins","styles","offsetWidth","parseFloat","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","props","prop","index","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","returnIndex","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","eq","find","foundElements","found","removeChild","nextTick","delay","now","Date","getTranslate","axis","matrix","curTransform","curStyle","currentStyle","getComputedStyle$1","WebKitCSSMatrix","webkitTransform","replace","join","transformMatrix","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","o","slice","node","HTMLElement","extend","to","noExtend","nextSource","isNode","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","isObject","__swiper__","varName","varValue","_ref","targetPosition","side","swiper","translate","time","startTime","params","speed","wrapperEl","scrollSnapType","cssModeFrameID","dir","startPosition","isOutOfBound","current","animate","getTime","progress","Math","max","min","easeProgress","cos","PI","currentPosition","scrollTo","overflow","support1","getSupport","smoothScroll","documentElement","touch","DocumentTouch","passiveListener","supportsPassive","opts","gestures","calcSupport","getDevice","overrides","deviceCached","_temp","support","platform","navigator","ua","device","android","screenWidth","width","screenHeight","height","match","ipad","ipod","iphone","windows","macos","os","ios","calcDevice","getBrowser","browser1","isSafari","toLowerCase","isWebView","test","calcBrowser","methodName","fn","writable","eventsEmitter","priority","method","eventsListeners","onceHandler","__emitterProxy","_len","_key","eventsAnyListeners","eventHandler","emit","transitionEmit","runCallbacks","direction","step","activeIndex","previousIndex","onTouchStart1","touchEventsData","touches","enabled","animating","preventInteractionOnTransition","cssMode","loop","loopFix","originalEvent","$targetEl","touchEventsTarget","isTouchEvent","type","which","button","isTouched","isMoved","noSwipingClass","shadowRoot","path","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","getRootNode","closestElement","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","assign","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","updateSize","swipeDirection","threshold","allowThresholdMove","focusableElements","nodeName","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","freeMode","onTouchStart","rtlTranslate","rtl","targetTouch","changedTouches","preventedByNestedSwiper","touchReleaseOnEdges","isVertical","maxTranslate","minTranslate","diffX","diffY","sqrt","touchAngle","isHorizontal","atan2","abs","nested","stopPropagation","$wrapperEl","trigger","allowMomentumBounce","grabCursor","allowSlideNext","allowSlidePrev","setGrabCursor","diff","touchRatio","currentTranslate","startTranslate","disableParentSwiper","resistanceRatio","resistance","followFinger","watchSlidesProgress","updateActiveIndex","updateSlidesClasses","onTouchMove","updateProgress","setTranslate","onTouchEnd1","slidesGrid","touchEndTime","pathTree","composedPath","updateClickedSlide","timeDiff","lastClickTime","destroyed","currentPos","onTouchEnd","stopIndex","slidesSizesGrid","slidesPerGroupSkip","slidesPerGroup","increment","groupSize","ratio","longSwipesMs","longSwipes","slideTo","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","onResize","breakpoints","setBreakpoint","snapGrid","updateSlides","slidesPerView","isEnd","isBeginning","centeredSlides","slides","autoplay","running","paused","run","watchOverflow","checkOverflow","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","previousTranslate","translatesDiff","newProgress","dummyEventAttached","dummyEventListener","events1","touchEvents","domMethod","swiperMethod","start","passiveListeners","passive","move","end","cancel","updateOnWindowResize","isGridEnabled","grid","rows","defaults","init","initialSlide","resizeObserver","createElements","url","autoHeight","setWrapperSize","virtualTranslate","effect","breakpointsBase","spaceBetween","slidesPerGroupAuto","centeredSlidesBounds","slidesOffsetBefore","slidesOffsetAfter","normalizeSlideIndex","centerInsufficientSlides","roundLengths","simulateTouch","touchMoveStopPropagation","uniqueNavElements","slideToClickedSlide","preloadImages","updateOnImagesReady","loopAdditionalSlides","slidePrevClass","slideDuplicatePrevClass","wrapperClass","runCallbacksOnInit","_emitClasses","moduleExtendParams","allModulesParams","moduleParamName","moduleParams","auto","prototypes","$el","clientWidth","clientHeight","parseInt","css","Number","isNaN","size","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","swiperSize","wrongRTL","isVirtual","virtual","previousSlidesLength","slideClass","slidesLength","offsetBefore","offsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","initSlides","slide","gridEnabled","updateSlide","shouldResetSlideSize","slideStyles","currentTransform","currentWebKitTransform","slideSize","outerHeight","paddingLeft","paddingRight","marginLeft","boxSizing","floor","swiperSlideSize","virtualSize","updateWrapperSize","newSlidesGrid","slidesGridItem","_","slideIndex","allSlidesSize","slideSizeValue","maxSnap","snap","allSlidesOffset","snapIndex","setCSSProperty","addToSnapGrid","addToSlidesGrid","v","updateSlidesOffset","maxBackfaceHiddenSlides","containerModifierClass","updateAutoHeight","activeSlides","newHeight","setTransition","getSlideByIndex","visibleSlides","each","ceil","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","offsetCenter","slideVisibleClass","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","originalProgress","multiplier","wasBeginning","wasEnd","realIndex","activeSlide","slideActiveClass","slideNextClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicateClass","nextAll","nextSlide","prevSlide","emitSlidesClasses","newActiveIndex","previousRealIndex","previousSnapIndex","skip","initialized","slideFound","clickedSlide","clickedIndex","byController","x","y","translateTo","translateBounds","internal","newTranslate","isH","animateCSSModeScroll","behavior","onTranslateToWrapperTransitionEnd","initial","Error","indexAsNumber","isFinite","normalizedGrid","normalizedGridNext","normalizedTranslate","transitionStart","t","_immediateVirtual","_swiperImmediateVirtual","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","loopedSlides","slideNext","perGroup","slidesPerViewDynamic","loopPreventsSlide","_clientLeft","rewind","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","slideReset","slideToClosest","currentSnap","slideToIndex","loopCreate","$selector","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","append","prependSlides","appendSlides","cloneNode","i1","loopDestroy","moving","isLocked","cursor","bind","onTouchMove1","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasEnabled","emitContainerClasses","fill","directionChanged","changeDirection","isEnabled","disable","enable","needsReLoop","containerEl","currentHeight","innerHeight","points","point","minRatio","substr","b","wasLocked","lastSlideIndex","lastSlideRightEdge","addClasses","suffixes","entries","prefix","item","resultClasses","prepareClasses","autoheight","centered","removeClasses","loadImage","imageEl","srcset","sizes","checkForComplete","onReady","complete","image","onload","onerror","imagesLoaded","imagesToLoad","update","currentSrc","swipers","newParams","Swiper1","browser","modules","__modules__","mod","extendParams","once","swiperParams","extendedDefaults","passedParams","eventName","onAny","desktop","touchEventsTouch","touchEventsDesktop","clickTimeout","velocities","unsetGrabCursor","setProgress","cls","slideEl","updates","getSlideClasses","view","exact","breakLoop","spv","i2","i3","translateValue","translated","newDirection","needUpdate","currentDirection","mounted","getWrapperSelector","querySelector","options","getWrapper","wrapper","mount","attachEvents","deleteInstance","cleanStyles","object","e1","deleteProps","newDefaults","static","m","installModule","checkProps","element","appendSlide1","observer","prependSlide1","addSlide","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","i7","removeSlide1","slidesIndexes","indexToRemove","removeAllSlides1","removeSlide","overwriteParams","perspective","overwriteParamsResult","_s","effectTarget","effectParams","$slideEl","transformEl","allSlides","$transitionEndTarget","eventTriggered","triggerEvents","$shadowContainer","shadowClass","$shadowEl","prototypeGroup","protoMethod","use","resizeHandler","ResizeObserver","newWidth","_ref2","contentBoxSize","contentRect","inlineSize","blockSize","observe","orientationChangeHandler","unobserve","attach","MutationObserver","WebkitMutationObserver","mutations","observerUpdate","attributes","childList","characterData","observers","observeParents","observeSlideChildren","containerParents","disconnect","cssModeTimeout","renderSlide","cache","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","previousOffset","offsetProp","slidesAfter","slidesBefore","lazy","load","renderExternal","slidesToRender","renderExternalUpdate","onRendered","prependIndexes","appendIndexes","i4","sort","numberOfNewSlides","newCache","cachedIndex","$cachedEl","cachedElIndex","keyCode","charCode","keyboard","pageUpDown","isPageUp","kc","isPageDown","isArrowRight","isArrowDown","isArrowLeft","isArrowUp","shiftKey","altKey","ctrlKey","metaKey","onlyInViewport","inView","swiperHeight","windowWidth","windowHeight","swiperOffset","swiperWidth","swiperCoord","returnValue","slidePrev","handle","mousewheel","releaseOnEdges","invert","forceToAxis","sensitivity","eventsTarget","thresholdDelta","thresholdTime","handleMouseEnter","mouseEntered","handleMouseLeave","animateSlider","newEvent","delta","lastScrollTime","raw","rtlFactor","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","pixelY","pixelX","positions","sign","lastEventBeforeSnap","position","sticky","timeout","recentWheelEvents","shift","prevEvent","firstEvent","snapToThreshold","ignoreWheelEvents","autoplayDisableOnInteraction","stop","getEl","toggleEl","disabled","disabledClass","tagName","lockClass","$nextEl","$prevEl","onPrevClick","onNextClick","createElementIfNotDefined","destroy","hideOnClick","hiddenClass","targetEl","pagination","clickable","isHidden","pfx","renderProgressbar","renderFraction","renderCustom","dynamicBullets","dynamicMainBullets","formatFractionCurrent","number","formatFractionTotal","bulletClass","bulletActiveClass","modifierClass","currentClass","totalClass","progressbarOppositeClass","clickableClass","horizontalClass","verticalClass","setSideBullets","$bulletEl","isPaginationDisabled","total","paginationType","bullets","firstIndex","bulletSize","dynamicBulletIndex","suffix","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","midIndex","classesToSelector","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","render","paginationHTML","numberOfBullets","renderBullet","bulletElement","dragStartPos","dragSize","scrollbar","$dragEl","newSize","newPos","trackSize","hide","opacity","divider","display","getPointerPosition","clientX","clientY","setDragPosition","positionRatio","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","activeListener","eventMethod","$swiperEl","dragClass","dragEl","draggable","parallax","setTransform","p","currentOpacity","currentScale","_swiper","parallaxEl","$parallaxEl","parallaxDuration","zoom","maxRatio","containerClass","zoomedSlideClass","gesturesEnabled","fakeGestureTouched","isScaling","gesture","minX","minY","maxX","maxY","touchesStart","touchesCurrent","prevPositionX","getDistanceBetweenTouches","x1","y1","x2","y2","onGestureStart","fakeGestureMoved","scaleStart","$imageEl","$imageWrapEl","onGestureChange","scaleMove","onGestureEnd","slideWidth","slideHeight","scaledWidth","scaledHeight","velocity","prevPositionY","prevTime","onTransitionEnd","zoomIn","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","touchAction","zoomOut","zoomToggle","getListeners","activeListenerWithCapture","getSlideSelector","toggleGestures","slideSelector","enableGestures","disableGestures","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionY","momentumDistanceY","newPositionX","momentumDuration","loadInDuplicate","elementClass","loadedClass","loadingClass","$images","background","$pictureEl","sourceEl","$source","preloaderClass","slideOriginalIndex","loadInSlide","slideExist","initialImageLoaded","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","i5","checkInViewOnLoad","$scrollElement","scrollingElement","isWindow","scrollElementWidth","scrollElementHeight","scrollHandlerAttached","checkInView","loadOnTransitionStart","LinearSpline","binarySearch","guess","array","interpolate","removeSpline","controller","control","spline","inverse","by","_t","getInterpolateFunction","controlledTranslate","controlled","setControlledTranslate","setControlledTransition","notificationClass","nextSlideMessage","firstSlideMessage","paginationBulletMessage","slideLabelMessage","containerRoleDescriptionMessage","itemRoleDescriptionMessage","notify","message","notification","liveRegion","makeElNotFocusable","addElRole","role","addElRoleDescription","description","onEnterOrSpaceKey","a11y","lastSlideMessage","prevSlideMessage","click","hasPagination","hasClickablePagination","wrapperId","makeElFocusable","addElLabel","controls","addElControls","handleFocus","includes","isActive","isVisible","$containerEl","containerMessage","repeat","round","random","live","addElLive","slideRole","initNavEl","disableEl","enableEl","updateNavigation","bulletEl","updatePagination","root","replaceState","paths","getPathValues","urlOverride","URL","part","pathArray","setHistory","history","slugify","currentState","state","scrollToSlide","setHistoryPopState","hashNavigation","onHashChange","newHash","setHash","watchState","$activeSlideEl","autoplayResult","reverseDirection","stopOnLastSlide","pause","waitForTransition","onVisibilityChange","visibilityState","onMouseEnter","disableOnInteraction","onMouseLeave","pauseOnMouseEnter","thumbs","autoScrollOffset","slideThumbActiveClass","thumbsContainerClass","onThumbClick","thumbsSwiper","currentIndex","thumbsParams","SwiperClass","thumbsSwiperParams","useOffset","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","multipleActiveThumbs","i6","swiperCreated","momentum","momentumRatio","momentumBounce","momentumVelocityRatio","minimumVelocity","lastMoveEvent","pop","velocityEvent","distance","momentumDistance","newPosition","doBounce","momentumBounceRatio","bounceAmount","afterBouncePosition","needsLoopFix","moveDistance","currentSlideSize","numFullColumns","slidesPerRow","slidesNumberEvenToRows","newSlideOrderIndex","column","row","groupIndex","slideIndexInGroup","columnsInGroup","order","fadeEffect","crossFade","tx","ty","slideOpacity","effectVirtualTransitionEnd","slideShadows","shadowScale","effectInit","cubeEffect","wrapperRotate","shadow","$cubeShadowEl","slideAngle","tz","shadowBefore","shadowAfter","shadowOffset","shadowAngle","sin","scale1","scale2","zFactor","limitRotation","flipEffect","rotateY","rotateX","zIndex","createShadow","rotate","stretch","depth","coverflowEffect","center","offsetMultiplier","modifier","translateZ","slideTransform","$shadowBeforeEl","$shadowAfterEl","creativeEffect","limitProgress","shadowPerProgress","progressMultiplier","getTranslateValue","margin","isCenteredSlides","r","custom","translateString","scaleString","opacityString","rotateString","shadowOpacity","cardsEffect","tX","tY","tZ","tXAdd","isSwipeToNext","isSwipeToPrev","subProgress","prevY"],"version":3,"file":"index.9b58f002.js.map"}